<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell.Controls"
                    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell"
                    xmlns:automation="clr-namespace:Microsoft.Expression.Framework.Diagnostics"
                    xmlns:controls="clr-namespace:Microsoft.Expression.Framework.Controls"
                    x:Uid="ResourceDictionary_1">
  <Style x:Uid="Style_1" TargetType="{x:Type vs:DocumentGroupControl}">
    <Style.Resources>
      <ResourceDictionary x:Uid="ResourceDictionary_2">
        <DataTemplate x:Uid="DataTemplate_1" DataType="{x:Type vsshell:View}">
          <vs:ViewPresenter x:Uid="vs:ViewPresenter_1" ContentControl.Content="{Binding Content}">
            <vs:ViewPresenter.View>
              <Binding/>
            </vs:ViewPresenter.View>
            <vs:ViewPresenter.ContainingElement>
              <Binding/>
            </vs:ViewPresenter.ContainingElement>
          </vs:ViewPresenter>
        </DataTemplate>
        <Style x:Uid="Style_2" x:Key="DocumentGroupControlDropDownMenuItem" TargetType="{x:Type MenuItem}"
               BasedOn="{StaticResource {x:Type MenuItem}}">
          <Setter x:Uid="Setter_3" Property="MenuItem.IsChecked">
            <Setter.Value>
              <Binding Path="IsSelected"/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_1346" Property="MenuItem.Command"
                  Value="{x:Static vs:ViewCommands.ActivateDocumentViewCommand}"/>
          <Setter x:Uid="Setter_1358" Property="MenuItem.CommandParameter">
            <Setter.Value>
              <Binding/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_1354" Property="automation:AutomationElement.Id">
            <Setter.Value>
              <Binding Path="AutomationIdentifier"/>
            </Setter.Value>
          </Setter>
        </Style>
      </ResourceDictionary>
    </Style.Resources>
    <Setter x:Uid="Setter_1" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_1" TargetType="{x:Type vs:DocumentGroupControl}">
          <vs:DockTarget x:Name="RootDocumentGroupControl" x:Uid="vs:DockTarget_1" DockSiteType="NonDraggable"
                         DockTargetType="SidesOnly" Border.Background="Transparent" Border.BorderThickness="0">
            <Grid x:Uid="Grid_1">
              <Grid.RowDefinitions>
                <RowDefinition x:Uid="RowDefinition_1" Height="Auto"/>
                <RowDefinition x:Uid="RowDefinition_2" Height="*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Uid="ColumnDefinition_1" Width="*"/>
                <ColumnDefinition x:Uid="ColumnDefinition_2" Width="Auto"/>
              </Grid.ColumnDefinitions>
              <vs:DocumentTabPanel x:Name="DocumentTabStrip" x:Uid="DocumentTabStrip" Grid.Row="0" Grid.Column="0"
                                   FrameworkElement.Margin="0,2,2,0" Panel.IsItemsHost="true" UIElement.Focusable="false"/>
              <controls:MenuButton x:Name="TabPopupButton" automation:AutomationElement.Id="ViewMenuButton" x:Uid="TabPopupButton"
                                   Grid.Row="0" Grid.Column="1" FrameworkElement.MinWidth="0" FrameworkElement.Width="14"
                                   FrameworkElement.Height="14" FrameworkElement.Margin="0,0,3,0" UIElement.Focusable="false"
                                   FrameworkElement.ToolTip="Active files">
                <Control.Template>
                  <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type Button}">
                    <controls:Icon x:Name="ContentSite" x:Uid="ContentSite" SourceBrush="{DynamicResource ViewListIcon}"
                                   RedChroma="{DynamicResource MainWindowBackgroundBrush}" GreenChroma="{DynamicResource IconBrush}"
                                   UIElement.Opacity="0.5" FrameworkElement.Width="14" FrameworkElement.Height="14"/>
                    <ControlTemplate.Triggers>
                      <Trigger x:Uid="Trigger_1" Property="UIElement.IsMouseOver" Value="true">
                        <Setter x:Uid="Setter_1355" TargetName="ContentSite" Property="UIElement.Opacity" Value="1"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Control.Template>
                <controls:MenuButton.DropDownMenu>
                  <ContextMenu x:Uid="ContextMenu_1"
                               ItemsControl.ItemContainerStyle="{DynamicResource DocumentGroupControlDropDownMenuItem}">
                    <ItemsControl.ItemsSource>
                      <Binding Path="VisibleChildren"/>
                    </ItemsControl.ItemsSource>
                    <ItemsControl.ItemTemplate>
                      <DataTemplate x:Uid="DataTemplate_2" DataType="{x:Type vsshell:View}">
                        <ContentPresenter x:Uid="ContentPresenter_1">
                          <ContentPresenter.Content>
                            <Binding Path="Title"/>
                          </ContentPresenter.Content>
                        </ContentPresenter>
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ContextMenu>
                </controls:MenuButton.DropDownMenu>
              </controls:MenuButton>
              <ContentPresenter x:Uid="ContentPresenter_2" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                                FrameworkElement.Margin="{TemplateBinding Control.Padding}" ContentSource="SelectedContent"/>
            </Grid>
          </vs:DockTarget>
          <ControlTemplate.Triggers>
            <DataTrigger x:Uid="DataTrigger_1" Value="0">
              <DataTrigger.Binding>
                <Binding Path="Items.Count" RelativeSource="{RelativeSource Self}"/>
              </DataTrigger.Binding>
              <Setter x:Uid="Setter_1356" TargetName="RootDocumentGroupControl" Property="UIElement.Visibility"
                      Value="Hidden"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>