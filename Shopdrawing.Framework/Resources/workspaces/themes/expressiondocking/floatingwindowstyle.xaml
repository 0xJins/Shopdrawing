<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell.Controls"
                    xmlns:data="clr-namespace:Microsoft.Expression.Framework.Data"
                    xmlns:ExpressionExtension="clr-namespace:Microsoft.Expression.Framework.Workspaces.Extension"
                    x:Uid="ResourceDictionary_1">
  <data:AdditionMultiConverter x:Key="SumConverter" x:Uid="data:AdditionMultiConverter_1"/>
  <data:BoolToDoubleConverter x:Key="BorderThicknessWhenFloatingConverter" x:Uid="data:BoolToDoubleConverter_1"
                              TrueValue="{x:Static ExpressionExtension:ExpressionDockingConstants.DoubleSizablePaletteContentBorderThicknessSize}"
                              FalseValue="{x:Static ExpressionExtension:ExpressionDockingConstants.DoubleNonSizablePaletteContentBorderThicknessSize}"/>
  <data:BoolToDoubleConverter x:Key="PaletteGripSizeWhenFloatingConverter" x:Uid="data:BoolToDoubleConverter_2"
                              TrueValue="{x:Static ExpressionExtension:ExpressionDockingConstants.DoublePaletteWindowGripSize}"
                              FalseValue="0"/>
  <data:BoolToVisibilityHiddenConverter x:Key="BoolToVisibilityCollapsedConverter" x:Uid="data:BoolToVisibilityCollapsedConverter_1"/>
  <Style x:Uid="Style_1" TargetType="{x:Type vs:FloatingWindow}" BasedOn="{StaticResource {x:Type Window}}">
    <Setter x:Uid="Setter_17" Property="TextOptions.TextFormattingMode" Value="Display"/>
    <Setter x:Uid="Setter_16" Property="FrameworkElement.UseLayoutRounding">
      <Setter.Value>
        <Binding Source="{x:Static Application.Current}" Path="MainWindow.UseLayoutRounding" Mode="OneTime"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_9" Property="ContentControl.Content">
      <Setter.Value>
        <Binding/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_6" Property="FrameworkElement.MinWidth">
      <Setter.Value>
        <MultiBinding Mode="OneTime" x:Uid="MultiBinding_1" Converter="{StaticResource SumConverter}">
          <Binding x:Uid="Binding_1" Path="MinimumWidth"/>
          <Binding x:Uid="Binding_2" Path="IsSizable"
                   Converter="{StaticResource PaletteGripSizeWhenFloatingConverter}"
                   RelativeSource="{RelativeSource Self}"/>
          <Binding x:Uid="Binding_3" Path="IsSizable"
                   Converter="{StaticResource BorderThicknessWhenFloatingConverter}"
                   RelativeSource="{RelativeSource Self}"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_15" Property="FrameworkElement.MinHeight">
      <Setter.Value>
        <MultiBinding Mode="OneTime" x:Uid="MultiBinding_2" Converter="{StaticResource SumConverter}">
          <Binding x:Uid="Binding_4" Path="MinimumHeight"/>
          <Binding x:Uid="Binding_5" Path="IsSizable"
                   Converter="{StaticResource PaletteGripSizeWhenFloatingConverter}"
                   RelativeSource="{RelativeSource Self}"/>
          <Binding x:Uid="Binding_6" Path="IsSizable"
                   Converter="{StaticResource BorderThicknessWhenFloatingConverter}"
                   RelativeSource="{RelativeSource Self}"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_10" Property="Window.ShowInTaskbar" Value="false"/>
    <Setter x:Uid="Setter_12" Property="Control.Background" Value="{DynamicResource MainWindowBackgroundBrush}"/>
    <Setter x:Uid="Setter_11" Property="vs:FloatingWindow.HasMultipleOnScreenViews"
            Value="{Binding HasMultipleOnScreenViews}"/>
    <Setter x:Uid="Setter_14" Property="Window.Title">
      <Setter.Value>
        <Binding Source="{x:Static Application.Current}" Path="MainWindow.Title"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_13" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_1" TargetType="{x:Type vs:FloatingWindow}">
          <Grid x:Uid="Grid_1" Panel.Background="{TemplateBinding Control.Background}">
            <Grid.RowDefinitions>
              <RowDefinition x:Uid="RowDefinition_1" Height="Auto"/>
              <RowDefinition x:Uid="RowDefinition_2" Height="*"/>
              <RowDefinition x:Uid="RowDefinition_3" Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Uid="ColumnDefinition_1" Width="Auto"/>
              <ColumnDefinition x:Uid="ColumnDefinition_2" Width="*"/>
              <ColumnDefinition x:Uid="ColumnDefinition_3" Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="WindowBorder" x:Uid="Border_1" BorderBrush="{DynamicResource WindowBorderBrush}"
                    Grid.ColumnSpan="3" Grid.RowSpan="3">
              <Border.BorderThickness>
                <Binding x:Uid="Binding_7" Path="IsSizable" RelativeSource="{RelativeSource TemplatedParent}">
                  <Binding.Converter>
                    <data:BoolToThicknessConverter x:Uid="data:BoolToThicknessConverter_1"
                                                   TrueValue="{x:Static ExpressionExtension:ExpressionDockingConstants.SizablePaletteContentBorderThickness}"
                                                   FalseValue="{x:Static ExpressionExtension:ExpressionDockingConstants.NonSizablePaletteContentBorderThickness}"/>
                  </Binding.Converter>
                </Binding>
              </Border.BorderThickness>
              <ContentPresenter x:Uid="ContentPresenter_1" ContentSource="Content">
                <FrameworkElement.Margin>
                  <Binding x:Uid="Binding_8" Path="IsSizable" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                      <data:BoolToThicknessConverter x:Uid="data:BoolToThicknessConverter_2"
                                                     TrueValue="{x:Static ExpressionExtension:ExpressionDockingConstants.SizablePaletteContentMargin}"
                                                     FalseValue="{x:Static ExpressionExtension:ExpressionDockingConstants.NonSizablePaletteContentMargin}"/>
                    </Binding.Converter>
                  </Binding>
                </FrameworkElement.Margin>
              </ContentPresenter>
            </Border>
            <vs:WindowResizeGrip x:Name="WindowResizeGrip_TopLeft" x:Uid="WindowResizeGrip_TopLeft" ResizeGripDirection="TopLeft"
                                 FrameworkElement.Width="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}"
                                 FrameworkElement.Height="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}">
              <vs:WindowResizeGrip.ResizeTarget>
                <Binding RelativeSource="{RelativeSource TemplatedParent}"/>
              </vs:WindowResizeGrip.ResizeTarget>
              <UIElement.Visibility>
                <Binding Path="Content.Child.IsSizableWhenFloating" RelativeSource="{RelativeSource TemplatedParent}"
                         Converter="{StaticResource BoolToVisibilityCollapsedConverter}"/>
              </UIElement.Visibility>
            </vs:WindowResizeGrip>
            <vs:WindowResizeGrip x:Name="WindowResizeGrip_Top" x:Uid="WindowResizeGrip_Top" ResizeGripDirection="Top"
                                 Grid.Column="1"
                                 FrameworkElement.Height="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}">
              <vs:WindowResizeGrip.ResizeTarget>
                <Binding RelativeSource="{RelativeSource TemplatedParent}"/>
              </vs:WindowResizeGrip.ResizeTarget>
              <UIElement.Visibility>
                <Binding Path="Content.Child.IsSizableWhenFloating" RelativeSource="{RelativeSource TemplatedParent}"
                         Converter="{StaticResource BoolToVisibilityCollapsedConverter}"/>
              </UIElement.Visibility>
            </vs:WindowResizeGrip>
            <vs:WindowResizeGrip x:Name="WindowResizeGrip_TopRight" x:Uid="WindowResizeGrip_TopRight" ResizeGripDirection="TopRight"
                                 Grid.Column="2"
                                 FrameworkElement.Width="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}"
                                 FrameworkElement.Height="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}">
              <vs:WindowResizeGrip.ResizeTarget>
                <Binding RelativeSource="{RelativeSource TemplatedParent}"/>
              </vs:WindowResizeGrip.ResizeTarget>
              <UIElement.Visibility>
                <Binding Path="Content.Child.IsSizableWhenFloating" RelativeSource="{RelativeSource TemplatedParent}"
                         Converter="{StaticResource BoolToVisibilityCollapsedConverter}"/>
              </UIElement.Visibility>
            </vs:WindowResizeGrip>
            <vs:WindowResizeGrip x:Name="WindowResizeGrip_Left" x:Uid="WindowResizeGrip_Left" ResizeGripDirection="Left"
                                 Grid.Row="1"
                                 FrameworkElement.Width="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}">
              <vs:WindowResizeGrip.ResizeTarget>
                <Binding RelativeSource="{RelativeSource TemplatedParent}"/>
              </vs:WindowResizeGrip.ResizeTarget>
              <UIElement.Visibility>
                <Binding Path="Content.Child.IsSizableWhenFloating" RelativeSource="{RelativeSource TemplatedParent}"
                         Converter="{StaticResource BoolToVisibilityCollapsedConverter}"/>
              </UIElement.Visibility>
            </vs:WindowResizeGrip>
            <vs:WindowResizeGrip x:Name="WindowResizeGrip_Right" x:Uid="WindowResizeGrip_Right" ResizeGripDirection="Right"
                                 Grid.Row="1" Grid.Column="2"
                                 FrameworkElement.Width="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}">
              <vs:WindowResizeGrip.ResizeTarget>
                <Binding RelativeSource="{RelativeSource TemplatedParent}"/>
              </vs:WindowResizeGrip.ResizeTarget>
              <UIElement.Visibility>
                <Binding Path="Content.Child.IsSizableWhenFloating" RelativeSource="{RelativeSource TemplatedParent}"
                         Converter="{StaticResource BoolToVisibilityCollapsedConverter}"/>
              </UIElement.Visibility>
            </vs:WindowResizeGrip>
            <vs:WindowResizeGrip x:Name="WindowResizeGrip_BottomLeft" x:Uid="WindowResizeGrip_BottomLeft"
                                 ResizeGripDirection="BottomLeft" Grid.Row="2"
                                 FrameworkElement.Width="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}"
                                 FrameworkElement.Height="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}">
              <vs:WindowResizeGrip.ResizeTarget>
                <Binding RelativeSource="{RelativeSource TemplatedParent}"/>
              </vs:WindowResizeGrip.ResizeTarget>
              <UIElement.Visibility>
                <Binding Path="Content.Child.IsSizableWhenFloating" RelativeSource="{RelativeSource TemplatedParent}"
                         Converter="{StaticResource BoolToVisibilityCollapsedConverter}"/>
              </UIElement.Visibility>
            </vs:WindowResizeGrip>
            <vs:WindowResizeGrip x:Name="WindowResizeGrip_Bottom" x:Uid="WindowResizeGrip_Bottom" ResizeGripDirection="Bottom"
                                 Grid.Row="2" Grid.Column="1"
                                 FrameworkElement.Height="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}">
              <vs:WindowResizeGrip.ResizeTarget>
                <Binding RelativeSource="{RelativeSource TemplatedParent}"/>
              </vs:WindowResizeGrip.ResizeTarget>
              <UIElement.Visibility>
                <Binding Path="Content.Child.IsSizableWhenFloating" RelativeSource="{RelativeSource TemplatedParent}"
                         Converter="{StaticResource BoolToVisibilityCollapsedConverter}"/>
              </UIElement.Visibility>
            </vs:WindowResizeGrip>
            <vs:WindowResizeGrip x:Name="WindowResizeGrip_BottomRight" x:Uid="WindowResizeGrip_BottomRight"
                                 ResizeGripDirection="BottomRight" Grid.Row="2" Grid.Column="2"
                                 FrameworkElement.Width="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}"
                                 FrameworkElement.Height="{x:Static ExpressionExtension:ExpressionDockingConstants.PaletteWindowGripSize}">
              <vs:WindowResizeGrip.ResizeTarget>
                <Binding RelativeSource="{RelativeSource TemplatedParent}"/>
              </vs:WindowResizeGrip.ResizeTarget>
              <UIElement.Visibility>
                <Binding Path="Content.Child.IsSizableWhenFloating" RelativeSource="{RelativeSource TemplatedParent}"
                         Converter="{StaticResource BoolToVisibilityCollapsedConverter}"/>
              </UIElement.Visibility>
            </vs:WindowResizeGrip>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>