<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:Controls="clr-namespace:Microsoft.Expression.Framework.Controls;assembly=Microsoft.Expression.Framework"
                    xmlns:PropertyEditing="clr-namespace:Microsoft.Windows.Design.PropertyEditing;assembly=Microsoft.Windows.Design.Interaction"
                    xmlns:UserInterface="clr-namespace:Microsoft.Expression.DesignSurface.UserInterface"
                    xmlns:PropertyInspector="clr-namespace:Microsoft.Expression.DesignSurface.UserInterface.PropertyInspector"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:automation="clr-namespace:Microsoft.Expression.Framework.Diagnostics;assembly=Microsoft.Expression.Framework"
                    xmlns:fwpi="clr-namespace:Microsoft.Expression.Framework.PropertyInspector"
                    xmlns:dspi="clr-namespace:Microsoft.Expression.DesignSurface.UserInterface.PropertyInspector"
                    xmlns:fwdata="clr-namespace:Microsoft.Expression.Framework.Data;assembly=Microsoft.Expression.Framework"
                    xmlns:cider="clr-namespace:Microsoft.Windows.Design.Interaction;assembly=Microsoft.Windows.Design.Interaction"
                    xmlns:ValueEditors="clr-namespace:Microsoft.Expression.Framework.ValueEditors;assembly=Microsoft.Expression.Framework"
                    PresentationOptions:Freeze="true" x:Uid="ResourceDictionary_1">
  <fwdata:NotConverter x:Key="NotConverter" x:Uid="fwdata:NotConverter_1"/>
  <fwdata:AndConverter x:Key="AndConverter" x:Uid="fwdata:AndConverter_1"/>
  <fwdata:EqualsConverter x:Key="EqualsConverter" x:Uid="fwdata:EqualsConverter_1"/>
  <fwdata:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" x:Uid="fwdata:BoolToVisibilityConverter_1"/>
  <fwdata:VisibilityAndConverter x:Key="VisibilityAndConverter" x:Uid="fwdata:VisibilityOrConverter_1"/>
  <fwdata:InverseVisibilityConverter x:Key="InverseVisibilityConverter" x:Uid="fwdata:InverseVisibilityConverter_1"/>
  <fwdata:IsNullConverter x:Key="IsNullConverter" x:Uid="fwdata:IsNullConverter_1"/>
  <dspi:ValueIsClassToVisibilityConverter x:Key="ValueIsClassToVisibilityConverter" x:Uid="dspi:ValueIsClassToVisibilityConverter_1"/>
  <fwdata:BoolToCheckStateConverter x:Key="BoolToCheckStateConverter" x:Uid="fwdata:BoolToCheckStateConverter_1"/>
  <fwdata:MultiplyConverter x:Key="MultiplyConverter" x:Uid="tlctl:MultiplyConverter_1" MultiplyValue="10"/>
  <fwdata:ComposingConverter x:Key="IndentationConverter" x:Uid="Databinding:ComposingConverter_1">
    <fwdata:ComposingConverter.Converters>
      <fwdata:AdditionConverter x:Uid="Databinding:AdditionConverter_1" Offset="-1"/>
      <fwdata:SingleMarginConverter x:Uid="tlctl:LeftMarginConverter_4" TargetSubProperty="Left"
                                    fwdata:MarginConverter.Converter="{StaticResource MultiplyConverter}"/>
    </fwdata:ComposingConverter.Converters>
  </fwdata:ComposingConverter>
  <UserInterface:DoubleToCornerRadiusConverter x:Key="DoubleToCornerRadiusConverter" x:Uid="UserInterface:DoubleToCornerRadiusConverter_1"/>
  <System:Boolean x:Key="BoolTrue" x:Uid="Boolean_1">True</System:Boolean>
  <Style x:Uid="Style_175" TargetType="{x:Type UserInterface:NoAnimationToolTip}"
         BasedOn="{StaticResource {x:Type ToolTip}}"/>
  <SolidColorBrush x:Key="DatabindingBrush" x:Uid="SolidColorBrush_26" Color="#FFFFCF00"/>
  <SolidColorBrush x:Key="ResourceLinkBrush" x:Uid="SolidColorBrush_27" Color="#FF8ABB2E"/>
  <DataTemplate x:Key="PropertyContainerDefaultInlineTemplate" x:Uid="DataTemplate_5">
    <ValueEditors:StringEditor x:Uid="ValueEditors:StringEditor_2" automation:AutomationElement.Id="ValueEditorControlId"
                               FrameworkElement.MinHeight="20" FrameworkElement.MinWidth="20">
      <ValueEditors:StringEditor.Value>
        <Binding Path="StringValue"/>
      </ValueEditors:StringEditor.Value>
      <TextBoxBase.IsReadOnly>
        <Binding Path="CanConvertFromString" Mode="OneWay" Converter="{StaticResource NotConverter}"/>
      </TextBoxBase.IsReadOnly>
      <ValueEditors:StringEditor.IsNinched>
        <Binding Path="IsMixedValue"/>
      </ValueEditors:StringEditor.IsNinched>
    </ValueEditors:StringEditor>
  </DataTemplate>
  <PropertyEditing:PropertyValueEditor x:Key="PropertyContainerDefaultPropertyValueEditor" x:Uid="PropertyEditing:PropertyValueEditor_1"
                                       InlineEditorTemplate="{StaticResource PropertyContainerDefaultInlineTemplate}"/>
  <DataTemplate x:Key="PropertyContainerDefaultStandardValuesInlineTemplate" x:Uid="DataTemplate_6">
    <ValueEditors:ChoiceEditor x:Uid="ValueEditors:ChoiceEditor_1" ViewType="Combo">
      <ValueEditors:ChoiceEditor.Value>
        <Binding Path="Value"/>
      </ValueEditors:ChoiceEditor.Value>
      <ValueEditors:ChoiceEditor.ItemsSource>
        <Binding Path="ParentProperty.StandardValues"/>
      </ValueEditors:ChoiceEditor.ItemsSource>
      <ValueEditors:ChoiceEditor.IsNinched>
        <Binding Path="IsMixedValue"/>
      </ValueEditors:ChoiceEditor.IsNinched>
    </ValueEditors:ChoiceEditor>
  </DataTemplate>
  <PropertyEditing:PropertyValueEditor x:Key="PropertyContainerDefaultStandardValuesPropertyValueEditor"
                                       x:Uid="PropertyEditing:PropertyValueEditor_2"
                                       InlineEditorTemplate="{StaticResource PropertyContainerDefaultStandardValuesInlineTemplate}"/>
  <ControlTemplate x:Key="PropertyContainerInlineRowTemplate" x:Uid="ControlTemplate_77">
    <Grid x:Name="ParentGrid" x:Uid="Grid_9">
      <FrameworkElement.DataContext>
        <Binding RelativeSource="{RelativeSource Self}"
                 Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer)"/>
      </FrameworkElement.DataContext>
      <Grid.RowDefinitions>
        <RowDefinition x:Uid="RowDefinition_32" MaxHeight="24" MinHeight="24"/>
        <RowDefinition x:Uid="RowDefinition_36"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Uid="ColumnDefinition_53" Width="100" DefinitionBase.SharedSizeGroup="Left"/>
        <ColumnDefinition x:Uid="ColumnDefinition_54" Width="*" DefinitionBase.SharedSizeGroup="Middle"/>
        <ColumnDefinition x:Uid="ColumnDefinition_55" Width="12" DefinitionBase.SharedSizeGroup="Right"/>
      </Grid.ColumnDefinitions>
      <TextBlock x:Uid="TextBlock_12" FrameworkElement.VerticalAlignment="Center"
                 Text="{Binding PropertyEntry.PropertyName}"
                 FrameworkElement.ToolTip="{Binding PropertyEntry.Description}"/>
      <Rectangle x:Uid="Rectangle_52" Grid.RowSpan="2" Grid.Column="1" FrameworkElement.Margin="4,1,0,1"
                 FrameworkElement.Style="{DynamicResource ValueAreaWrapper}"/>
      <ContentPresenter x:Uid="ContentPresenter_44" Grid.RowSpan="2" Grid.Column="1" FrameworkElement.Margin="4,2,0,2"
                        Content="{Binding PropertyEntry.PropertyValue}">
        <ContentPresenter.ContentTemplate>
          <Binding ElementName="ParentGrid"
                   Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer).InlineEditorTemplate"/>
        </ContentPresenter.ContentTemplate>
      </ContentPresenter>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="PropertyContainerExtendedPopupRowTemplate" x:Uid="ControlTemplate_78">
    <StackPanel x:Uid="StackPanel_7">
      <Control x:Uid="Control_1">
        <automation:AutomationElement.Id>
          <Binding Path="PropertyName" Converter="{StaticResource PropertyValueClickControlConverter}"/>
        </automation:AutomationElement.Id>
        <Control.Template>
          <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="InlineRowTemplate" Mode="OneWay"/>
        </Control.Template>
      </Control>
      <fwpi:PropertyContainerWorkaroundPopup x:Uid="PropertyInspector:PropertyContainerWorkaroundPopup_1" UIElement.Focusable="false"
                                             Popup.Placement="Bottom" Popup.StaysOpen="true" Popup.AllowsTransparency="true"
                                             Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                             Popup.IsOpen="true" FrameworkElement.MinWidth="{Binding RelativeParentActualWidth}">
        <Border x:Uid="Border_91" FrameworkElement.Style="{StaticResource DropShadowBorderStyle}">
          <Border x:Uid="Border_53" Background="{DynamicResource PaneBrush}"
                  BorderBrush="{DynamicResource WindowBorderBrush}" BorderThickness="1">
            <ScrollViewer x:Uid="ScrollViewer_10" CanContentScroll="true"
                          FrameworkElement.Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
              <ContentControl FrameworkElement.Name="FocusablePopupItem" x:Uid="FocusablePopupItem" FrameworkElement.Margin="4">
                <ContentControl.Content>
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="PropertyEntry.PropertyValue"/>
                </ContentControl.Content>
                <ContentControl.ContentTemplate>
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtendedEditorTemplate"/>
                </ContentControl.ContentTemplate>
              </ContentControl>
            </ScrollViewer>
          </Border>
        </Border>
      </fwpi:PropertyContainerWorkaroundPopup>
    </StackPanel>
  </ControlTemplate>
  <ControlTemplate x:Key="ExtendedPinnedRowTemplate" x:Uid="ControlTemplate_79">
    <Grid x:Uid="Grid_58">
      <Grid.RowDefinitions>
        <RowDefinition x:Uid="RowDefinition_1"/>
        <RowDefinition x:Uid="RowDefinition_33"/>
      </Grid.RowDefinitions>
      <Control x:Uid="Control_2" UIElement.Focusable="false" Grid.Row="0">
        <automation:AutomationElement.Id>
          <Binding Path="PropertyName" Converter="{StaticResource PropertyValueClickControlConverter}"/>
        </automation:AutomationElement.Id>
        <Control.Template>
          <Binding RelativeSource="{RelativeSource Self}"
                   Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer).InlineRowTemplate" Mode="OneWay"/>
        </Control.Template>
      </Control>
      <ContentControl x:Uid="ContentControl_1" UIElement.Focusable="false" Grid.Row="1"
                      Control.HorizontalContentAlignment="Stretch">
        <ContentControl.Content>
          <Binding RelativeSource="{RelativeSource Self}"
                   Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer).PropertyEntry.PropertyValue"
                   Mode="OneWay"/>
        </ContentControl.Content>
        <ContentControl.ContentTemplate>
          <Binding RelativeSource="{RelativeSource Self}"
                   Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer).ExtendedEditorTemplate"
                   Mode="OneWay"/>
        </ContentControl.ContentTemplate>
      </ContentControl>
    </Grid>
  </ControlTemplate>
  <Style x:Key="KeyedPropertyContainerStyle" x:Uid="Style_137"
         TargetType="{x:Type PropertyEditing:PropertyContainer}">
    <Style.Setters>
      <Setter x:Uid="Setter_1400" Property="UIElement.Focusable" Value="false"/>
      <Setter x:Uid="Setter_1374" Property="PropertyEditing:PropertyContainer.InlineRowTemplate"
              Value="{StaticResource PropertyContainerInlineRowTemplate}"/>
      <Setter x:Uid="Setter_1375" Property="PropertyEditing:PropertyContainer.ExtendedPopupRowTemplate"
              Value="{StaticResource PropertyContainerExtendedPopupRowTemplate}"/>
      <Setter x:Uid="Setter_1376" Property="PropertyEditing:PropertyContainer.ExtendedPinnedRowTemplate"
              Value="{StaticResource ExtendedPinnedRowTemplate}"/>
      <Setter x:Uid="Setter_1377" Property="PropertyEditing:PropertyContainer.DefaultPropertyValueEditor"
              Value="{StaticResource PropertyContainerDefaultPropertyValueEditor}"/>
      <Setter x:Uid="Setter_1378"
              Property="PropertyEditing:PropertyContainer.DefaultStandardValuesPropertyValueEditor"
              Value="{StaticResource PropertyContainerDefaultStandardValuesPropertyValueEditor}"/>
      <Setter x:Uid="Setter_1683" Property="PropertyEditing:PropertyContainer.DialogCommandSource">
        <Setter.Value>
          <Binding RelativeSource="{RelativeSource Self}"
                   Path="(fwpi:PropertyInspectorHelper.OwningPropertyInspectorElement)"/>
        </Setter.Value>
      </Setter>
      <Setter x:Uid="Setter_1890" Property="Control.FontFamily"
              Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
      <Setter x:Uid="Setter_1891" Property="Control.FontSize"
              Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
    </Style.Setters>
  </Style>
  <ControlTemplate x:Key="EditModeSwitchControlTemplate" x:Uid="ControlTemplate_145474" TargetType="{x:Type Control}">
    <Border x:Uid="Border_82" Background="#00FFFFFF">
      <Path x:Name="DropDownArrow" x:Uid="Path_28" FrameworkElement.Style="{DynamicResource DropDownArrowPath}"
            Shape.Fill="{TemplateBinding Control.Background}"/>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger x:Uid="Trigger_1075" Property="UIElement.IsMouseOver" Value="true">
        <Setter x:Uid="Setter_1883" TargetName="DropDownArrow"
                Value="{DynamicResource FlatMenuIconArrowMouseOverBrush}" Property="Shape.Fill"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Uid="Style_138" TargetType="{x:Type PropertyEditing:EditModeSwitchButton}"
         BasedOn="{StaticResource {x:Type Button}}">
    <Setter x:Uid="Setter_1390" Property="automation:AutomationElement.Id" Value="ValueEditorPin"/>
    <Setter x:Uid="Setter_1379" Property="Control.Padding" Value="0,0,0,0"/>
    <Setter x:Uid="Setter_1382" Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter x:Uid="Setter_1383" Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter x:Uid="Setter_1384" Property="UIElement.Focusable" Value="false"/>
    <Setter x:Uid="Setter_1881" Property="Control.Background"
            Value="{DynamicResource FlatMenuIconArrowNormalBrush}"/>
    <Setter x:Uid="Setter_1882" Property="Control.Template"
            Value="{StaticResource EditModeSwitchControlTemplate}"/>
  </Style>
  <Style x:Uid="PickStyle" TargetType="{x:Type dspi:PickWhip}">
    <Setter x:Uid="Setter_1892" Property="UIElement.Focusable" Value="false"/>
    <Setter x:Uid="Setter_1908" Property="Controls:Icon.DeselectedImage"
            Value="pack://application:,,,/Microsoft.Expression.DesignSurface;Component/Resources/Icons/Properties/pickwhip_off_16X16.png"/>
    <Setter x:Uid="Setter_1909" Property="Controls:Icon.SelectedImage"
            Value="pack://application:,,,/Microsoft.Expression.DesignSurface;Component/Resources/Icons/Properties/pickwhip_on_16X16.png"/>
    <Setter x:Uid="Setter_1893" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="PickWhipTemplate" TargetType="{x:Type dspi:PickWhip}">
          <Border x:Uid="Rectangle_15" FrameworkElement.HorizontalAlignment="Right" Background="Transparent"
                  BorderBrush="Transparent" automation:AutomationElement.Id="PickWhip">
            <Controls:Icon x:Name="Icon" x:Uid="Controls:Icon_12" FrameworkElement.Width="16" FrameworkElement.Height="16"
                           FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center"
                           FrameworkElement.Margin="0,0,2,0">
              <Image.Source>
                <Binding Path="(Controls:Icon.DeselectedImage)" RelativeSource="{RelativeSource TemplatedParent}"
                         Mode="OneWay"/>
              </Image.Source>
            </Controls:Icon>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_1" Property="UIElement.IsMouseOver" Value="true">
              <Setter x:Uid="Setter_131" TargetName="Icon" Property="Image.Source">
                <Setter.Value>
                  <Binding Path="(Controls:Icon.SelectedImage)" RelativeSource="{RelativeSource TemplatedParent}"
                           Mode="OneWay"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger x:Uid="Trigger_1159" Property="UIElement.IsEnabled" Value="false">
              <Setter x:Uid="Setter_1857" TargetName="Icon" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PropertyPickWhipStyle" x:Uid="Style_173" TargetType="{x:Type dspi:PickWhip}"
         BasedOn="{StaticResource {x:Type dspi:PickWhip}}">
    <Setter x:Uid="Setter_1910" Property="Controls:Icon.DeselectedImage"
            Value="pack://application:,,,/Microsoft.Expression.DesignSurface;Component/Resources/Icons/Properties/property_picker_off_16x16.png"/>
    <Setter x:Uid="Setter_1911" Property="Controls:Icon.SelectedImage"
            Value="pack://application:,,,/Microsoft.Expression.DesignSurface;Component/Resources/Icons/Properties/property_picker_on_16x16.png"/>
  </Style>
  <Style x:Uid="Style_111" TargetType="{x:Type fwpi:PropertyEditorNameAreaControl}"
         BasedOn="{StaticResource {x:Type TextBlock}}">
    <Style.Setters>
      <Setter x:Uid="Setter_1326" Property="TextBlock.Text">
        <Setter.Value>
          <Binding RelativeSource="{RelativeSource Self}"
                   Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer).PropertyEntry.DisplayName"
                   Mode="OneWay"/>
        </Setter.Value>
      </Setter>
      <Setter x:Uid="Setter_1328" Property="automation:AutomationElement.Id">
        <Setter.Value>
          <Binding x:Uid="Binding_25" Path="PropertyName"
                   Converter="{StaticResource PropertyMenuClickControlConverter}"/>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="KeyedPropertyEditorValueAreaControlStyle" x:Uid="Style_164"
         TargetType="{x:Type fwpi:PropertyEditorValueAreaControl}">
    <Setter x:Uid="Setter_1327" Property="ContentPresenter.ContentTemplate">
      <Setter.Value>
        <Binding RelativeSource="{RelativeSource Self}"
                 Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer).InlineEditorTemplate"
                 Mode="OneWay"/>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Uid="Style_140" TargetType="{x:Type fwpi:StandardCategoryLayout}">
    <Setter x:Uid="Setter_1395" Property="UIElement.Focusable" Value="false"/>
  </Style>
  <Color x:Key="{x:Static cider:AdornerColors.AlignmentMarkColorKey}" x:Uid="Color_4">#FFFF0000</Color>
  <Color x:Key="{x:Static cider:AdornerColors.ElementBorderColorKey}" x:Uid="Color_5">#FF6494EC</Color>
  <Color x:Key="{x:Static cider:AdornerColors.GlyphFillColorKey}" x:Uid="Color_6">#FF6494EC</Color>
  <Color x:Key="{x:Static cider:AdornerColors.HandleBorderColorKey}" x:Uid="Color_7">#FF6494EC</Color>
  <Color x:Key="{x:Static cider:AdornerColors.HandleFillColorKey}" x:Uid="Color_8">#FFFFFFFF</Color>
  <Color x:Key="{x:Static cider:AdornerColors.HandleFillHoverColorKey}" x:Uid="Color_9">#FFFFFFFF</Color>
  <Color x:Key="{x:Static cider:AdornerColors.HandleFillPressedColorKey}" x:Uid="Color_10">#FF6494EC</Color>
  <Color x:Key="{x:Static cider:AdornerColors.MoveHandleContentColorKey}" x:Uid="Color_11">#FF6494EC</Color>
  <Color x:Key="{x:Static cider:AdornerColors.MoveHandleFillColorKey}" x:Uid="Color_12">#FF6494EC</Color>
  <Color x:Key="{x:Static cider:AdornerColors.MoveHandleFillHoverColorKey}" x:Uid="Color_13">#FF6494EC</Color>
  <Color x:Key="{x:Static cider:AdornerColors.RailFillColorKey}" x:Uid="Color_14">#FFD7E3F9</Color>
  <Color x:Key="{x:Static cider:AdornerColors.SelectionFrameBorderColorKey}" x:Uid="Color_15">#80748EAA</Color>
  <Color x:Key="{x:Static cider:AdornerColors.SelectionFrameFillColorKey}" x:Uid="Color_16">#7F6494EC</Color>
  <Color x:Key="{x:Static cider:AdornerColors.SimpleWashColorKey}" x:Uid="Color_17">#FF6494EC</Color>
  <Color x:Key="{x:Static cider:AdornerColors.ToggledGlyphFillColorKey}" x:Uid="Color_18">#FF6494EC</Color>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.AlignmentMarkBrushKey}" x:Uid="SolidColorBrush_4"
                   Color="{StaticResource {x:Static cider:AdornerColors.AlignmentMarkColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.ElementBorderBrushKey}" x:Uid="SolidColorBrush_5"
                   Color="{StaticResource {x:Static cider:AdornerColors.ElementBorderColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.GlyphFillBrushKey}" x:Uid="SolidColorBrush_6"
                   Color="{StaticResource {x:Static cider:AdornerColors.GlyphFillColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.HandleBorderBrushKey}" x:Uid="SolidColorBrush_7"
                   Color="{StaticResource {x:Static cider:AdornerColors.HandleBorderColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.HandleFillBrushKey}" x:Uid="SolidColorBrush_8"
                   Color="{StaticResource {x:Static cider:AdornerColors.HandleFillColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.HandleFillHoverBrushKey}" x:Uid="SolidColorBrush_9"
                   Color="{StaticResource {x:Static cider:AdornerColors.HandleFillHoverColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.HandleFillPressedBrushKey}" x:Uid="SolidColorBrush_10"
                   Color="{StaticResource {x:Static cider:AdornerColors.HandleFillPressedColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.MoveHandleContentBrushKey}" x:Uid="SolidColorBrush_11"
                   Color="{StaticResource {x:Static cider:AdornerColors.MoveHandleContentColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.MoveHandleFillBrushKey}" x:Uid="SolidColorBrush_12"
                   Color="{StaticResource {x:Static cider:AdornerColors.MoveHandleFillColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.MoveHandleFillHoverBrushKey}" x:Uid="SolidColorBrush_13"
                   Color="{StaticResource {x:Static cider:AdornerColors.MoveHandleFillHoverColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.RailFillBrushKey}" x:Uid="SolidColorBrush_14"
                   Color="{StaticResource {x:Static cider:AdornerColors.RailFillColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.SelectionFrameBorderBrushKey}" x:Uid="SolidColorBrush_15"
                   Color="{StaticResource {x:Static cider:AdornerColors.SelectionFrameBorderColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.SelectionFrameFillBrushKey}" x:Uid="SolidColorBrush_16"
                   Color="{StaticResource {x:Static cider:AdornerColors.SelectionFrameFillColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.SimpleWashBrushKey}" x:Uid="SolidColorBrush_17"
                   Color="{StaticResource {x:Static cider:AdornerColors.SimpleWashColorKey}}"/>
  <SolidColorBrush x:Key="{x:Static cider:AdornerColors.ToggledGlyphFillBrushKey}" x:Uid="SolidColorBrush_18"
                   Color="{StaticResource {x:Static cider:AdornerColors.ToggledGlyphFillColorKey}}"/>
  <FontFamily x:Key="{x:Static cider:AdornerFonts.FontFamilyKey}" x:Uid="FontFamily_1">Segoe UI</FontFamily>
  <System:Double x:Key="{x:Static cider:AdornerFonts.FontSizeKey}" x:Uid="System:Double_1">10.0</System:Double>
  <dspi:PropertyValueToWpfConverter x:Key="PropertyValueToWPFConverter" x:Uid="dspi:PropertyValueToWPFConverter_1"/>
  <MultiBinding x:Key="PropertyToWPFBinding" x:Uid="MultiBinding_7"
                Converter="{StaticResource PropertyValueToWPFConverter}">
    <Binding x:Uid="Binding_29" Path="PropertyValue"/>
    <Binding x:Uid="Binding_26" Path="PropertyValue.Value"/>
  </MultiBinding>
  <MultiBinding x:Key="PropertyValueToWPFBinding" x:Uid="MultiBinding_8"
                Converter="{StaticResource PropertyValueToWPFConverter}">
    <Binding x:Uid="Binding_27"/>
    <Binding x:Uid="Binding_28" Path="Value"/>
  </MultiBinding>
  <Style x:Uid="Style_136" TargetType="{x:Type PropertyEditing:PropertyMarker}">
    <Setter x:Uid="Setter_1251" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_60">
          <dspi:PropertyMarker x:Uid="dspi:PropertyMarker_2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Uid="Style_171" TargetType="{x:Type dspi:PropertyMarker}">
    <Setter x:Uid="Setter_1901" Property="UIElement.Visibility"
            Value="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"/>
  </Style>
  <Style x:Key="ButtonIconStyle" x:Uid="Style_165" TargetType="{x:Type Controls:Icon}">
    <Style.Triggers>
      <DataTrigger x:Uid="DataTrigger_4" Value="true">
        <DataTrigger.Binding>
          <Binding Path="IsMouseOver">
            <Binding.RelativeSource>
              <RelativeSource Mode="FindAncestor" AncestorType="{x:Type Button}"/>
            </Binding.RelativeSource>
          </Binding>
        </DataTrigger.Binding>
        <Setter x:Uid="Setter_1258" Property="Image.Source">
          <Setter.Value>
            <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.SelectedImage)"/>
          </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1369" Property="Controls:Icon.SourceBrush">
          <Setter.Value>
            <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.SelectedDrawingBrush)"/>
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_5" Value="true">
        <DataTrigger.Binding>
          <Binding Path="IsPressed">
            <Binding.RelativeSource>
              <RelativeSource Mode="FindAncestor" AncestorType="{x:Type Button}"/>
            </Binding.RelativeSource>
          </Binding>
        </DataTrigger.Binding>
        <Setter x:Uid="Setter_1259" Property="Image.Source">
          <Setter.Value>
            <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.SelectedImage)"/>
          </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1370" Property="Controls:Icon.SourceBrush">
          <Setter.Value>
            <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.SelectedDrawingBrush)"/>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
    <Setter x:Uid="Setter_1260" Property="Image.Source">
      <Setter.Value>
        <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.DeselectedImage)"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_1371" Property="Controls:Icon.SourceBrush">
      <Setter.Value>
        <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.DeselectedDrawingBrush)"/>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TabItemIconStyle" x:Uid="Style_148" TargetType="{x:Type Controls:Icon}">
    <Style.Triggers>
      <DataTrigger x:Uid="DataTrigger_9" Value="true">
        <DataTrigger.Binding>
          <Binding Path="IsMouseOver">
            <Binding.RelativeSource>
              <RelativeSource Mode="FindAncestor" AncestorType="{x:Type TabItem}"/>
            </Binding.RelativeSource>
          </Binding>
        </DataTrigger.Binding>
        <Setter x:Uid="Setter_1884" Property="Image.Source">
          <Setter.Value>
            <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.SelectedImage)"/>
          </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1396" Property="Controls:Icon.SourceBrush">
          <Setter.Value>
            <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.SelectedDrawingBrush)"/>
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_10" Value="true">
        <DataTrigger.Binding>
          <Binding Path="IsSelected">
            <Binding.RelativeSource>
              <RelativeSource Mode="FindAncestor" AncestorType="{x:Type TabItem}"/>
            </Binding.RelativeSource>
          </Binding>
        </DataTrigger.Binding>
        <Setter x:Uid="Setter_1397" Property="Image.Source">
          <Setter.Value>
            <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.SelectedImage)"/>
          </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1398" Property="Controls:Icon.SourceBrush">
          <Setter.Value>
            <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.SelectedDrawingBrush)"/>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
    <Setter x:Uid="Setter_1399" Property="Image.Source">
      <Setter.Value>
        <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.DeselectedImage)"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_1885" Property="Controls:Icon.SourceBrush">
      <Setter.Value>
        <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:Icon.DeselectedDrawingBrush)"/>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MoreButtonStyle" x:Uid="Style_139" TargetType="{x:Type ButtonBase}">
    <Setter x:Uid="Setter_1635" Property="FrameworkElement.Height" Value="32"/>
    <Setter x:Uid="Setter_1636" Property="FrameworkElement.Width" Value="32"/>
    <Setter x:Uid="Setter_1261" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_61" TargetType="{x:Type ButtonBase}">
          <Border x:Uid="Border_2" FrameworkElement.Height="32" FrameworkElement.Width="32" Background="Transparent"
                  CornerRadius="2">
            <Controls:Icon x:Name="Icon" x:Uid="Controls:Icon_1" FrameworkElement.Width="20" FrameworkElement.Height="20"
                           FrameworkElement.Style="{StaticResource ButtonIconStyle}"
                           SourceBrush="{DynamicResource tool_moreExpander_off_20x20}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_1108" Property="UIElement.IsMouseOver" Value="true">
              <Setter x:Uid="Setter_1902" TargetName="Icon" Value="{DynamicResource tool_moreExpander_on_20x20}"
                      Property="Controls:Icon.SourceBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger x:Uid="Trigger_1098" Property="UIElement.IsEnabled" Value="false">
        <Setter x:Uid="Setter_1493" Property="UIElement.Opacity" Value="0.5"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Uid="Style_166" TargetType="{x:Type Controls:OnDemandControl}">
    <Setter x:Uid="Setter_1256" Property="UIElement.Focusable" Value="false"/>
  </Style>
  <Style x:Uid="Style_174" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
    <Style.Triggers>
      <Trigger x:Uid="Trigger_1160" Property="ContentElement.IsMouseOver" Value="true">
        <Setter x:Uid="Setter_1912" Property="Inline.TextDecorations" Value="Underline"/>
      </Trigger>
    </Style.Triggers>
    <Setter x:Uid="Setter_1913" Property="Inline.TextDecorations" Value="None"/>
  </Style>
  <Style x:Uid="Style_146" TargetType="{x:Type ScrollViewer}"
         BasedOn="{StaticResource ExpressionScrollViewer}"/>
  <DataTemplate x:Uid="DataTemplate_4" DataType="{x:Type dspi:ResourceContainerItem}"/>
  <DataTemplate x:Uid="DataTemplate_7" DataType="{x:Type dspi:ResourceTypeItem}">
    <StackPanel x:Uid="StackPanel_11" Orientation="Horizontal">
      <FrameworkElement.Margin>
        <Binding Path="Depth" Converter="{StaticResource IndentationConverter}"/>
      </FrameworkElement.Margin>
      <CheckBox x:Uid="ExpandCollapseCheckBox" FrameworkElement.Style="{StaticResource ExpandCollapseCheckBox}"
                UIElement.Focusable="false">
        <ToggleButton.IsChecked>
          <Binding Path="IsExpanded" Mode="TwoWay" Converter="{StaticResource BoolToCheckStateConverter}"/>
        </ToggleButton.IsChecked>
        <automation:AutomationElement.Id>
          <Binding Path="Id"/>
        </automation:AutomationElement.Id>
      </CheckBox>
      <TextBlock x:Uid="TextBlock_13" FrameworkElement.VerticalAlignment="Center" Text="{Binding DisplayName}"/>
    </StackPanel>
  </DataTemplate>
  <Style x:Key="ValueAreaWrapper" x:Uid="Style_133" TargetType="{x:Type Rectangle}">
    <Setter x:Uid="Setter_501" Property="Shape.Fill" Value="#00000000"/>
    <Setter x:Uid="Setter_502" Property="Shape.StrokeThickness" Value="1"/>
    <Setter x:Uid="Setter_1124" Property="Rectangle.RadiusX" Value="4"/>
    <Setter x:Uid="Setter_1125" Property="Rectangle.RadiusY" Value="4"/>
    <Setter x:Uid="Setter_503" Property="UIElement.Visibility">
      <Setter.Value>
        <Binding ElementName="Marker" Path="AssociatedProperty.IsExpression"
                 Converter="{StaticResource BooleanToVisibilityConverter}" BindingBase.FallbackValue="Hidden"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_504" Property="Shape.Stroke">
      <Setter.Value>
        <Binding ElementName="Marker" Path="DotBrush"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_500" Property="Panel.ZIndex" Value="1"/>
    <Setter x:Uid="Setter_525" Property="Controls:ClickBehavior.MouseClickCommand">
      <Setter.Value>
        <Binding ElementName="Marker" Path="ShowContextMenuCommand"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_1123" Property="automation:AutomationElement.Id">
      <Setter.Value>
        <Binding x:Uid="Binding_15" ElementName="Marker" Path="AssociatedProperty.PropertyName"
                 Converter="{StaticResource WrapperNameConverter}"/>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BrushValueAreaWrapper" x:Uid="Style_123" TargetType="{x:Type Rectangle}"
         BasedOn="{StaticResource ValueAreaWrapper}">
    <Setter x:Uid="Setter_1239" Property="Shape.Stroke" Value="{DynamicResource DatabindingBrush}"/>
    <Setter x:Uid="Setter_1240" Property="UIElement.Visibility">
      <Setter.Value>
        <MultiBinding x:Uid="MultiBinding_4" Mode="OneWay" Converter="{StaticResource VisibilityOrConverter}">
          <Binding x:Uid="Binding_16" ElementName="BrushSelector" Path="SelectedValue.IsValueDataBound"
                   Converter="{StaticResource BooleanToVisibilityConverter}"/>
          <Binding x:Uid="Binding_17" ElementName="BrushSelector" Path="SelectedValue.IsValueTemplateBinding"
                   Converter="{StaticResource BooleanToVisibilityConverter}"/>
          <Binding x:Uid="Binding_18" ElementName="BrushSelector" Path="SelectedValue.IsValueCustomMarkupExtension"
                   Converter="{StaticResource BooleanToVisibilityConverter}"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ColorValueAreaWrapper" x:Uid="Style_124" TargetType="{x:Type Rectangle}"
         BasedOn="{StaticResource ValueAreaWrapper}">
    <Setter x:Uid="Setter_1244" Property="Shape.Stroke">
      <Setter.Value>
        <Binding ElementName="ColorMarker" Path="DotBrush"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_1245" Property="Controls:ClickBehavior.MouseClickCommand">
      <Setter.Value>
        <Binding ElementName="ColorMarker" Path="ShowContextMenuCommand"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_1243" Property="Shape.Stroke" Value="{DynamicResource DatabindingBrush}"/>
    <Setter x:Uid="Setter_1242" Property="UIElement.Visibility">
      <Setter.Value>
        <MultiBinding x:Uid="MultiBinding_5" Mode="OneWay" Converter="{StaticResource VisibilityOrConverter}">
          <Binding x:Uid="Binding_19" ElementName="ColorMarker" Path="AssociatedProperty.IsValueDataBound"
                   Converter="{StaticResource BooleanToVisibilityConverter}"/>
          <Binding x:Uid="Binding_20" ElementName="ColorMarker" Path="AssociatedProperty.IsValueTemplateBinding"
                   Converter="{StaticResource BooleanToVisibilityConverter}"/>
          <Binding x:Uid="Binding_21" ElementName="ColorMarker" Path="AssociatedProperty.IsValueCustomMarkupExtension"
                   Converter="{StaticResource BooleanToVisibilityConverter}"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
  </Style>
  <Color x:Key="LiteralMarkerColor" x:Uid="Color_1">#55000000</Color>
  <Color x:Key="BindingMarkerColor" x:Uid="Color_2">#FFCF00</Color>
  <Color x:Key="ResourceMarkerColor" x:Uid="Color_3">#8BD44A</Color>
  <Style x:Key="MenuItemWithIcon" x:Uid="Style_116" TargetType="{x:Type MenuItem}"
         BasedOn="{StaticResource {x:Type MenuItem}}">
    <Setter x:Uid="Setter_1302" Property="DockPanel.Dock" Value="Top"/>
    <Setter x:Uid="Setter_1303" Property="Control.Padding" Value="0,2,0,2"/>
    <Setter x:Uid="Setter_1285" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_145468" TargetType="{x:Type MenuItem}">
          <Border x:Name="Bd" x:Uid="Border_41" UIElement.SnapsToDevicePixels="true"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}">
            <DockPanel x:Name="DockPanel" x:Uid="DockPanel_5" FrameworkElement.Margin="6,0,3,0">
              <Controls:Icon x:Name="IconHolder" x:Uid="Icon_45" UIElement.Visibility="Visible" FrameworkElement.Width="14"
                             FrameworkElement.Height="14" Image.Stretch="Uniform" FrameworkElement.HorizontalAlignment="Center"
                             FrameworkElement.VerticalAlignment="Center" FrameworkElement.Margin="4,0,6,0">
                <Image.Source>
                  <Binding Path="Icon.Source" RelativeSource="{RelativeSource TemplatedParent}"/>
                </Image.Source>
              </Controls:Icon>
              <ContentPresenter x:Name="ContentPresenter" x:Uid="ContentPresenter_37"
                                UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                FrameworkElement.Margin="{TemplateBinding Control.Padding}"
                                Content="{TemplateBinding HeaderedItemsControl.Header}"
                                ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" RecognizesAccessKey="true"
                                ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                ContentSource="Header"/>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_1054" Property="MenuItem.Icon">
              <Trigger.Value>
                <x:NullExtension/>
              </Trigger.Value>
              <Setter x:Uid="Setter_1287" TargetName="IconHolder" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger x:Uid="Trigger_1044" Property="MenuItem.IsHighlighted" Value="true">
              <Setter x:Uid="Setter_1198" Value="{DynamicResource ButtonOverBrush}" Property="Control.Background"/>
              <Setter x:Uid="Setter_1199" Value="{DynamicResource BackgroundBrush}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger x:Uid="Trigger_1045" Property="UIElement.IsEnabled" Value="false">
              <Setter x:Uid="Setter_1394" Value="{DynamicResource LayerChild1Brush}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="LiteralMarkerBrush" x:Uid="SolidColorBrush_1" Color="{StaticResource LiteralMarkerColor}"/>
  <SolidColorBrush x:Key="BindingMarkerBrush" x:Uid="SolidColorBrush_2" Color="{StaticResource BindingMarkerColor}"/>
  <SolidColorBrush x:Key="ResourceMarkerBrush" x:Uid="SolidColorBrush_3" Color="{StaticResource ResourceMarkerColor}"/>
  <DrawingBrush x:Key="MarkerBackgroundBrush" x:Uid="DrawingBrush_7" TileBrush.Stretch="None">
    <DrawingBrush.Drawing>
      <DrawingGroup x:Uid="DrawingGroup_5">
        <GeometryDrawing x:Uid="GeometryDrawing_8" Brush="#FFFF0000">
          <GeometryDrawing.Geometry>
            <RectangleGeometry x:Uid="RectangleGeometry_1" RadiusX="1" RadiusY="1" Rect="0,0,11,17"/>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing x:Uid="GeometryDrawing_9" Brush="#FF00FF00">
          <GeometryDrawing.Pen>
            <Pen x:Uid="Pen_1" Thickness="1" Brush="#FF0000FF"/>
          </GeometryDrawing.Pen>
          <GeometryDrawing.Geometry>
            <RectangleGeometry x:Uid="RectangleGeometry_2" RadiusX="0" RadiusY="0" Rect="2.5,5.5,6,6"/>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <Style x:Key="DotIconStyle" x:Uid="Style_1" TargetType="{x:Type Control}">
    <Setter x:Uid="Setter_25" Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
    <Setter x:Uid="Setter_2" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_1" TargetType="{x:Type Control}">
          <Rectangle x:Uid="Rectangle_8" FrameworkElement.Width="12" FrameworkElement.Height="12"
                     Shape.Fill="{TemplateBinding Control.Background}" Shape.StrokeThickness="1" Shape.Stroke="White"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger x:Uid="Trigger_73" Property="UIElement.IsEnabled" Value="false">
        <Setter x:Uid="Setter_441" Property="UIElement.Opacity" Value="0.3"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <ContextMenu x:Key="MarkerContextMenu" x:Shared="false" x:Uid="Menu_1">
    <Control.Template>
      <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type ContextMenu}">
        <Border x:Uid="Border_92" FrameworkElement.Style="{StaticResource DropShadowBorderStyle}">
          <Border x:Uid="Border_1" Background="{DynamicResource MenuBackgroundBrush}"
                  BorderBrush="{DynamicResource WindowBorderBrush}" BorderThickness="1" Grid.Row="1"
                  Padding="0,12,0,12">
            <StackPanel x:Uid="StackPanel_8">
              <TextBlock x:Uid="TextBlock_10" FrameworkElement.Margin="12,0,12,0"
                         Foreground="{DynamicResource MenuTextBrush}"
                         FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}"
                         FontWeight="{DynamicResource {x:Static SystemFonts.CaptionFontWeightKey}}"
                         Text="{Binding AssociatedProperty.PropertyName}"/>
              <ItemsPresenter x:Uid="ItemsPresenter_1" FrameworkElement.Margin="{TemplateBinding Control.Padding}"
                              FrameworkElement.HorizontalAlignment="Stretch" KeyboardNavigation.DirectionalNavigation="Cycle"/>
            </StackPanel>
          </Border>
        </Border>
      </ControlTemplate>
    </Control.Template>
    <FrameworkElement.Resources>
      <Style x:Uid="Style_134" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter x:Uid="Setter_1246" Property="FrameworkElement.Margin" Value="0,4,0,0"/>
        <Setter x:Uid="Setter_1247" Property="Control.Padding" Value="0"/>
        <Setter x:Uid="Setter_1248" Property="Control.Background" Value="Transparent"/>
        <Setter x:Uid="Setter_1249" Property="Controls:ControlStylingUtilities.CustomAccentBrush"
                Value="{DynamicResource MenuBackgroundBrush}"/>
      </Style>
      <Style x:Uid="Style_135" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type Separator}}">
        <Setter x:Uid="Setter_1250" Property="FrameworkElement.Margin" Value="0,4,0,4"/>
      </Style>
    </FrameworkElement.Resources>
    <MenuItem x:Uid="MenuItem_2" automation:AutomationElement.Id="ClearValueMenuItem"
              Command="{x:Static dspi:PropertyMarkerCommands.ClearValueCommand}">
      <MenuItem.CommandTarget>
        <Binding/>
      </MenuItem.CommandTarget>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_1" Orientation="Horizontal">
          <Control x:Uid="Control_15" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource LiteralMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_9" FrameworkElement.Margin="4,0,0,0" Text="Reset"/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
    <MenuItem x:Uid="MenuItem_8" automation:AutomationElement.Id="CustomExpressionMenuItem"
              Command="{x:Static dspi:PropertyMarkerCommands.CustomExpressionCommand}">
      <MenuItem.CommandTarget>
        <Binding/>
      </MenuItem.CommandTarget>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_9" Orientation="Horizontal">
          <Control x:Uid="Control_10" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource LiteralMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_11" FrameworkElement.Margin="4,0,0,0" Text="Custom Expression..."/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
    <Separator x:Uid="Separator_1"/>
    <MenuItem x:Uid="MenuItem_3" automation:AutomationElement.Id="LocalValueMenuItem"
              Command="{x:Static dspi:PropertyMarkerCommands.LocalValueCommand}">
      <MenuItem.CommandTarget>
        <Binding/>
      </MenuItem.CommandTarget>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_2" Orientation="Horizontal">
          <Control x:Uid="Control_3" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource LiteralMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_3" FrameworkElement.Margin="4,0,0,0" Text="Convert to Local Value"/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
    <Separator x:Uid="Separator_2"/>
    <MenuItem x:Uid="MenuItem_4" automation:AutomationElement.Id="LocalResourceMenuItem">
      <UIElement.IsEnabled>
        <Binding Path="AssociatedProperty.IsEnabledLocalResource"/>
      </UIElement.IsEnabled>
      <ItemsControl.ItemsSource>
        <Binding Path="AssociatedProperty.LocalResources"/>
      </ItemsControl.ItemsSource>
      <ItemsControl.ItemContainerStyle>
        <Style x:Uid="Style_5" BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
          <Setter x:Uid="Setter_442" Property="MenuItem.IsChecked">
            <Setter.Value>
              <Binding Path="IsSelected" Mode="OneWay"/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_20" Property="HeaderedItemsControl.Header">
            <Setter.Value>
              <Binding Path="PropertyModel.ResourceName"/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_22" Property="MenuItem.Command"
                  Value="{x:Static dspi:PropertyMarkerCommands.LocalResourceCommand}"/>
          <Setter x:Uid="Setter_23" Property="MenuItem.CommandTarget">
            <Setter.Value>
              <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}" Path="DataContext"/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_24" Property="MenuItem.CommandParameter">
            <Setter.Value>
              <Binding Path="PropertyModel"/>
            </Setter.Value>
          </Setter>
        </Style>
      </ItemsControl.ItemContainerStyle>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_3" Orientation="Horizontal">
          <Control x:Uid="Control_4" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource ResourceMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_4" FrameworkElement.Margin="4,0,0,0" Text="Local Resource"/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
    <MenuItem x:Uid="MenuItem_5" automation:AutomationElement.Id="SystemResourceMenuItem">
      <UIElement.IsEnabled>
        <Binding Path="AssociatedProperty.IsEnabledSystemResource"/>
      </UIElement.IsEnabled>
      <ItemsControl.ItemsSource>
        <Binding Path="AssociatedProperty.SystemResources"/>
      </ItemsControl.ItemsSource>
      <ItemsControl.ItemContainerStyle>
        <Style x:Uid="Style_7" BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
          <Setter x:Uid="Setter_443" Property="MenuItem.IsChecked">
            <Setter.Value>
              <Binding Path="IsSelected" Mode="OneWay"/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_28" Property="HeaderedItemsControl.Header">
            <Setter.Value>
              <Binding Path="PropertyModel.ResourceName"/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_29" Property="MenuItem.Command"
                  Value="{x:Static dspi:PropertyMarkerCommands.SystemResourceCommand}"/>
          <Setter x:Uid="Setter_30" Property="MenuItem.CommandTarget">
            <Setter.Value>
              <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}" Path="DataContext"/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_31" Property="MenuItem.CommandParameter">
            <Setter.Value>
              <Binding Path="PropertyModel"/>
            </Setter.Value>
          </Setter>
        </Style>
      </ItemsControl.ItemContainerStyle>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_4" Orientation="Horizontal">
          <Control x:Uid="Control_5" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource ResourceMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_5" FrameworkElement.Margin="4,0,0,0" Text="System Resource"/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
    <MenuItem x:Uid="MenuItem_9" automation:AutomationElement.Id="EditResourceMenuItem"
              Command="{x:Static dspi:PropertyMarkerCommands.EditResourceCommand}">
      <MenuItem.CommandTarget>
        <Binding/>
      </MenuItem.CommandTarget>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_14" Orientation="Horizontal">
          <Control x:Uid="Control_8" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource ResourceMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_8" FrameworkElement.Margin="4,0,0,0" Text="Edit Resource..."/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
    <MenuItem x:Uid="MenuItem_10" automation:AutomationElement.Id="ConvertToResourceMenuItem"
              Command="{x:Static dspi:PropertyMarkerCommands.ConvertToResourceCommand}">
      <MenuItem.CommandTarget>
        <Binding/>
      </MenuItem.CommandTarget>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_10" Orientation="Horizontal">
          <Control x:Uid="Control_11" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource ResourceMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_22" FrameworkElement.Margin="4,0,0,0" Text="Convert to New Resource..."/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
    <Separator x:Uid="Separator_3"/>
    <MenuItem x:Uid="MenuItem_6" automation:AutomationElement.Id="DataBindingMenuItem"
              Command="{x:Static dspi:PropertyMarkerCommands.DataBindingCommand}">
      <MenuItem.CommandTarget>
        <Binding/>
      </MenuItem.CommandTarget>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_5" Orientation="Horizontal">
          <Control x:Uid="Control_6" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource BindingMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_6" FrameworkElement.Margin="4,0,0,0" Text="Data Binding..."/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
    <MenuItem x:Uid="MenuItem_12" automation:AutomationElement.Id="ElementPropertyBindingMenuItem"
              Command="{x:Static dspi:PropertyMarkerCommands.ElementPropertyBindingCommand}">
      <MenuItem.CommandTarget>
        <Binding/>
      </MenuItem.CommandTarget>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_17" Orientation="Horizontal">
          <Control x:Uid="Control_16" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource BindingMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_28" FrameworkElement.Margin="4,0,0,0" Text="Element Property Binding..."
                     Localization.Attributes="Text (UA_REVIEW, evgenyt)"/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
    <MenuItem x:Uid="MenuItem_7" automation:AutomationElement.Id="TemplateBindingMenuItem">
      <UIElement.IsEnabled>
        <Binding Path="AssociatedProperty.IsEnabledTemplateBinding"/>
      </UIElement.IsEnabled>
      <ItemsControl.ItemsSource>
        <Binding Path="AssociatedProperty.TemplateBindableProperties"/>
      </ItemsControl.ItemsSource>
      <ItemsControl.ItemContainerStyle>
        <Style x:Uid="Style_8" BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
          <Setter x:Uid="Setter_444" Property="MenuItem.IsChecked">
            <Setter.Value>
              <Binding Path="IsSelected" Mode="OneWay"/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_32" Property="HeaderedItemsControl.Header">
            <Setter.Value>
              <Binding Path="PropertyModel.PropertyName"/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_33" Property="MenuItem.Command"
                  Value="{x:Static dspi:PropertyMarkerCommands.TemplateBindingCommand}"/>
          <Setter x:Uid="Setter_34" Property="MenuItem.CommandTarget">
            <Setter.Value>
              <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}" Path="DataContext"/>
            </Setter.Value>
          </Setter>
          <Setter x:Uid="Setter_35" Property="MenuItem.CommandParameter">
            <Setter.Value>
              <Binding Path="PropertyModel"/>
            </Setter.Value>
          </Setter>
        </Style>
      </ItemsControl.ItemContainerStyle>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_6" Orientation="Horizontal">
          <Control x:Uid="Control_7" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource BindingMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_7" FrameworkElement.Margin="4,0,0,0" Text="Template Binding"/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
    <Separator x:Uid="Separator_4"/>
    <MenuItem x:Uid="MenuItem_11" automation:AutomationElement.Id="RecordCurrentValueMenuItem"
              Command="{x:Static dspi:PropertyMarkerCommands.RecordCurrentValueCommand}">
      <MenuItem.CommandTarget>
        <Binding/>
      </MenuItem.CommandTarget>
      <HeaderedItemsControl.Header>
        <StackPanel x:Uid="StackPanel_13" Orientation="Horizontal">
          <Control x:Uid="Control_14" FrameworkElement.Style="{StaticResource DotIconStyle}"
                   Background="{StaticResource ResourceMarkerBrush}"/>
          <TextBlock x:Uid="TextBlock_21" FrameworkElement.Margin="4,0,0,0" Text="Record Current Value"/>
        </StackPanel>
      </HeaderedItemsControl.Header>
    </MenuItem>
  </ContextMenu>
  <MultiBinding x:Key="CheckBoxVisibilityMultiBinding" x:Uid="MultiBinding_3" Mode="OneWay"
                Converter="{StaticResource VisibilityAndConverter}">
    <Binding x:Uid="Binding_6" Path="PropertyValue.Source.IsInherited"
             Converter="{StaticResource InverseVisibilityConverter}"/>
    <Binding x:Uid="Binding_7" Path="PropertyValue.Value"
             Converter="{StaticResource ValueIsClassToVisibilityConverter}"/>
    <Binding x:Uid="Binding_8" Path="PropertyValue.IsCollection"
             Converter="{StaticResource InverseVisibilityConverter}"/>
  </MultiBinding>
  <ControlTemplate x:Key="StandardInlineRowEditorTemplate" x:Uid="DataTemplate_3">
    <Grid x:Uid="Grid_59">
      <Grid.RowDefinitions>
        <RowDefinition x:Uid="RowDefinition_4" MaxHeight="24" MinHeight="24"/>
        <RowDefinition x:Uid="RowDefinition_37"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Uid="ColumnDefinition_7" MinWidth="100" MaxWidth="180" Width="0.4*"
                          DefinitionBase.SharedSizeGroup="Left"/>
        <ColumnDefinition x:Uid="ColumnDefinition_6" Width="0.6*" DefinitionBase.SharedSizeGroup="Middle"/>
        <ColumnDefinition x:Uid="ColumnDefinition_12" Width="12" DefinitionBase.SharedSizeGroup="Right"/>
      </Grid.ColumnDefinitions>
      <fwpi:PropertyEditorNameAreaControl x:Uid="fwpi:PropertyEditorNameAreaControl_1" FrameworkElement.VerticalAlignment="Center">
        <FrameworkElement.ToolTip>
          <Binding Path="PropertyEntry.ToolTip">
            <Binding.RelativeSource>
              <RelativeSource Mode="FindAncestor" AncestorType="{x:Type PropertyEditing:PropertyContainer}"/>
            </Binding.RelativeSource>
          </Binding>
        </FrameworkElement.ToolTip>
      </fwpi:PropertyEditorNameAreaControl>
      <dspi:PropertyMarker x:Name="Marker" x:Uid="Marker" Grid.RowSpan="2" Grid.Column="2"
                           FrameworkElement.HorizontalAlignment="Right"/>
      <Rectangle x:Name="ValueAreaWrapperRectangle" x:Uid="Rectangle_4" Grid.RowSpan="2" Grid.Column="1"
                 FrameworkElement.Margin="4,1,0,1" FrameworkElement.Style="{DynamicResource ValueAreaWrapper}"/>
      <fwpi:PropertyEditorValueAreaControl x:Name="ValueArea" x:Uid="fwpi:PropertyEditorValueAreaControl_1" Grid.RowSpan="2" Grid.Column="1"
                                           FrameworkElement.Margin="4,2,0,2"/>
    </Grid>
  </ControlTemplate>
  <Style x:Key="SubPropertyExpandCheckBoxStyle" x:Uid="Style_87" TargetType="{x:Type CheckBox}"
         BasedOn="{StaticResource ExpandCollapseCheckBox}">
    <Setter x:Uid="Setter_270" Property="UIElement.Visibility"
            Value="{StaticResource CheckBoxVisibilityMultiBinding}"/>
    <Setter x:Uid="Setter_271" Property="ButtonBase.Command"
            Value="{x:Static PropertyEditing:PropertyValueEditorCommands.ShowExtendedPinnedEditor}"/>
    <Setter x:Uid="Setter_272" Property="ToggleButton.IsChecked">
      <Setter.Value>
        <Binding RelativeSource="{RelativeSource Self}"
                 Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer).ActiveEditMode" Mode="OneWay"
                 Converter="{StaticResource EqualsConverter}"
                 ConverterParameter="{x:Static PropertyEditing:PropertyContainerEditMode.ExtendedPinned}"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_1257" Property="UIElement.Focusable" Value="false"/>
    <Setter x:Uid="Setter_266" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_57" TargetType="{x:Type CheckBox}">
          <Controls:Icon x:Name="Icon" x:Uid="Icon" FrameworkElement.ToolTip="Expand" FrameworkElement.Height="12"
                         FrameworkElement.Width="12" UIElement.RenderTransformOrigin="0.5, 0.5"
                         RedChroma="{TemplateBinding Controls:Icon.RedChroma}"
                         GreenChroma="{TemplateBinding Controls:Icon.GreenChroma}"
                         SourceBrush="{StaticResource ItemExpanderIcon}"/>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_40" Property="ToggleButton.IsChecked" Value="True">
              <Setter x:Uid="Setter_267" TargetName="Icon" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <RotateTransform x:Uid="RotateTransform_12" Angle="90"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger x:Uid="Trigger_39" Property="UIElement.IsMouseOver" Value="true">
              <Setter x:Uid="Setter_265" Property="UIElement.Opacity" Value="1"/>
              <Setter x:Uid="Setter_269" TargetName="Icon" Value="{DynamicResource ArrowExpandCollapseMouseOverBrush}"
                      Property="Controls:Icon.RedChroma"/>
            </Trigger>
            <Trigger x:Uid="Trigger_1034" Property="ToggleButton.IsChecked" Value="True">
              <Setter x:Uid="Setter_70" TargetName="Icon" Localization.Attributes="Value(Readable Modifiable)"
                      Property="FrameworkElement.ToolTip" Value="Collapse"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger x:Uid="DataTrigger_2" Value="{x:Static PropertyEditing:PropertyContainerEditMode.ExtendedPinned}">
        <DataTrigger.Binding>
          <Binding RelativeSource="{RelativeSource Self}"
                   Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer).ActiveEditMode" Mode="OneWay"/>
        </DataTrigger.Binding>
        <Setter x:Uid="Setter_273" Property="ButtonBase.Command"
                Value="{x:Static PropertyEditing:PropertyValueEditorCommands.ShowInlineEditor}"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="SubPropertyInlineRowEditorTemplate" x:Uid="ControlTemplate_58">
    <Grid x:Uid="Grid_17">
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Uid="ColumnDefinition_28" MinWidth="100" MaxWidth="180" Width="0.4*"
                          DefinitionBase.SharedSizeGroup="Left"/>
        <ColumnDefinition x:Uid="ColumnDefinition_29" Width="0.6*" DefinitionBase.SharedSizeGroup="Middle"/>
        <ColumnDefinition x:Uid="ColumnDefinition_30" Width="12" DefinitionBase.SharedSizeGroup="Right"/>
      </Grid.ColumnDefinitions>
      <Grid x:Uid="Grid_18" Column="0" FrameworkElement.Height="24">
        <Grid.ColumnDefinitions>
          <ColumnDefinition x:Uid="ColumnDefinition_31" Width="25"/>
          <ColumnDefinition x:Uid="ColumnDefinition_32" Width="*"/>
        </Grid.ColumnDefinitions>
        <CheckBox x:Uid="CheckBox_1" Grid.Column="0" FrameworkElement.Margin="8,0,0,0"
                  FrameworkElement.Style="{StaticResource SubPropertyExpandCheckBoxStyle}"
                  automation:AutomationElement.Id="SubPropertyExpandCheckBox"/>
        <fwpi:PropertyEditorNameAreaControl x:Uid="fwpi:PropertyEditorNameAreaControl_2" FrameworkElement.VerticalAlignment="Center"
                                            Grid.Column="1">
          <FrameworkElement.ToolTip>
            <Binding Path="PropertyEntry.ToolTip" RelativeSource="{RelativeSource TemplatedParent}"/>
          </FrameworkElement.ToolTip>
        </fwpi:PropertyEditorNameAreaControl>
      </Grid>
      <dspi:PropertyMarker x:Name="Marker" x:Uid="dspi:PropertyMarker_1" Grid.Column="2"
                           FrameworkElement.HorizontalAlignment="Right"/>
      <Rectangle x:Uid="Rectangle_7" Grid.Column="0" Grid.ColumnSpan="2" FrameworkElement.Margin="4,1,0,1"
                 FrameworkElement.Style="{DynamicResource ValueAreaWrapper}"/>
      <fwpi:PropertyEditorValueAreaControl x:Name="ValueArea" x:Uid="fwpi:PropertyEditorValueAreaControl_2"
                                           FrameworkElement.HorizontalAlignment="Stretch" Grid.Column="1" FrameworkElement.Margin="4,2,0,2"/>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="SubPropertyExtendedPinnedRowTemplate" x:Uid="ControlTemplate_59">
    <Grid x:Uid="Grid_19">
      <Grid.RowDefinitions>
        <RowDefinition x:Uid="RowDefinition_14" Height="Auto"/>
        <RowDefinition x:Uid="RowDefinition_15" Height="Auto"/>
      </Grid.RowDefinitions>
      <Control x:Uid="Control_9" UIElement.Focusable="false" Grid.Row="0">
        <automation:AutomationElement.Id>
          <Binding Path="PropertyName" Converter="{StaticResource PropertyValueClickControlConverter}"/>
        </automation:AutomationElement.Id>
        <Control.Template>
          <Binding RelativeSource="{RelativeSource Self}"
                   Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer).InlineRowTemplate" Mode="OneWay"/>
        </Control.Template>
      </Control>
      <dspi:ObjectEditor x:Uid="dspi:ObjectEditor_1" Grid.Row="1">
        <FrameworkElement.DataContext>
          <Binding Path="PropertyValue"/>
        </FrameworkElement.DataContext>
        <dspi:ObjectEditor.PropertyValue>
          <Binding/>
        </dspi:ObjectEditor.PropertyValue>
      </dspi:ObjectEditor>
    </Grid>
  </ControlTemplate>
  <MultiBinding x:Key="ShouldUseSubPropertyEditorMultiBinding" x:Uid="MultiBinding_6"
                Converter="{StaticResource AndConverter}">
    <Binding x:Uid="Binding_9" Path="PropertyValue.HasSubProperties"/>
    <Binding x:Uid="Binding_23" Path="PropertyValue.IsMixedValue" Converter="{StaticResource NotConverter}"/>
    <Binding x:Uid="Binding_24" Path="SceneNodeObjectSet.IsViewRepresentationValid"/>
    <Binding x:Uid="Binding_22"
             Path="(PropertyEditing:PropertyContainer.OwningPropertyContainer).ExtendedEditorTemplate"
             Mode="OneWay" Converter="{StaticResource EqualsConverter}"
             ConverterParameter="{x:Static dspi:PropertyEditorTemplateLookup.ObjectEditorExtendedEditorTemplate}"
             RelativeSource="{RelativeSource Self}"/>
  </MultiBinding>
  <Style x:Uid="Style_6" TargetType="{x:Type PropertyEditing:PropertyContainer}"
         BasedOn="{StaticResource KeyedPropertyContainerStyle}">
    <Setter x:Uid="Setter_45" Property="automation:AutomationElement.Id">
      <Setter.Value>
        <Binding Path="PropertyEntry.PropertyName" RelativeSource="{RelativeSource Self}"/>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_9" Property="PropertyEditing:PropertyContainer.InlineRowTemplate"
            Value="{StaticResource StandardInlineRowEditorTemplate}"/>
    <Style.Triggers>
      <DataTrigger x:Uid="DataTrigger_1" Value="False">
        <DataTrigger.Binding>
          <Binding RelativeSource="{RelativeSource Self}" Path="MatchesFilter"/>
        </DataTrigger.Binding>
        <Setter x:Uid="Setter_37" Property="UIElement.Visibility" Value="Collapsed"/>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_3" Binding="{StaticResource ShouldUseSubPropertyEditorMultiBinding}"
                   Value="true">
        <Setter x:Uid="Setter_274" Property="PropertyEditing:PropertyContainer.InlineRowTemplate"
                Value="{StaticResource SubPropertyInlineRowEditorTemplate}"/>
        <Setter x:Uid="Setter_275" Property="PropertyEditing:PropertyContainer.ExtendedPinnedRowTemplate"
                Value="{StaticResource SubPropertyExtendedPinnedRowTemplate}"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="PropertyInspectorTransformRowTemplate" x:Uid="ControlTemplate_145469">
    <Grid x:Uid="Grid_32">
      <Grid.RowDefinitions>
        <RowDefinition x:Uid="RowDefinition_21" Height="Auto"/>
        <RowDefinition x:Uid="RowDefinition_22" Height="*"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Uid="ColumnDefinition_35" Width="100"/>
        <ColumnDefinition x:Uid="ColumnDefinition_36" Width="*"/>
      </Grid.ColumnDefinitions>
      <dspi:PropertyMarker x:Name="Marker" x:Uid="dspi:PropertyMarker_4" Grid.Column="1" FrameworkElement.Margin="4,0,0,0"
                           FrameworkElement.HorizontalAlignment="Left"/>
      <fwpi:PropertyEditorNameAreaControl x:Uid="fwpi:PropertyEditorNameAreaControl_4" FrameworkElement.VerticalAlignment="Top"
                                          Grid.Column="0"/>
      <Rectangle x:Uid="Rectangle_9" Grid.Row="1" Grid.ColumnSpan="2"
                 FrameworkElement.Style="{DynamicResource ValueAreaWrapper}"/>
      <fwpi:PropertyEditorValueAreaControl x:Uid="fwpi:PropertyEditorValueAreaControl_4" Grid.Row="1" Grid.ColumnSpan="2"
                                           FrameworkElement.Margin="0,4,0,2"/>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="PropertyInspectorTileBrushRowTemplate" x:Uid="ControlTemplate_145472">
    <Grid x:Uid="Grid_61">
      <Grid.RowDefinitions>
        <RowDefinition x:Uid="RowDefinition_34" Height="Auto"/>
        <RowDefinition x:Uid="RowDefinition_35" Height="*"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Uid="ColumnDefinition_56" Width="*" DefinitionBase.SharedSizeGroup="Middle"/>
        <ColumnDefinition x:Uid="ColumnDefinition_57" Width="12" DefinitionBase.SharedSizeGroup="Right"/>
      </Grid.ColumnDefinitions>
      <fwpi:PropertyEditorNameAreaControl x:Uid="fwpi:PropertyEditorNameAreaControl_5" FrameworkElement.VerticalAlignment="Top"
                                          FrameworkElement.HorizontalAlignment="Left" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                                          FrameworkElement.Margin="5,0,0,0"/>
      <dspi:PropertyMarker x:Name="Marker" x:Uid="dspi:PropertyMarker_5" Grid.Row="1" Grid.Column="1"
                           FrameworkElement.Margin="2,0,0,0" FrameworkElement.HorizontalAlignment="Left"/>
      <Rectangle x:Name="ValueAreaWrapperRectangle" x:Uid="ValueAreaWrapperRectangle" Grid.Row="1" Grid.Column="0"
                 FrameworkElement.Margin="4,1,0,1" FrameworkElement.Style="{DynamicResource ValueAreaWrapper}"/>
      <fwpi:PropertyEditorValueAreaControl x:Uid="fwpi:PropertyEditorValueAreaControl_5" Grid.Row="1" Grid.Column="0"
                                           FrameworkElement.Margin="4,2,0,2"/>
    </Grid>
  </ControlTemplate>
  <Style x:Key="TileBrushContainerStyle" x:Uid="Style_147"
         TargetType="{x:Type PropertyEditing:PropertyContainer}"
         BasedOn="{StaticResource {x:Type PropertyEditing:PropertyContainer}}">
    <Style.Triggers>
      <DataTrigger x:Uid="DataTrigger_12" Value="System.Windows.Media.TileMode">
        <DataTrigger.Binding>
          <Binding RelativeSource="{RelativeSource Self}" Path="PropertyEntry.PropertyType.FullName"/>
        </DataTrigger.Binding>
        <DataTrigger.Setters>
          <Setter x:Uid="Setter_1403" Property="PropertyEditing:PropertyContainer.InlineRowTemplate"
                  Value="{StaticResource PropertyInspectorTileBrushRowTemplate}"/>
          <Setter x:Uid="Setter_1404" Property="FrameworkElement.ToolTip">
            <Setter.Value>
              <Binding Path="PropertyEntry.ToolTip" RelativeSource="{RelativeSource Self}"/>
            </Setter.Value>
          </Setter>
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_14" Value="System.Windows.Media.Stretch">
        <DataTrigger.Binding>
          <Binding RelativeSource="{RelativeSource Self}" Path="PropertyEntry.PropertyType.FullName"/>
        </DataTrigger.Binding>
        <DataTrigger.Setters>
          <Setter x:Uid="Setter_1899" Property="PropertyEditing:PropertyContainer.InlineRowTemplate"
                  Value="{StaticResource PropertyInspectorTileBrushRowTemplate}"/>
          <Setter x:Uid="Setter_1900" Property="FrameworkElement.ToolTip">
            <Setter.Value>
              <Binding Path="PropertyEntry.ToolTip" RelativeSource="{RelativeSource Self}"/>
            </Setter.Value>
          </Setter>
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_15" Value="System.Windows.Media.ImageSource">
        <DataTrigger.Binding>
          <Binding RelativeSource="{RelativeSource Self}" Path="PropertyEntry.PropertyType.FullName"/>
        </DataTrigger.Binding>
        <DataTrigger.Setters>
          <Setter x:Uid="Setter_1894" Property="PropertyEditing:PropertyContainer.InlineRowTemplate"
                  Value="{StaticResource PropertyInspectorTileBrushRowTemplate}"/>
          <Setter x:Uid="Setter_1895" Property="FrameworkElement.ToolTip">
            <Setter.Value>
              <Binding Path="PropertyEntry.ToolTip" RelativeSource="{RelativeSource Self}"/>
            </Setter.Value>
          </Setter>
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="TransformContainerStyle" x:Uid="Style_169"
         TargetType="{x:Type PropertyEditing:PropertyContainer}"
         BasedOn="{StaticResource {x:Type PropertyEditing:PropertyContainer}}">
    <Style.Triggers>
      <DataTrigger x:Uid="DataTrigger_11" Value="System.Windows.Media.Transform">
        <DataTrigger.Binding>
          <Binding RelativeSource="{RelativeSource Self}" Path="PropertyEntry.PropertyType.FullName"/>
        </DataTrigger.Binding>
        <DataTrigger.Setters>
          <Setter x:Uid="Setter_1401" Property="PropertyEditing:PropertyContainer.InlineRowTemplate"
                  Value="{StaticResource PropertyInspectorTransformRowTemplate}"/>
          <Setter x:Uid="Setter_1402" Property="FrameworkElement.ToolTip">
            <Setter.Value>
              <Binding Path="PropertyEntry.ToolTip" RelativeSource="{RelativeSource Self}"/>
            </Setter.Value>
          </Setter>
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_13" Value="System.Windows.Media.Media3D.Transform3D">
        <DataTrigger.Binding>
          <Binding RelativeSource="{RelativeSource Self}" Path="PropertyEntry.PropertyType.FullName"/>
        </DataTrigger.Binding>
        <DataTrigger.Setters>
          <Setter x:Uid="Setter_1633" Property="PropertyEditing:PropertyContainer.InlineRowTemplate"
                  Value="{StaticResource PropertyInspectorTransformRowTemplate}"/>
          <Setter x:Uid="Setter_1634" Property="FrameworkElement.ToolTip">
            <Setter.Value>
              <Binding Path="PropertyEntry.ToolTip" RelativeSource="{RelativeSource Self}"/>
            </Setter.Value>
          </Setter>
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_16" Value="System.Windows.Media.Projection">
        <DataTrigger.Binding>
          <Binding RelativeSource="{RelativeSource Self}" Path="PropertyEntry.PropertyType.FullName"/>
        </DataTrigger.Binding>
        <DataTrigger.Setters>
          <Setter x:Uid="Setter_1896" Property="PropertyEditing:PropertyContainer.InlineRowTemplate"
                  Value="{StaticResource PropertyInspectorTransformRowTemplate}"/>
          <Setter x:Uid="Setter_1897" Property="FrameworkElement.ToolTip">
            <Setter.Value>
              <Binding Path="PropertyEntry.ToolTip" RelativeSource="{RelativeSource Self}"/>
            </Setter.Value>
          </Setter>
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="CustomNameProperty" x:Uid="ControlTemplate_68" TargetType="{x:Type Control}">
    <Grid x:Uid="Grid_24">
      <Grid.RowDefinitions>
        <RowDefinition x:Uid="RowDefinition_38" MaxHeight="24" MinHeight="24"/>
        <RowDefinition x:Uid="RowDefinition_39"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Uid="ColumnDefinition_33" MinWidth="100" MaxWidth="180" Width="0.4*"/>
        <ColumnDefinition x:Uid="ColumnDefinition_8" Width="0.6*"/>
        <ColumnDefinition x:Uid="ColumnDefinition_34" Width="12"/>
      </Grid.ColumnDefinitions>
      <dspi:PropertyMarker x:Name="Marker" x:Uid="dspi:PropertyMarker_3" Grid.Column="2" Grid.RowSpan="2"
                           FrameworkElement.HorizontalAlignment="Right"/>
      <fwpi:PropertyEditorNameAreaControl x:Uid="fwpi:PropertyEditorNameAreaControl_3"
                                          TextBlock.Text="{TemplateBinding FrameworkElement.Tag}" FrameworkElement.VerticalAlignment="Center"
                                          Grid.Column="0">
        <FrameworkElement.ToolTip>
          <Binding Path="PropertyEntry.ToolTip" RelativeSource="{RelativeSource TemplatedParent}"/>
        </FrameworkElement.ToolTip>
      </fwpi:PropertyEditorNameAreaControl>
      <Rectangle x:Uid="Rectangle_1" Grid.Column="1" Grid.RowSpan="2" FrameworkElement.Margin="4,1,0,1"
                 FrameworkElement.Style="{DynamicResource ValueAreaWrapper}"/>
      <fwpi:PropertyEditorValueAreaControl x:Uid="fwpi:PropertyEditorValueAreaControl_3" Grid.Column="1" Grid.RowSpan="2"
                                           FrameworkElement.Margin="4,2,0,2"/>
    </Grid>
  </ControlTemplate>
  <fwdata:EqualsConverter x:Key="DirectionalNavigationEqualsConverter" x:Uid="fwdata:EqualsConverter_2"
                          DefaultValue="{x:Static KeyboardNavigationMode.Continue}"
                          MatchValue="{x:Static KeyboardNavigationMode.None}"/>
  <Style x:Uid="Style_167" TargetType="{x:Type fwpi:PropertyEditorValueAreaControl}"
         BasedOn="{StaticResource KeyedPropertyEditorValueAreaControlStyle}">
    <Setter x:Uid="Setter_1262" Property="KeyboardNavigation.TabNavigation"
            Value="{Binding ParentProperty.IsExpression, Converter={StaticResource DirectionalNavigationEqualsConverter}, ConverterParameter={StaticResource BoolTrue}}"/>
  </Style>
  <Style x:Key="StackTraceViewStyle" x:Uid="Style_141" TargetType="{x:Type Control}">
    <Setter x:Uid="Setter_1362" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_63" TargetType="{x:Type Control}">
          <Expander x:Uid="Expander_1" HeaderedContentControl.Header="StackTrace" Control.Background="Transparent"
                    Control.BorderBrush="Transparent" FrameworkElement.Margin="-6,0,0,0"
                    ContentControl.Content="{Binding StackTrace}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger x:Uid="DataTrigger_6" Binding="{Binding StackTrace}" Value="">
        <Setter x:Uid="Setter_1363" Property="Control.Template">
          <Setter.Value>
            <ControlTemplate x:Uid="ControlTemplate_64" TargetType="{x:Type Control}">
              <TextBlock x:Uid="TextBlock_14" Text="StackTrace: Empty" FrameworkElement.HorizontalAlignment="Left"
                         TextAlignment="Left" FrameworkElement.VerticalAlignment="Center" FontWeight="Bold"
                         FrameworkElement.Margin="3,0,0,0"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="InnerExceptionViewStyle" x:Uid="Style_142" TargetType="{x:Type Control}">
    <Setter x:Uid="Setter_1364" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_65" TargetType="{x:Type Control}">
          <Expander x:Uid="Expander_2" Control.Background="Transparent" Control.BorderBrush="Transparent"
                    FrameworkElement.Margin="-6,0,0,0" HeaderedContentControl.Header="{Binding InnerExceptionMessage}">
            <ContentPresenter x:Uid="ContentPresenter_1" FrameworkElement.Margin="40,0,0,0"
                              ContentTemplate="{DynamicResource FormattedExceptionViewTemplate}"
                              Content="{Binding InnerException}"/>
          </Expander>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger x:Uid="DataTrigger_7" Binding="{Binding InnerExceptionMessage}" Value="">
        <Setter x:Uid="Setter_1365" Property="Control.Template">
          <Setter.Value>
            <ControlTemplate x:Uid="ControlTemplate_66" TargetType="{x:Type Control}">
              <TextBlock x:Uid="TextBlock_15" Text="InnerException: None" FrameworkElement.HorizontalAlignment="Left"
                         TextAlignment="Left" FrameworkElement.VerticalAlignment="Center" FontWeight="Bold"
                         FrameworkElement.Margin="3,0,0,0"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <DataTemplate x:Key="FormattedExceptionViewTemplate" x:Uid="DataTemplate_8">
    <FrameworkTemplate.Resources>
      <Style x:Uid="Style_143" TargetType="{x:Type Expander}" BasedOn="{StaticResource ExpressionExpander}">
        <Setter x:Uid="Setter_1360" Property="Control.FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}"/>
        <Setter x:Uid="Setter_1361" Property="Control.FontSize"
                Value="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}"/>
      </Style>
      <Style x:Uid="Style_144" TargetType="{x:Type CheckBox}">
        <Setter x:Uid="Setter_1366" Property="Control.FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}"/>
        <Setter x:Uid="Setter_1367" Property="Control.FontSize"
                Value="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}"/>
        <Setter x:Uid="Setter_1368" Property="Control.FontWeight" Value="Bold"/>
      </Style>
    </FrameworkTemplate.Resources>
    <Grid x:Uid="Grid_21" TextElement.Foreground="{DynamicResource Text1Brush}"
          TextElement.FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}"
          TextElement.FontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}">
      <Grid x:Uid="Grid_22">
        <Grid.RowDefinitions>
          <RowDefinition x:Uid="RowDefinition_16" Height="Auto"/>
          <RowDefinition x:Uid="RowDefinition_17" Height="Auto"/>
          <RowDefinition x:Uid="RowDefinition_18" Height="Auto"/>
        </Grid.RowDefinitions>
        <Border x:Uid="Border_3" Padding="2" BorderThickness="1" BorderBrush="{DynamicResource DarkBrush}"
                Background="{DynamicResource PaletteBrush}" FrameworkElement.HorizontalAlignment="Stretch"
                FrameworkElement.VerticalAlignment="Stretch">
          <TextBlock x:Uid="TextBlock_16" FrameworkElement.HorizontalAlignment="Left" TextAlignment="Left"
                     FrameworkElement.VerticalAlignment="Center" FontWeight="Bold" Text="{Binding HeaderMessage}"/>
        </Border>
        <Control x:Uid="Control_12" FrameworkElement.Style="{StaticResource StackTraceViewStyle}" Grid.Row="1"
                 FrameworkElement.Margin="0,2,0,0"/>
        <Control x:Uid="Control_13" FrameworkElement.Style="{StaticResource InnerExceptionViewStyle}" Grid.Row="2"
                 FrameworkElement.Margin="0,2,0,0"/>
      </Grid>
    </Grid>
  </DataTemplate>
  <ControlTemplate x:Key="OverlayStringEditorTemplate" x:Uid="ControlTemplate_145471"
                   TargetType="{x:Type UserInterface:OverlayStringEditor}">
    <Border x:Uid="Border_83" Background="{TemplateBinding Control.Background}"
            BorderBrush="{TemplateBinding Control.BorderBrush}"
            BorderThickness="{TemplateBinding Control.BorderThickness}">
      <Border.CornerRadius>
        <Binding Converter="{StaticResource DoubleToCornerRadiusConverter}"
                 RelativeSource="{RelativeSource TemplatedParent}" Path="CornerRadius"/>
      </Border.CornerRadius>
      <Grid x:Uid="Grid_60">
        <TextBlock x:Uid="TextBlock_29" FrameworkElement.MinWidth="0" FrameworkElement.Margin="6,0,4,1"
                   Text="{TemplateBinding TextBox.Text}" FrameworkElement.VerticalAlignment="Center"
                   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
        <TextBlock x:Name="Overlay" x:Uid="TextBlock_23" UIElement.IsHitTestVisible="false"
                   Text="{TemplateBinding UserInterface:OverlayStringEditor.OverlayText}"
                   FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Center"
                   FrameworkElement.Margin="6,0,0,0" FontStyle="Italic" UIElement.Opacity="0.66"
                   FontFamily="{TemplateBinding Control.FontFamily}" FontWeight="{TemplateBinding Control.FontWeight}"
                   FontSize="{TemplateBinding Control.FontSize}"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger x:Uid="Trigger_1107" Property="UserInterface:OverlayStringEditor.HasText" Value="true">
        <Setter x:Uid="Setter_1888" TargetName="Overlay" Property="UIElement.Opacity" Value="0"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Uid="Style_168" TargetType="{x:Type UserInterface:OverlayStringEditor}"
         BasedOn="{StaticResource {x:Type TextBox}}">
    <Setter x:Uid="Setter_1889" Property="Control.Template"
            Value="{StaticResource OverlayStringEditorTemplate}"/>
  </Style>
  <DataTemplate x:Uid="DataTemplate_2" DataType="{x:Type dspi:DocumentationEntry}">
    <StackPanel x:Uid="StackPanel_16" FrameworkElement.MaxWidth="300">
      <FrameworkElement.Resources>
        <Style x:Uid="Style_172" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
          <Setter x:Uid="Setter_1903" Property="TextBlock.TextWrapping" Value="Wrap"/>
          <Setter x:Uid="Setter_1904" Property="TextBlock.TextAlignment" Value="Left"/>
        </Style>
      </FrameworkElement.Resources>
      <TextBlock x:Name="ContentBlock" x:Uid="TextBlock_25" FrameworkElement.Margin="0,0,0,6"
                 Text="{Binding Content, Mode=OneWay}"/>
      <TextBlock x:Name="PropertyBlock" x:Uid="TextBlock_26" FrameworkElement.Margin="0,0,0,3">
        <Bold x:Uid="Bold_1">
          <TextBlock x:Uid="TextBlock_27" Text="{Binding PropertyTypeName, Mode=OneWay}"/>
        </Bold>
        <TextBlock x:Uid="TextBlock_19" Text="{Binding PropertyName, Mode=OneWay}"/>
      </TextBlock>
    </StackPanel>
    <DataTemplate.Triggers>
      <DataTrigger x:Uid="DataTrigger_17" Binding="{Binding Content, Mode=OneWay}">
        <DataTrigger.Value>
          <x:NullExtension/>
        </DataTrigger.Value>
        <Setter x:Uid="Setter_1905" TargetName="ContentBlock" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter x:Uid="Setter_1906" TargetName="PropertyBlock" Property="FrameworkElement.Margin" Value="0"/>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_18" Binding="{Binding PropertyName, Mode=OneWay}">
        <DataTrigger.Value>
          <x:NullExtension/>
        </DataTrigger.Value>
        <Setter x:Uid="Setter_1907" TargetName="PropertyBlock" Property="UIElement.Visibility" Value="Collapsed"/>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <Style x:Key="DeleteIconButton" x:Uid="Style_2" TargetType="{x:Type Button}">
    <Style.BasedOn>
      <x:NullExtension/>
    </Style.BasedOn>
    <Setter x:Uid="Setter_1518" Property="Control.Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_145470" TargetType="{x:Type Button}">
          <Grid x:Uid="Grid_45" Panel.Background="Transparent">
            <Rectangle x:Name="Symbol" x:Uid="Symbol" FrameworkElement.HorizontalAlignment="Center"
                       FrameworkElement.VerticalAlignment="Center" FrameworkElement.Width="8" FrameworkElement.Height="4"
                       Shape.Fill="{TemplateBinding Controls:Icon.RedChroma}"
                       Shape.Stroke="{TemplateBinding Controls:Icon.GreenChroma}" Shape.StrokeThickness="1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_1105" Property="UIElement.IsMouseOver" Value="true">
              <Setter x:Uid="Setter_1631" TargetName="Symbol" Value="{DynamicResource DeleteIconHoverFillBrush}"
                      Property="Shape.Fill"/>
              <Setter x:Uid="Setter_1632" TargetName="Symbol" Value="{DynamicResource DeleteIconHoverStrokeBrush}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger x:Uid="Trigger_1106" Property="UIElement.IsEnabled" Value="false">
              <Setter x:Uid="Setter_1553" Property="UIElement.Opacity" Value="0.25"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Thickness x:Key="HeaderedComboBoxGroupItemPadding" x:Uid="Thickness_1" Left="19" Top="0" Right="0" Bottom="0"/>
  <GroupStyle x:Key="HeaderedComboBoxBasicGroupStyle" x:Uid="GroupStyle_1">
    <GroupStyle.HeaderTemplate>
      <DataTemplate x:Uid="DataTemplate_9">
        <TextBlock x:Uid="TextBlock_24" FrameworkElement.Height="19px" Padding="12,0,0,0"
                   Background="{DynamicResource RecessedBrush}" FontWeight="Bold" UIElement.Opacity="1">
          <TextBlock.Text>
            <Binding Path="Name"/>
          </TextBlock.Text>
        </TextBlock>
      </DataTemplate>
    </GroupStyle.HeaderTemplate>
    <GroupStyle.ContainerStyle>
      <Style x:Uid="Style_170" TargetType="{x:Type GroupItem}">
        <Setter x:Uid="Setter_1898" Property="Control.Template">
          <Setter.Value>
            <ControlTemplate x:Uid="ControlTemplate_145473" TargetType="{x:Type GroupItem}">
              <StackPanel x:Uid="StackPanel_15">
                <ContentPresenter x:Uid="ContentPresenter_45"/>
                <ItemsPresenter x:Uid="ItemsPresenter_2"/>
              </StackPanel>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </GroupStyle.ContainerStyle>
  </GroupStyle>
  <DrawingBrush x:Key="SkinArrow" x:Uid="DrawingBrush_5" TileBrush.Viewbox="0,0,12,13"
                TileBrush.ViewboxUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup x:Uid="DrawingGroup_3">
        <GeometryDrawing x:Uid="GeometryDrawing_6" Brush="#FFFF0000"
                         Geometry="M 12,6.5 L 5.8233558,0 5.8233558,3.4359019 0,3.4359019 0,9.5641246 5.8233558,9.5641246 5.8233558,13 Z"/>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <DrawingBrush x:Key="SkinSmallArrow" x:Uid="DrawingBrush_6" TileBrush.Viewbox="0,0,10,8"
                TileBrush.ViewboxUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup x:Uid="DrawingGroup_4">
        <GeometryDrawing x:Uid="GeometryDrawing_7" Brush="#FFFF0000"
                         Geometry="M 10,4 L 6.03,0 6.03,2.1144027 0,2.1144027 0,5.8856353 6.03,5.8856353 6.03,8 Z"/>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <DrawingBrush x:Key="Skin_AllSymbol" x:Uid="DrawingBrush_4" TileBrush.Viewbox="0,0,9,10"
                TileBrush.ViewboxUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup x:Uid="DrawingGroup_2">
        <GeometryDrawing x:Uid="GeometryDrawing_5" Brush="#FFFF0000"
                         Geometry="M 4,0 C 5,0 5,0 5.5,1 L 5.5,3.3 7.7,2.5 C 8.2,2.3 8.8,2.6 9,3 9,3.7 8.8,4.2 8.3,4.4 L 6,5.2 7.6,7.3 C 8,7.8 8,8.4 7.4,8.7 7,9 6.3,9 6,8.5 L 4.5,6.4 3,8.5 C 2.6,9 2,9 1.6,8.7 1,8.4 1,7.8 1.4,7.3 L 3,5.2 0.7,4.4 C 0.2,4.2 -0.1,3.7 0,3.2 0.2,2.6 0.8,2.3 1.3,2.5 L 3.5,3.3 3.5,1 C 3.5,0.4 4,0 4,0 Z"/>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <Style x:Key="StateTextBlock" x:Uid="Style_84" TargetType="{x:Type TextBlock}"
         BasedOn="{StaticResource {x:Type TextBlock}}">
    <Setter x:Uid="Setter_1146" Property="TextBlock.FontFamily"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
    <Setter x:Uid="Setter_1147" Property="TextBlock.FontSize"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
    <Setter x:Uid="Setter_1148" Property="TextBlock.FontWeight"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
  </Style>
  <DataTemplate x:Key="SmallTransitionTemplate" x:Uid="DataTemplate_1">
    <Grid x:Name="potentialTransitionGrid" x:Uid="potentialTransitionGrid">
      <automation:AutomationElement.Id>
        <Binding Path="ToStateName"/>
      </automation:AutomationElement.Id>
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Uid="ColumnDefinition_1" Width="Auto"/>
        <ColumnDefinition x:Uid="ColumnDefinition_2" Width="Auto"/>
        <ColumnDefinition x:Uid="ColumnDefinition_3" Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Controls:Icon x:Name="FromStar" x:Uid="FromStar" Grid.Column="0" FrameworkElement.Width="9"
                     FrameworkElement.Height="10" FrameworkElement.VerticalAlignment="Center"
                     FrameworkElement.HorizontalAlignment="Right" SourceBrush="{DynamicResource Skin_AllSymbol}"
                     RedChroma="{TemplateBinding TextElement.Foreground}" UIElement.Visibility="Hidden"/>
      <TextBlock x:Name="From" x:Uid="From" Grid.Column="0" FrameworkElement.HorizontalAlignment="Right"
                 FrameworkElement.Style="{StaticResource StateTextBlock}">
        <TextBlock.Text>
          <Binding Path="FromStateName"/>
        </TextBlock.Text>
      </TextBlock>
      <Controls:Icon x:Uid="FrameworkControls:Icon_1" Grid.Column="1" FrameworkElement.Margin="4,0,4,0"
                     FrameworkElement.Width="10" FrameworkElement.Height="8" FrameworkElement.VerticalAlignment="Center"
                     SourceBrush="{DynamicResource SkinSmallArrow}" RedChroma="{TemplateBinding TextElement.Foreground}"/>
      <Controls:Icon x:Name="ToStar" x:Uid="ToStar" Grid.Column="2" FrameworkElement.Margin="0,0,2,0"
                     FrameworkElement.Width="9" FrameworkElement.Height="10" FrameworkElement.HorizontalAlignment="Left"
                     FrameworkElement.VerticalAlignment="Center" SourceBrush="{DynamicResource Skin_AllSymbol}"
                     RedChroma="{TemplateBinding TextElement.Foreground}" UIElement.Visibility="Collapsed"/>
      <TextBlock x:Name="To" x:Uid="To" Grid.Column="2" FrameworkElement.HorizontalAlignment="Left"
                 FrameworkElement.Style="{StaticResource StateTextBlock}">
        <TextBlock.Text>
          <Binding Path="ToStateName"/>
        </TextBlock.Text>
      </TextBlock>
    </Grid>
    <DataTemplate.Triggers>
      <DataTrigger x:Uid="DataTrigger_19" Binding="{Binding FromStateName}">
        <DataTrigger.Value>
          <x:NullExtension/>
        </DataTrigger.Value>
        <Setter x:Uid="Setter_1554" TargetName="From" Property="UIElement.Visibility" Value="Hidden"/>
        <Setter x:Uid="Setter_1525" TargetName="FromStar" Property="UIElement.Visibility" Value="Visible"/>
      </DataTrigger>
      <MultiDataTrigger x:Uid="MultiDataTrigger_1">
        <MultiDataTrigger.Conditions>
          <Condition x:Uid="Condition_1" Binding="{Binding FromStateName}">
            <Condition.Value>
              <x:NullExtension/>
            </Condition.Value>
          </Condition>
          <Condition x:Uid="Condition_2" Binding="{Binding BalanceTransitionColumns}" Value="true"/>
        </MultiDataTrigger.Conditions>
        <Setter x:Uid="Setter_1555" TargetName="From" Property="TextBlock.Text">
          <Setter.Value>
            <Binding Path="ToStateName"/>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>
      <DataTrigger x:Uid="DataTrigger_20" Binding="{Binding ToStateName}">
        <DataTrigger.Value>
          <x:NullExtension/>
        </DataTrigger.Value>
        <Setter x:Uid="Setter_1528" TargetName="ToStar" Property="UIElement.Visibility" Value="Visible"/>
        <Setter x:Uid="Setter_1556" TargetName="To" Property="UIElement.Visibility" Value="Hidden"/>
        <Setter x:Uid="Setter_1558" TargetName="potentialTransitionGrid" Property="automation:AutomationElement.Id"
                Value="ToAnyState"/>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <fwdata:NullToVisibilityCollapsedConverter x:Key="FontNullVisibilityConverter" x:Uid="data:NullToVisibilityCollapsedConverter_1"/>
  <fwdata:BoolToVisibilityConverter x:Key="FontBoolVisibilityConverter" x:Uid="data:BoolToVisibilityConverter_1"/>
  <dspi:MultiplyDoublesConverter x:Key="FontMultiplyConverter" x:Uid="dpi:MultiplyDoublesConverter_1"/>
  <System:Double x:Key="MinusOne" x:Uid="System:Double_4">-1</System:Double>
  <System:Double x:Key="PreviewFontSize" x:Uid="System:Double_3">16</System:Double>
  <System:Double x:Key="PreviewItemSize" x:Uid="System:Double_2">200</System:Double>
  <System:String x:Key="FontStarToolTip" x:Uid="FontStarToolTip">
    Font added to project
  </System:String>
  <System:String x:Key="SilverlightFontToolTip" x:Uid="SilverlightFontToolTip">
    Built-in Silverlight font
  </System:String>
  <DataTemplate x:Key="ReadableFontFamilyDataTemplate" x:Uid="DataTemplate_10">
    <Grid x:Uid="Grid_62" FrameworkElement.Height="24" TextOptions.TextFormattingMode="Ideal"
          Panel.Background="Transparent" FrameworkElement.ToolTip="{Binding UnescapedFamilyName}">
      <TextBlock FrameworkElement.Name="tb" x:Uid="tb" FrameworkElement.Height="26"
                 FrameworkElement.Margin="0,0,0,-20" FrameworkElement.VerticalAlignment="Bottom"
                 FontSize="{StaticResource PreviewFontSize}" TextTrimming="CharacterEllipsis"
                 FrameworkElement.Width="{StaticResource PreviewItemSize}" Text="{Binding UnescapedFamilyName}"
                 FontFamily="{Binding DisplayFontFamily}">
        <UIElement.RenderTransform>
          <TranslateTransform x:Uid="TranslateTransform_1">
            <TranslateTransform.Y>
              <MultiBinding x:Uid="MultiBinding_1" Converter="{StaticResource FontMultiplyConverter}">
                <Binding x:Uid="Binding_1" Path="DisplayFontFamily.Baseline"/>
                <Binding x:Uid="Binding_2" ElementName="tb" Path="FontSize"/>
                <Binding x:Uid="Binding_3" Source="{StaticResource MinusOne}"/>
              </MultiBinding>
            </TranslateTransform.Y>
          </TranslateTransform>
        </UIElement.RenderTransform>
      </TextBlock>
      <Controls:Icon x:Uid="ctl:Icon_1"
                     Image.Source="pack://application:,,,/Microsoft.Expression.DesignSurface;Component/Resources/Icons/Properties/TextCategoryPane/text_embedded_font_16x16.png"
                     FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Center"
                     FrameworkElement.ToolTip="{StaticResource FontStarToolTip}"
                     UIElement.Visibility="{Binding ProjectFont, Converter={StaticResource FontNullVisibilityConverter}, BindingBase.FallbackValue=Collapsed}"/>
      <Controls:Icon x:Uid="ctl:Icon_3"
                     Image.Source="pack://application:,,,/Microsoft.Expression.DesignSurface;Component/Resources/Icons/Properties/TextCategoryPane/font_silverlight_on_16x16.png"
                     FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Center"
                     FrameworkElement.ToolTip="{StaticResource SilverlightFontToolTip}"
                     UIElement.Visibility="{Binding DisplayAsNativeSilverlightFont, Converter={StaticResource FontBoolVisibilityConverter}, BindingBase.FallbackValue=Collapsed}"/>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="UnreadableFontFamilyDataTemplate" x:Uid="DataTemplate_11">
    <Grid x:Uid="Grid_12" FrameworkElement.HorizontalAlignment="Stretch"
          FrameworkElement.Width="{StaticResource PreviewItemSize}" FrameworkElement.Height="24"
          Panel.Background="Transparent" TextOptions.TextFormattingMode="Ideal"
          FrameworkElement.ToolTip="{Binding UnescapedFamilyName}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Uid="ColumnDefinition_26" Width="*"/>
        <ColumnDefinition x:Uid="ColumnDefinition_27" Width="Auto"/>
        <ColumnDefinition x:Uid="ColumnDefinition_58" Width="Auto"/>
      </Grid.ColumnDefinitions>
      <TextBlock FrameworkElement.Name="tb1" x:Uid="tb1" Grid.Column="0" FrameworkElement.VerticalAlignment="Bottom"
                 FrameworkElement.Margin="0,0,0,-20" FrameworkElement.HorizontalAlignment="Left"
                 FontSize="{StaticResource PreviewFontSize}" TextTrimming="CharacterEllipsis"
                 FrameworkElement.Height="26" Text="{Binding UnescapedFamilyName}">
        <UIElement.RenderTransform>
          <TranslateTransform x:Uid="TranslateTransform_2">
            <TranslateTransform.Y>
              <MultiBinding x:Uid="MultiBinding_2" Converter="{StaticResource FontMultiplyConverter}">
                <Binding x:Uid="Binding_4" ElementName="tb1" Path="FontFamily.Baseline"/>
                <Binding x:Uid="Binding_5" ElementName="tb1" Path="FontSize"/>
                <Binding x:Uid="Binding_30" Source="{StaticResource MinusOne}"/>
              </MultiBinding>
            </TranslateTransform.Y>
          </TranslateTransform>
        </UIElement.RenderTransform>
      </TextBlock>
      <TextBlock FrameworkElement.Name="tb2" x:Uid="tb2" Grid.Column="1" FrameworkElement.VerticalAlignment="Bottom"
                 FrameworkElement.HorizontalAlignment="Right" FrameworkElement.Margin="0,0,0,-20" Text="ABCDE"
                 FontSize="{StaticResource PreviewFontSize}" FrameworkElement.Height="26"
                 FontFamily="{Binding DisplayFontFamily}">
        <UIElement.RenderTransform>
          <TranslateTransform x:Uid="TranslateTransform_3">
            <TranslateTransform.Y>
              <MultiBinding x:Uid="MultiBinding_9" Converter="{StaticResource FontMultiplyConverter}">
                <Binding x:Uid="Binding_31" Path="DisplayFontFamily.Baseline"/>
                <Binding x:Uid="Binding_32" ElementName="tb2" Path="FontSize"/>
                <Binding x:Uid="Binding_33" Source="{StaticResource MinusOne}"/>
              </MultiBinding>
            </TranslateTransform.Y>
          </TranslateTransform>
        </UIElement.RenderTransform>
      </TextBlock>
      <Controls:Icon x:Uid="ctl:Icon_2"
                     Image.Source="pack://application:,,,/Microsoft.Expression.DesignSurface;Component/Resources/Icons/Properties/TextCategoryPane/text_embedded_font_16x16.png"
                     Grid.Column="2" FrameworkElement.VerticalAlignment="Center"
                     FrameworkElement.ToolTip="{StaticResource FontStarToolTip}"
                     UIElement.Visibility="{Binding ProjectFont, Converter={StaticResource FontNullVisibilityConverter}, BindingBase.FallbackValue=Collapsed}"/>
      <Controls:Icon x:Uid="ctl:Icon_4"
                     Image.Source="pack://application:,,,/Microsoft.Expression.DesignSurface;Component/Resources/Icons/Properties/TextCategoryPane/font_silverlight_on_16x16.png"
                     Grid.Column="2" FrameworkElement.VerticalAlignment="Center"
                     FrameworkElement.ToolTip="{StaticResource SilverlightFontToolTip}"
                     UIElement.Visibility="{Binding DisplayAsNativeSilverlightFont, Converter={StaticResource FontBoolVisibilityConverter}, BindingBase.FallbackValue=Collapsed}"/>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="DamagedFontFamilyDataTemplate" x:Uid="DataTemplate_12">
    <Grid x:Uid="Grid_63" FrameworkElement.Height="24" TextOptions.TextFormattingMode="Ideal"
          Panel.Background="Transparent" FrameworkElement.ToolTip="{Binding UnescapedFamilyName}">
      <TextBlock FrameworkElement.Name="tb" x:Uid="TextBlock_30" FrameworkElement.Height="26"
                 FrameworkElement.Margin="0,0,0,-20" FrameworkElement.VerticalAlignment="Bottom"
                 FontSize="{StaticResource PreviewFontSize}" TextTrimming="CharacterEllipsis"
                 FrameworkElement.Width="{StaticResource PreviewItemSize}" Text="{Binding UnescapedFamilyName}">
        <UIElement.RenderTransform>
          <TranslateTransform x:Uid="TranslateTransform_4">
            <TranslateTransform.Y>
              <MultiBinding x:Uid="MultiBinding_10" Converter="{StaticResource FontMultiplyConverter}">
                <Binding x:Uid="Binding_34" ElementName="tb" Path="FontFamily.Baseline"/>
                <Binding x:Uid="Binding_35" ElementName="tb" Path="FontSize"/>
                <Binding x:Uid="Binding_36" Source="{StaticResource MinusOne}"/>
              </MultiBinding>
            </TranslateTransform.Y>
          </TranslateTransform>
        </UIElement.RenderTransform>
      </TextBlock>
      <Controls:Icon x:Uid="Controls:Icon_13"
                     Image.Source="pack://application:,,,/Microsoft.Expression.DesignSurface;Component/Resources/Icons/Properties/TextCategoryPane/text_embedded_font_16x16.png"
                     FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Center"
                     FrameworkElement.ToolTip="{StaticResource FontStarToolTip}"
                     UIElement.Visibility="{Binding ProjectFont, Converter={StaticResource FontNullVisibilityConverter}, BindingBase.FallbackValue=Collapsed}"/>
      <Controls:Icon x:Uid="Controls:Icon_14"
                     Image.Source="pack://application:,,,/Microsoft.Expression.DesignSurface;Component/Resources/Icons/Properties/TextCategoryPane/font_silverlight_on_16x16.png"
                     FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Center"
                     FrameworkElement.ToolTip="{StaticResource SilverlightFontToolTip}"
                     UIElement.Visibility="{Binding DisplayAsNativeSilverlightFont, Converter={StaticResource FontBoolVisibilityConverter}, BindingBase.FallbackValue=Collapsed}"/>
    </Grid>
  </DataTemplate>
</ResourceDictionary>