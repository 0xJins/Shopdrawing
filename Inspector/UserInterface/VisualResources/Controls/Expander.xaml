<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                     xmlns:UserInterface="clr-namespace:Microsoft.Expression.Framework.UserInterface;assembly=Shopdrawing.Framework"
                    xmlns:Data="clr-namespace:Microsoft.Expression.Framework.Data;assembly=Shopdrawing.Framework"
                    mc:Ignorable="d" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:Controls="clr-namespace:Microsoft.Expression.Framework.Controls;assembly=Shopdrawing.Framework"
                    xmlns:ExpressionExtension="clr-namespace:Microsoft.Expression.Framework.Workspaces.Extension;assembly=Shopdrawing.Framework">

    <Style x:Key="ExpandoVerticalListItemStyle" x:Uid="Style_89"
         TargetType="{x:Type UserInterface:ExpandoListItem}" BasedOn="{StaticResource ExpressionExpander}">
        <Setter x:Uid="Setter_466" Property="FrameworkElement.Margin" Value="0,2,0,1"/>
        <Setter x:Uid="Setter_467" Property="Expander.IsExpanded">
            <Setter.Value>
                <Binding Path="IsExpanded" Mode="TwoWay"/>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_468" Property="HeaderedContentControl.Header">
            <Setter.Value>
                <Binding Path="Title" Mode="OneTime"/>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_469" Property="ContentControl.Content">
            <Setter.Value>
                <Binding Path="Content" Mode="OneTime"/>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1311" Property="Control.Padding" Value="4,0,4,4"/>
    </Style>
    <Style x:Key="ExpandoHorizontalListItemStyle" x:Uid="Style_90"
         TargetType="{x:Type UserInterface:ExpandoListItem}" BasedOn="{StaticResource ExpressionExpander}">
        <Setter x:Uid="Setter_470" Property="FrameworkElement.Margin" Value="2,0,1,0"/>
        <Setter x:Uid="Setter_471" Property="Expander.IsExpanded">
            <Setter.Value>
                <Binding Path="IsExpanded" Mode="TwoWay"/>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_472" Property="HeaderedContentControl.Header">
            <Setter.Value>
                <Binding Path="Title" Mode="OneTime"/>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_473" Property="ContentControl.Content">
            <Setter.Value>
                <Binding Path="Content" Mode="OneTime"/>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1312" Property="Control.Padding" Value="4,0,4,4"/>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_79" Property="Expander.IsExpanded" Value="false">
                <Setter x:Uid="Setter_474" Property="Expander.ExpandDirection" Value="Right"/>
                <Setter x:Uid="Setter_1313" Property="Control.Padding" Value="0,4,4,4"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ExpandoRowStyle" x:Uid="Style_91" TargetType="{x:Type RowDefinition}">
        <Setter x:Uid="Setter_475" Property="RowDefinition.MinHeight" Value="24"/>
        <Setter x:Uid="Setter_476" Property="RowDefinition.Height">
            <Setter.Value>
                <Binding Path="AdjustedSize" Mode="TwoWay"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpandoColumnStyle" x:Uid="Style_92" TargetType="{x:Type ColumnDefinition}">
        <Setter x:Uid="Setter_478" Property="ColumnDefinition.MinWidth" Value="24"/>
        <Setter x:Uid="Setter_479" Property="ColumnDefinition.Width">
            <Setter.Value>
                <Binding Path="AdjustedSize" Mode="TwoWay"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpandoVerticalSplitterStyle" x:Uid="Style_93"
         TargetType="{x:Type UserInterface:ExpandoSplitter}">
        <Setter x:Uid="Setter_481" Property="FrameworkElement.Height" Value="3"/>
        <Setter x:Uid="Setter_482" Property="FrameworkElement.Margin" Value="0,-2,0,0"/>
        <Setter x:Uid="Setter_483" Property="FrameworkElement.Cursor" Value="SizeNS"/>
        <Setter x:Uid="Setter_1237" Property="UIElement.Opacity" Value="0"/>
    </Style>
    <Style x:Key="ExpandoHorizontalSplitterStyle" x:Uid="Style_94"
         TargetType="{x:Type UserInterface:ExpandoSplitter}">
        <Setter x:Uid="Setter_484" Property="FrameworkElement.Width" Value="3"/>
        <Setter x:Uid="Setter_485" Property="FrameworkElement.Margin" Value="-2,0,0,0"/>
        <Setter x:Uid="Setter_486" Property="FrameworkElement.Cursor" Value="SizeWE"/>
        <Setter x:Uid="Setter_1238" Property="UIElement.Opacity" Value="0"/>
    </Style>
    <Style x:Key="ExpandoListStyle" x:Uid="Style_95" TargetType="{x:Type UserInterface:ExpandoList}">
        <Setter x:Uid="Setter_487" Property="UserInterface:ExpandoList.ExpandoListItemStyle"
            Value="{StaticResource ExpandoVerticalListItemStyle}"/>
        <Setter x:Uid="Setter_488" Property="UserInterface:ExpandoList.ExpandoDefinitionStyle"
            Value="{StaticResource ExpandoRowStyle}"/>
        <Setter x:Uid="Setter_489" Property="UserInterface:ExpandoList.ExpandoSplitterStyle"
            Value="{StaticResource ExpandoVerticalSplitterStyle}"/>
        <Setter x:Uid="Setter_490" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_51" TargetType="{x:Type UserInterface:ExpandoList}">
                    <Grid x:Name="PART_MainGrid" x:Uid="Grid_29" FrameworkElement.Margin="0,-2,0,-1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_80" Property="UserInterface:ExpandoList.Orientation" Value="Horizontal">
                <Setter x:Uid="Setter_491" Property="UserInterface:ExpandoList.ExpandoListItemStyle"
                Value="{StaticResource ExpandoHorizontalListItemStyle}"/>
                <Setter x:Uid="Setter_492" Property="UserInterface:ExpandoList.ExpandoDefinitionStyle"
                Value="{StaticResource ExpandoColumnStyle}"/>
                <Setter x:Uid="Setter_1121" Property="UserInterface:ExpandoList.ExpandoSplitterStyle"
                Value="{StaticResource ExpandoHorizontalSplitterStyle}"/>
                <Setter x:Uid="Setter_1122" Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_52" TargetType="{x:Type UserInterface:ExpandoList}">
                            <Grid x:Name="PART_MainGrid" x:Uid="Grid_30" FrameworkElement.Margin="-2,0,-1,0"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AdvancedExpanderToggleButtonStyle" x:Uid="Style_144" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_65" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_85" TargetType="{x:Type ToggleButton}">
                    <Grid x:Uid="Grid_20">
                        <Border FrameworkElement.Name="FillBorder" x:Uid="FillBorder"
                    FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.Width="Auto"
                    Background="{DynamicResource AdvancedExpanderBrush}" CornerRadius="0,0,4,4"/>
                        <Controls:Icon FrameworkElement.Name="ToggleButtonIcon" x:Uid="ToggleButtonIcon" FrameworkElement.Width="12"
                           FrameworkElement.Height="10" SourceBrush="{StaticResource DefaultExpanderToggleButtonBrush}"
                           RedChroma="{DynamicResource AdvancedExpanderToggleBrush}" UIElement.RenderTransformOrigin="0.5,0.5"
                           FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="0,2,0,0"
                           FrameworkElement.VerticalAlignment="Top" UIElement.SnapsToDevicePixels="false"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_18" Property="ToggleButton.IsChecked" Value="True">
                            <Setter x:Uid="Setter_57" TargetName="ToggleButtonIcon" Property="UIElement.RenderTransform">
                                <Setter.Value>
                                    <TransformGroup x:Uid="TransformGroup_1">
                                        <ScaleTransform x:Uid="ScaleTransform_2" ScaleX="1" ScaleY="1"/>
                                        <SkewTransform x:Uid="SkewTransform_1" AngleX="0" AngleY="0"/>
                                        <RotateTransform x:Uid="RotateTransform_15" Angle="180"/>
                                        <TranslateTransform x:Uid="TranslateTransform_1" X="0" Y="2"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1091" Property="UIElement.IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_58" Value="{DynamicResource WhiteBrush}" TargetName="ToggleButtonIcon"
                      Property="Controls:Icon.RedChroma"/>
                            <Setter x:Uid="Setter_60" Value="{DynamicResource PaneBrush}" TargetName="FillBorder"
                      Property="Border.Background"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1079" Property="ButtonBase.IsPressed" Value="true">
                            <Setter x:Uid="Setter_1417" Value="{DynamicResource WhiteBrush}" TargetName="ToggleButtonIcon"
                      Property="Controls:Icon.RedChroma"/>
                            <Setter x:Uid="Setter_1873" Value="{DynamicResource ListBackgroundBrush}" TargetName="FillBorder"
                      Property="Border.Background"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpressionAdvancedOptionsExpanderStyle" x:Uid="Style_200" TargetType="{x:Type Expander}"
         BasedOn="{StaticResource {x:Type Expander}}">
        <Setter x:Uid="Setter_1850" Property="Controls:AnimatedExpander.IsAnimated" Value="true"/>
        <Setter x:Uid="Setter_1851" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_84" TargetType="{x:Type Expander}">
                    <FrameworkTemplate.Resources>
                        <Data:MultiplyConverter x:Uid="Data:MultiplyConverter_1" x:Key="NegateConverter" MultiplyValue="-1"/>
                        <Data:SingleMarginConverter x:Uid="Data:SingleMarginConverter_1" x:Key="MarginTopConverter"
                                        Data:MarginConverter.Converter="{StaticResource NegateConverter}" TargetSubProperty="Top"/>
                        <Storyboard x:Uid="Storyboard_2" x:Key="Open">
                            <ThicknessAnimationUsingKeyFrames x:Uid="DoubleAnimationUsingKeyFrames_2" Storyboard.TargetName="ExpandSite"
                                                Storyboard.TargetProperty="Margin">
                                <SplineThicknessKeyFrame x:Uid="SplineDoubleKeyFrame_4" KeySpline=".5,.5,.5,.5" ThicknessKeyFrame.Value="0,0,0,0"
                                         ThicknessKeyFrame.KeyTime="00:00:00.1670000"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames x:Uid="ObjectAnimationUsingKeyFrames_1" Storyboard.TargetName="ExpandSite"
                                             Storyboard.TargetProperty="(Controls:ClickControl.ScrollIntoView)">
                                <DiscreteObjectKeyFrame x:Uid="DiscreteObjectKeyFrame_1" ObjectKeyFrame.KeyTime="00:00:00.167">
                                    <ObjectKeyFrame.Value>
                                        <System:Boolean x:Uid="System:Boolean_1">True</System:Boolean>
                                    </ObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Uid="Storyboard_3" x:Key="Close">
                            <ThicknessAnimation x:Uid="ThicknessAnimation_1" Timeline.BeginTime="00:00:00" Storyboard.TargetName="ExpandSite"
                                  Storyboard.TargetProperty="Margin" Timeline.Duration="00:00:00.1670000"/>
                            <ObjectAnimationUsingKeyFrames x:Uid="ObjectAnimationUsingKeyFrames_2" Storyboard.TargetName="ExpandSite"
                                             Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame x:Uid="DiscreteObjectKeyFrame_2" ObjectKeyFrame.Value="{x:Static Visibility.Collapsed}"
                                        ObjectKeyFrame.KeyTime="00:00:00.167"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </FrameworkTemplate.Resources>
                    <Border x:Uid="Border_55" Background="{DynamicResource AdvancedExpanderBrush}"
                  UIElement.SnapsToDevicePixels="true" CornerRadius="0,0,4,4">
                        <Grid x:Uid="Grid_19" UIElement.ClipToBounds="true">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Uid="RowDefinition_36" Height="14"/>
                                <RowDefinition x:Uid="RowDefinition_37" Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="HeaderSite" x:Uid="ToggleButton_2"
                            FrameworkElement.Style="{StaticResource AdvancedExpanderToggleButtonStyle}"
                            FrameworkElement.MinHeight="0" FrameworkElement.MinWidth="0" UIElement.Focusable="false"
                            Control.FontFamily="{TemplateBinding Control.FontFamily}"
                            Control.FontSize="{TemplateBinding Control.FontSize}"
                            Control.FontStretch="{TemplateBinding Control.FontStretch}"
                            Control.FontStyle="{TemplateBinding Control.FontStyle}"
                            Control.FontWeight="{TemplateBinding Control.FontWeight}"
                            Control.Foreground="{TemplateBinding Control.Foreground}"
                            Control.HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            Control.Padding="{TemplateBinding Control.Padding}"
                            Control.VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            ContentControl.Content="{TemplateBinding HeaderedContentControl.Header}"
                            ContentControl.ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                            FrameworkElement.Width="Auto">
                                <ToggleButton.IsChecked>
                                    <Binding Path="IsExpanded" Mode="TwoWay"
                           RelativeSource="{RelativeSource TemplatedParent, AncestorType={x:Null}}"/>
                                </ToggleButton.IsChecked>
                            </ToggleButton>
                            <Decorator x:Uid="Decorator_1" UIElement.ClipToBounds="true" FrameworkElement.HorizontalAlignment="Stretch"
                         FrameworkElement.VerticalAlignment="Stretch" Grid.Row="1">
                                <Decorator x:Name="ExpandSite" x:Uid="ExpandSite" Panel.ZIndex="-1" UIElement.Visibility="Collapsed">
                                    <FrameworkElement.Margin>
                                        <Binding Path="ActualHeight" ElementName="ExpandSite" Converter="{StaticResource MarginTopConverter}"/>
                                    </FrameworkElement.Margin>
                                    <ContentPresenter x:Name="ExpanderContentPresenter" x:Uid="ContentPresenter_11" FrameworkElement.Margin="4,4,4,4"
                                    UIElement.Focusable="false" Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
                                </Decorator>
                            </Decorator>
                            <Rectangle FrameworkElement.Name="BorderRectangle" x:Uid="BorderRectangle"
                         Shape.Fill="{DynamicResource RecessedBrush}" UIElement.Opacity="0.7"
                         FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.VerticalAlignment="Top"
                         FrameworkElement.Width="Auto" FrameworkElement.Height="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_1080" Property="UIElement.IsEnabled" Value="false">
                            <Setter x:Uid="Setter_66" TargetName="HeaderSite" Property="UIElement.Visibility" Value="Hidden"/>
                            <Setter x:Uid="Setter_1418" TargetName="BorderRectangle" Property="UIElement.Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_25" Property="Expander.IsExpanded" Value="true">
                            <Setter x:Uid="Setter_67" TargetName="ExpanderContentPresenter" Property="FrameworkElement.Margin"
                      Value="4,4,4,4"/>
                            <Setter x:Uid="Setter_68" TargetName="ExpandSite" Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Binding Path="ActualHeight" ElementName="ExpandSite" Converter="{StaticResource MarginTopConverter}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter x:Uid="Setter_1679" Localization.Attributes="Value(Readable Modifiable)" TargetName="HeaderSite"
                      Property="FrameworkElement.ToolTip" Value="Hide advanced properties"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1133" Property="Expander.IsExpanded" Value="false">
                            <Setter x:Uid="Setter_1680" Localization.Attributes="Value(Readable Modifiable)" TargetName="HeaderSite"
                      Property="FrameworkElement.ToolTip" Value="Show advanced properties"/>
                            <Setter x:Uid="Setter_1874" TargetName="ExpandSite" Property="Controls:ClickControl.ScrollIntoView"
                      Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>