<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:FrameworkControls="clr-namespace:Microsoft.Expression.Framework.Controls;assembly=Shopdrawing.Framework"
                    xmlns:Data="clr-namespace:Microsoft.Expression.Framework.Data;assembly=Shopdrawing.Framework">

    <Data:NegatingThicknessConverter x:Key="NegatingThicknessConverter" x:Name="NegatingThicknessConverter"/>

    
    <!--Toggle Button-->
    <Style x:Key="FlatToggleIconButtonStyle" x:Uid="Style_203" TargetType="{x:Type ToggleButton}">
        <Style.BasedOn>
            <x:NullExtension/>
        </Style.BasedOn>
        <Setter Property="Control.Background"
            Value="{DynamicResource FlatToggleNormalBackgroundBrush}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" BorderBrush="{DynamicResource FlatToggleButtonInnerBorderBrush}"
                  Background="{TemplateBinding Control.Background}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1">
                        <FrameworkControls:Icon x:Name="Icon" Image.Source="{TemplateBinding FrameworkControls:Icon.DeselectedImage}">
                            <FrameworkElement.Width>
                                <Binding Path="Source.PixelWidth" RelativeSource="{RelativeSource Self}"/>
                            </FrameworkElement.Width>
                            <FrameworkElement.Height>
                                <Binding Path="Source.PixelHeight" RelativeSource="{RelativeSource Self}"/>
                            </FrameworkElement.Height>
                            <FrameworkElement.Margin>
                                <Binding ElementName="Border" Path="BorderThickness" Converter="{StaticResource NegatingThicknessConverter}"/>
                            </FrameworkElement.Margin>
                        </FrameworkControls:Icon>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="Icon" Property="Image.Source">
                                <Setter.Value>
                                    <Binding Path="(FrameworkControls:Icon.SelectedImage)" RelativeSource="{RelativeSource TemplatedParent}"
                           Mode="OneWay"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Value="{DynamicResource FlatToggleCheckedBackgroundBrush}"
                      Property="Control.Background"/>
                            <Setter TargetName="Border" Value="{DynamicResource FlatToggleCheckedBorderBrush}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Property="Border.BorderThickness" Value="0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="false"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                <Condition Property="FrameworkControls:Icon.ShowSelectedIconOnMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Icon" Property="Image.Source">
                                <Setter.Value>
                                    <Binding Path="(FrameworkControls:Icon.SelectedImage)" RelativeSource="{RelativeSource TemplatedParent}"
                           Mode="OneWay"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_53" Property="ToggleButton.IsChecked" Value="false"/>
                                <Condition x:Uid="Condition_54" Property="UIElement.IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_1868" Value="{DynamicResource FlatToggleHoverBackgroundBrush}"
                      Property="Control.Background"/>
                            <Setter x:Uid="Setter_1869" TargetName="Border" Value="{DynamicResource FlatToggleHoverBorderBrush}"
                      Property="Border.BorderBrush"/>
                            <Setter x:Uid="Setter_1896" TargetName="Border" Property="Border.BorderThickness" Value="0"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_1163" Property="UIElement.IsEnabled" Value="false">
                            <Setter x:Uid="Setter_1870" TargetName="Icon" Property="UIElement.Opacity" Value="0.6"/>
                            <Setter x:Uid="Setter_1871" Value="{DynamicResource FlatToggleDisableBackgroundBrush}"
                      Property="Control.Background"/>
                            <Setter x:Uid="Setter_1872" TargetName="Border" Value="{DynamicResource FlatToggleDisableBorderBrush}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModifiedIconToggleButtonStyle"
                 TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource FlatToggleIconButtonStyle}">
        <Setter Property="UIElement.Focusable" Value="False"/>
        <Setter Property="FrameworkControls:Icon.ShowSelectedIconOnMouseOver" Value="False"/>
    </Style>

</ResourceDictionary>