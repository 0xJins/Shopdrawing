<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:System.Windows.Controls.WpfPropertyGrid"
  xmlns:design="clr-namespace:System.Windows.Controls.WpfPropertyGrid.Design"
  xmlns:controls="clr-namespace:System.Windows.Controls.WpfPropertyGrid.Controls">

  <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
  <local:MultiBooleanToVisibilityConverter x:Key="multiBooleanToVisibilityConverter"/>

  <Style TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Background" Value="#535353"/>
            <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PropertyGrid}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="18"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <controls:SearchTextBox Grid.Row="0" HorizontalAlignment="Stretch" Margin="5,0"
                                Text="{Binding Path=PropertyFilter, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{TemplateBinding PropertyFilterVisibility}" />
                        
                        <Grid Grid.Row="1">
                            <DockPanel LastChildFill="True" Background="{TemplateBinding Background}">
                                <!--<StackPanel DockPanel.Dock="Top" Orientation="Horizontal">

                                </StackPanel>-->

                                <Border BorderThickness="0,1,0,0" BorderBrush="#131313" DockPanel.Dock="Bottom" Height="Auto" MinHeight="75">
                                    <Border x:Name="Bg" CornerRadius="0" Margin="1" BorderBrush="Red">
                                        <StackPanel Orientation="Vertical">
                                        <TextBlock x:Name="PropertyBlock" Margin="5" FontSize="9" FontWeight="Bold" Foreground="#cacaca" TextWrapping="Wrap" TextTrimming="WordEllipsis" Text="{TemplateBinding CurrentProperty}"/>
                                        <TextBlock x:Name="DescriptionBlock" Margin="5,0,5,5" FontSize="9" Foreground="#cacaca" TextWrapping="Wrap" TextTrimming="WordEllipsis" Text="{TemplateBinding CurrentDescription}"/>
                                        <!--<TextBox x:Name="DescriptionBlock"  TextWrapping="Wrap" IsReadOnly="True" Text="{TemplateBinding CurrentDescription}"/>-->
                                            <TextBlock x:Name="TypeBlock" Margin="5,0,5,5" FontSize="9" FontWeight="Bold" Foreground="#cacaca" TextWrapping="Wrap" TextTrimming="WordEllipsis" Text="{TemplateBinding CurrentPropertyType}"/>
                                        </StackPanel>
                                    </Border>
                                </Border>
                                <ContentPresenter FocusManager.IsFocusScope="True" ContentSource="Layout"/>
                                
                            </DockPanel>
                        </Grid>

                        
                    </Grid>
                </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type local:PropertyContainer}" TargetType="{x:Type local:PropertyContainer}">
        <!--<Setter Property="Margin" Value="20,0,0,0"/>-->
            <Setter Property="Visibility">
      <Setter.Value>
        <MultiBinding Converter="{StaticResource multiBooleanToVisibilityConverter}" UpdateSourceTrigger="PropertyChanged" Mode="OneWay">
          <Binding Path="IsBrowsable"/>
          <Binding Path="MatchesFilter"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
    <Setter Property="ToolTip" Value="{Binding Entry.ToolTip, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>

                    <Grid x:Name="propertyItem" IsHitTestVisible="True" Background="#404040" Margin="2,0,0,2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" SharedSizeGroup="PropertyNameSizeGroup"/>
                            <ColumnDefinition Width="*" MinWidth="50"/>
            </Grid.ColumnDefinitions>

                        <!--TextElement.Foreground="{DynamicResource sdr-dark-textHighlight}"-->

                        <TextBlock x:Name="propertyName" FontSize="9" Foreground="{DynamicResource sdr-dark-textHighlight}" VerticalAlignment="Center"
                                   HorizontalAlignment="Right" Grid.Column="0" Text="{Binding DisplayName, Mode=OneTime}" Margin="5,2">
                            <!--<design:PropertyNameTextBlock Grid.Column="0" Margin="0"
                                          Text="{Binding DisplayName, Mode=OneTime}"
                                          Foreground="{Binding ItemsForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:PropertyGrid}}}"
                                          />-->
                        </TextBlock>
                        <design:PropertyEditorContentPresenter x:Name="value" Grid.Column="1"/>
                       
                    </Grid>
                </ControlTemplate>
      </Setter.Value>
        </Setter>
  </Style>

  <Style x:Key="{x:Type local:CategoryContainer}" TargetType="{x:Type local:CategoryContainer}">
    <Setter Property="Visibility">
      <Setter.Value>
        <MultiBinding Converter="{StaticResource multiBooleanToVisibilityConverter}" UpdateSourceTrigger="PropertyChanged" Mode="OneWay">
          <Binding Path="IsBrowsable"/>
          <Binding Path="HasVisibleProperties"/>
          <Binding Path="MatchesFilter"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
                    <Expander x:Name="header" Header="{Binding Name}" IsExpanded="{Binding Entry.IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
            <design:CategoryEditorContentPresenter />
          </Expander>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" SourceName="header" Value="False">
                            <Setter Property="Header" TargetName="header" Value="{Binding NameAndNumberProperties}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>