<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:Controls="clr-namespace:Microsoft.Expression.Framework.Controls;assembly=Shopdrawing.Framework">
   
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" x:Uid="Style_114" TargetType="{x:Type Separator}">
        <Setter x:Uid="Setter_1166" Property="FrameworkElement.Height" Value="1"/>
        <Setter x:Uid="Setter_1167" Property="FrameworkElement.Margin" Value="3,2,3,2"/>
        <Setter x:Uid="Setter_1168" Property="UIElement.Focusable" Value="false"/>
        <Setter x:Uid="Setter_2008" Property="FrameworkElement.UseLayoutRounding" Value="true"/>
        <Setter x:Uid="Setter_1169" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_58" TargetType="{x:Type Separator}">
                    <Border x:Uid="Border_28" Background="{DynamicResource MenuSeparatorBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DropShadowBorderStyle" x:Uid="Style_211" TargetType="{x:Type Border}">
        <Setter x:Uid="Setter_1986" Property="FrameworkElement.Tag"
            Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
        <Style.Triggers>
            <DataTrigger x:Uid="DataTrigger_2" Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter x:Uid="Setter_1954" Property="Border.Background" Value="Transparent"/>
                <Setter x:Uid="Setter_1955" Property="Border.Padding" Value="0,0,5,5"/>
                <Setter x:Uid="Setter_1956" Property="UIElement.Effect">
                    <Setter.Value>
                        <DropShadowEffect x:Uid="DropShadowEffect_1" BlurRadius="4" ShadowDepth="1" Opacity="0.8"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Uid="Style_129" TargetType="{x:Type MenuItem}">
        <Setter x:Uid="Setter_1267" Property="Control.HorizontalContentAlignment">
            <Setter.Value>
                <Binding Path="HorizontalContentAlignment"
                 RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}"/>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1268" Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <Binding Path="VerticalContentAlignment"
                 RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}"/>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1176" Property="Control.Background" Value="{DynamicResource MenuBackgroundBrush}"/>
        <Setter x:Uid="Setter_1177" Property="Control.Foreground" Value="{DynamicResource MenuTextBrush}"/>
        <Setter x:Uid="Setter_1401" Property="Controls:ControlStylingUtilities.CustomAccentBrush"
            Value="{DynamicResource MenuBackgroundBrush}"/>
        <Setter x:Uid="Setter_1155" Property="Control.FontFamily"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
        <Setter x:Uid="Setter_1156" Property="Control.FontSize"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
        <Setter x:Uid="Setter_1157" Property="Control.FontWeight"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
        <Setter x:Uid="Setter_1269" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_66" TargetType="{x:Type MenuItem}">
                    <Border x:Name="Bd" x:Uid="Border_38" UIElement.SnapsToDevicePixels="true"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <Grid x:Name="Grid" x:Uid="Grid_49">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Uid="ColumnDefinition_35" MinWidth="17" Width="Auto"
                                  DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition x:Uid="ColumnDefinition_36" Width="*"/>
                                <ColumnDefinition x:Uid="ColumnDefinition_37" Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Uid="ColumnDefinition_38" Width="14"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="GlyphPanel" x:Uid="Path_12" UIElement.Visibility="Hidden"
                    Shape.Fill="{TemplateBinding Control.Foreground}" FrameworkElement.Margin="4,0,6,0"
                    FrameworkElement.VerticalAlignment="Center" Data="M 0,2 L 0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6 Z"
                    FrameworkElement.FlowDirection="LeftToRight"/>
                            <ContentPresenter x:Name="ContentPresenter" x:Uid="ContentPresenter_33"
                                UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                FrameworkElement.Margin="{TemplateBinding Control.Padding}" Grid.Column="1"
                                Content="{TemplateBinding HeaderedItemsControl.Header}"
                                ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" RecognizesAccessKey="true"
                                ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                ContentSource="Header"/>
                            <TextBlock x:Name="InputGestureText" x:Uid="TextBlock_10" FrameworkElement.Margin="5,2,0,2" Grid.Column="2"
                         DockPanel.Dock="Right" Text="{TemplateBinding MenuItem.InputGestureText}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_1043" Property="MenuItem.IsChecked" Value="true">
                            <Setter x:Uid="Setter_1271" TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1044" Property="MenuItem.IsHighlighted" Value="true">
                            <Setter x:Uid="Setter_1198" Value="{DynamicResource ButtonOverBrush}" Property="Control.Background"/>
                            <Setter x:Uid="Setter_1199" Value="{DynamicResource BackgroundBrush}" Property="Control.Foreground"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1045" Property="UIElement.IsEnabled" Value="false">
                            <Setter x:Uid="Setter_1394" Value="{DynamicResource MenuDisabledTextBrush}" Property="Control.Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_1046" Property="MenuItem.Role" Value="TopLevelHeader">
                <Setter x:Uid="Setter_1273" Property="FrameworkElement.Margin" Value="0,1,0,1"/>
                <Setter x:Uid="Setter_1274" Property="Control.Padding" Value="6,3,6,3"/>
                <Setter x:Uid="Setter_1275" Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_67" TargetType="{x:Type MenuItem}">
                            <Border x:Name="Bd" x:Uid="Border_39" UIElement.SnapsToDevicePixels="true"
                      Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}">
                                <DockPanel x:Name="DockPanel" x:Uid="DockPanel_4">
                                    <Path x:Name="GlyphPanel" x:Uid="Path_13" UIElement.Visibility="Collapsed"
                        Shape.Fill="{TemplateBinding Control.Foreground}" FrameworkElement.Margin="4,0,6,0"
                        FrameworkElement.VerticalAlignment="Center" Data="M 0,2 L 0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6 Z"
                        FrameworkElement.FlowDirection="LeftToRight"/>
                                    <ContentPresenter x:Name="ContentPresenter" x:Uid="ContentPresenter_35"
                                    UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    FrameworkElement.Margin="{TemplateBinding Control.Padding}"
                                    Content="{TemplateBinding HeaderedItemsControl.Header}"
                                    ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" RecognizesAccessKey="true"
                                    ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                    ContentSource="Header"/>
                                    <Controls:ExpressionPopup x:Name="PART_Popup" x:Uid="Popup_2" Popup.AllowsTransparency="true" Popup.Placement="Bottom"
                                            UIElement.Focusable="false"
                                            Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                        <Popup.IsOpen>
                                            <Binding Path="IsSubmenuOpen" RelativeSource="{RelativeSource TemplatedParent, AncestorType={x:Null}}"/>
                                        </Popup.IsOpen>
                                        <Border x:Uid="Border_91" FrameworkElement.Style="{StaticResource DropShadowBorderStyle}">
                                            <Border x:Name="SubMenuBorder" x:Uid="Border_40" Background="{DynamicResource MenuBackgroundBrush}"
                              BorderThickness="1,1,1,1" BorderBrush="{DynamicResource WindowBorderBrush}">
                                                <ScrollViewer x:Name="ScrollViewer" x:Uid="ScrollViewer_6" CanContentScroll="true"
                                      FrameworkElement.Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                    <ItemsPresenter x:Name="ItemsPresenter" x:Uid="ItemsPresenter_2"
                                          UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                          FrameworkElement.Margin="2,2,2,2" KeyboardNavigation.DirectionalNavigation="Cycle"
                                          KeyboardNavigation.TabNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                                                </ScrollViewer>
                                            </Border>
                                        </Border>
                                    </Controls:ExpressionPopup>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger x:Uid="Trigger_1047" Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                                    <Setter x:Uid="Setter_1276" TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_1049" Property="MenuItem.IsChecked" Value="true">
                                    <Setter x:Uid="Setter_1278" TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_1050" Property="MenuItem.IsHighlighted" Value="true">
                                    <Setter x:Uid="Setter_1280" Value="{DynamicResource ButtonOverBrush}" Property="Control.Background"/>
                                    <Setter x:Uid="Setter_1281" Value="{DynamicResource BackgroundBrush}" Property="Control.Foreground"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_1051" Property="UIElement.IsEnabled" Value="false">
                                    <Setter x:Uid="Setter_1282" Value="{DynamicResource MenuDisabledTextBrush}" Property="Control.Foreground"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger x:Uid="Trigger_1052" Property="MenuItem.Role" Value="TopLevelItem">
                <Setter x:Uid="Setter_1283" Property="FrameworkElement.Margin" Value="0,1,0,1"/>
                <Setter x:Uid="Setter_1284" Property="Control.Padding" Value="6,3,6,3"/>
                <Setter x:Uid="Setter_1285" Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_68" TargetType="{x:Type MenuItem}">
                            <Border x:Name="Bd" x:Uid="Border_41" UIElement.SnapsToDevicePixels="true"
                      Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}">
                                <DockPanel x:Name="DockPanel" x:Uid="DockPanel_5">
                                    <Path x:Name="GlyphPanel" x:Uid="Path_14" UIElement.Visibility="Collapsed"
                        Shape.Fill="{TemplateBinding Control.Foreground}" FrameworkElement.Margin="4,0,6,0"
                        FrameworkElement.VerticalAlignment="Center" Data="M 0,2 L 0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6 Z"
                        FrameworkElement.FlowDirection="LeftToRight"/>
                                    <ContentPresenter x:Name="ContentPresenter" x:Uid="ContentPresenter_37"
                                    UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    FrameworkElement.Margin="{TemplateBinding Control.Padding}"
                                    Content="{TemplateBinding HeaderedItemsControl.Header}"
                                    ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" RecognizesAccessKey="true"
                                    ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                    ContentSource="Header"/>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger x:Uid="Trigger_1054" Property="MenuItem.IsChecked" Value="true">
                                    <Setter x:Uid="Setter_1287" TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_1055" Property="MenuItem.IsHighlighted" Value="true">
                                    <Setter x:Uid="Setter_1289" Value="{DynamicResource ButtonOverBrush}" Property="Control.Background"/>
                                    <Setter x:Uid="Setter_1290" Value="{DynamicResource BackgroundBrush}" Property="Control.Foreground"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_1056" Property="UIElement.IsEnabled" Value="false">
                                    <Setter x:Uid="Setter_1291" Value="{DynamicResource MenuDisabledTextBrush}" Property="Control.Foreground"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger x:Uid="Trigger_1057" Property="MenuItem.Role" Value="SubmenuHeader">
                <Setter x:Uid="Setter_1292" Property="DockPanel.Dock" Value="Top"/>
                <Setter x:Uid="Setter_1293" Property="Control.Padding" Value="0,2,0,2"/>
                <Setter x:Uid="Setter_1294" Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_69" TargetType="{x:Type MenuItem}">
                            <Border x:Name="Bd" x:Uid="Border_42" UIElement.SnapsToDevicePixels="true"
                      Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}">
                                <Grid x:Name="Grid" x:Uid="Grid_50">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Uid="ColumnDefinition_50" MinWidth="17" Width="Auto"
                                      DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition x:Uid="ColumnDefinition_40" Width="*"/>
                                        <ColumnDefinition x:Uid="ColumnDefinition_41" Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition x:Uid="ColumnDefinition_42" Width="14"/>
                                    </Grid.ColumnDefinitions>
                                    <Path x:Name="GlyphPanel" x:Uid="Path_15" UIElement.Visibility="Hidden"
                        Shape.Fill="{TemplateBinding Control.Foreground}" FrameworkElement.Margin="4,0,6,0"
                        FrameworkElement.VerticalAlignment="Center" Data="M 0,2 L 0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6 Z"
                        FrameworkElement.FlowDirection="LeftToRight"/>
                                    <ContentPresenter x:Name="ContentPresenter" x:Uid="ContentPresenter_39"
                                    UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    FrameworkElement.Margin="{TemplateBinding Control.Padding}" Grid.Column="1"
                                    Content="{TemplateBinding HeaderedItemsControl.Header}"
                                    ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" RecognizesAccessKey="true"
                                    ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                    ContentSource="Header"/>
                                    <Path x:Name="Path" x:Uid="Path_16" Shape.Fill="{TemplateBinding Control.Foreground}"
                        FrameworkElement.Margin="4,0,6,0" FrameworkElement.VerticalAlignment="Center" Grid.Column="3"
                        DockPanel.Dock="Right" Data="M 0,0 L 4,3.5 0,7 Z"/>
                                    <Controls:ExpressionPopup x:Name="PART_Popup" x:Uid="Popup_3" Popup.AllowsTransparency="true" Popup.Placement="Right"
                                            UIElement.Focusable="false"
                                            Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                            Popup.VerticalOffset="-1" Popup.HorizontalOffset="1">
                                        <Popup.IsOpen>
                                            <Binding Path="IsSubmenuOpen" RelativeSource="{RelativeSource TemplatedParent, AncestorType={x:Null}}"/>
                                        </Popup.IsOpen>
                                        <Border x:Uid="Border_92" FrameworkElement.Style="{StaticResource DropShadowBorderStyle}">
                                            <Border x:Name="SubMenuBorder" x:Uid="Border_43"
                              Background="{TemplateBinding Controls:ControlStylingUtilities.CustomAccentBrush}"
                              BorderThickness="1,1,1,1" BorderBrush="{DynamicResource WindowBorderBrush}">
                                                <ScrollViewer x:Name="ScrollViewer" x:Uid="ScrollViewer_7" CanContentScroll="true"
                                      FrameworkElement.Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                    <ItemsPresenter x:Name="ItemsPresenter" x:Uid="ItemsPresenter_3"
                                          UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                          FrameworkElement.Margin="2,2,2,2" KeyboardNavigation.DirectionalNavigation="Cycle"
                                          KeyboardNavigation.TabNavigation="Cycle" Grid.IsSharedSizeScope="true"/>
                                                </ScrollViewer>
                                            </Border>
                                        </Border>
                                    </Controls:ExpressionPopup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger x:Uid="Trigger_1058" Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                                    <Setter x:Uid="Setter_1295" TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_1060" Property="MenuItem.IsChecked" Value="true">
                                    <Setter x:Uid="Setter_1297" TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_1061" Property="MenuItem.IsHighlighted" Value="true">
                                    <Setter x:Uid="Setter_1299" Value="{DynamicResource ButtonOverBrush}" Property="Control.Background"/>
                                    <Setter x:Uid="Setter_1300" Value="{DynamicResource BackgroundBrush}" Property="Control.Foreground"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_1062" Property="UIElement.IsEnabled" Value="false">
                                    <Setter x:Uid="Setter_1301" Value="{DynamicResource MenuDisabledTextBrush}" Property="Control.Foreground"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger x:Uid="Trigger_1063" Property="MenuItem.Role" Value="SubmenuItem">
                <Setter x:Uid="Setter_1302" Property="DockPanel.Dock" Value="Top"/>
                <Setter x:Uid="Setter_1303" Property="Control.Padding" Value="0,2,0,2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    
    
    <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
    <Style x:Key="MenuScrollViewer" x:Uid="Style_78" TargetType="{x:Type ScrollViewer}">
        <Style.BasedOn>
            <x:NullExtension/>
        </Style.BasedOn>
        <Setter x:Uid="Setter_417" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter x:Uid="Setter_418" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_419" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_39" TargetType="{x:Type ScrollViewer}">
                    <Grid x:Uid="Grid_27">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="ColumnDefinition_21" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="RowDefinition_14" Height="Auto"/>
                            <RowDefinition x:Uid="RowDefinition_15" Height="*"/>
                            <RowDefinition x:Uid="RowDefinition_16" Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Uid="Border_24" Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter x:Uid="ScrollContentPresenter_1"
                                      ContentPresenter.Content="{TemplateBinding ContentControl.Content}"
                                      ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      ContentPresenter.ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                      FrameworkElement.Margin="{TemplateBinding Control.Padding}"/>
                        </Border>
                        <RepeatButton x:Name="LineUpButton" x:Uid="RepeatButton_5" UIElement.Focusable="false" Grid.Column="0"
                          Grid.Row="0" ButtonBase.Command="ScrollBar.LineUpCommand">
                            <UIElement.Visibility>
                                <MultiBinding x:Uid="MultiBinding_1" BindingBase.FallbackValue="Visibility.Collapsed" ConverterParameter="0">
                                    <MultiBinding.Converter>
                                        <MenuScrollingVisibilityConverter x:Uid="MenuScrollingVisibilityConverter_1"/>
                                    </MultiBinding.Converter>
                                    <Binding x:Uid="Binding_1" Path="ComputedVerticalScrollBarVisibility"
                           RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_2" Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_3" Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_4" Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </UIElement.Visibility>
                            <FrameworkElement.Style>
                                <Style x:Uid="Style_79" TargetType="{x:Type RepeatButton}">
                                    <Style.BasedOn>
                                        <x:NullExtension/>
                                    </Style.BasedOn>
                                    <Setter x:Uid="Setter_420" Property="ButtonBase.ClickMode" Value="Hover"/>
                                    <Setter x:Uid="Setter_421" Property="FrameworkElement.MinWidth" Value="0"/>
                                    <Setter x:Uid="Setter_422" Property="FrameworkElement.MinHeight" Value="0"/>
                                    <Setter x:Uid="Setter_423" Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate x:Uid="ControlTemplate_40" TargetType="{x:Type RepeatButton}">
                                                <DockPanel x:Uid="DockPanel_1" Panel.Background="#00FFFFFF">
                                                    <Rectangle x:Name="R1" x:Uid="Rectangle_43" Shape.Fill="#00FFFFFF" FrameworkElement.Width="1"
                                     DockPanel.Dock="Right"/>
                                                    <Rectangle x:Name="B1" x:Uid="Rectangle_44" Shape.Fill="#00FFFFFF" FrameworkElement.Height="1"
                                     DockPanel.Dock="Bottom"/>
                                                    <Rectangle x:Name="L1" x:Uid="Rectangle_45" Shape.Fill="#00FFFFFF" FrameworkElement.Width="1"
                                     DockPanel.Dock="Left"/>
                                                    <Rectangle x:Name="T1" x:Uid="Rectangle_46" Shape.Fill="#00FFFFFF" FrameworkElement.Height="1"
                                     DockPanel.Dock="Top"/>
                                                    <ContentPresenter x:Name="ContentContainer" x:Uid="ContentPresenter_14"
                                            Content="{TemplateBinding ContentControl.Content}"
                                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                            FrameworkElement.Margin="2,2,2,2" FrameworkElement.HorizontalAlignment="Center"
                                            FrameworkElement.VerticalAlignment="Center"/>
                                                </DockPanel>
                                                <ControlTemplate.Triggers>
                                                    <Trigger x:Uid="Trigger_70" Property="ButtonBase.IsPressed" Value="true">
                                                        <Setter x:Uid="Setter_424" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    TargetName="R1" Property="Shape.Fill"/>
                                                        <Setter x:Uid="Setter_425" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    TargetName="B1" Property="Shape.Fill"/>
                                                        <Setter x:Uid="Setter_426" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                    TargetName="L1" Property="Shape.Fill"/>
                                                        <Setter x:Uid="Setter_427" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                    TargetName="T1" Property="Shape.Fill"/>
                                                        <Setter x:Uid="Setter_428" TargetName="ContentContainer" Property="FrameworkElement.Margin" Value="3,3,1,1"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </FrameworkElement.Style>
                            <ButtonBase.CommandTarget>
                                <Binding x:Uid="Binding_5" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </ButtonBase.CommandTarget>
                            <Path x:Uid="Path_6" Shape.Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}">
                                <Path.Data>
                                    <PathGeometry x:Uid="PathGeometry_32">
                                        <PathGeometry.Figures>
                                            <PathFigureCollection x:Uid="PathFigureCollection_32">
                                                <PathFigure x:Uid="PathFigure_32" StartPoint="0,4" IsFilled="true" IsClosed="true">
                                                    <LineSegment x:Uid="LineSegment_49" Point="3.5,0"/>
                                                    <LineSegment x:Uid="LineSegment_50" Point="7,4"/>
                                                </PathFigure>
                                            </PathFigureCollection>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </RepeatButton>
                        <RepeatButton x:Name="LineDownButton" x:Uid="RepeatButton_6" UIElement.Focusable="false" Grid.Column="0"
                          Grid.Row="2" ButtonBase.Command="ScrollBar.LineDownCommand">
                            <UIElement.Visibility>
                                <MultiBinding x:Uid="MultiBinding_2" BindingBase.FallbackValue="Visibility.Collapsed" ConverterParameter="100">
                                    <MultiBinding.Converter>
                                        <MenuScrollingVisibilityConverter x:Uid="MenuScrollingVisibilityConverter_2"/>
                                    </MultiBinding.Converter>
                                    <Binding x:Uid="Binding_6" Path="ComputedVerticalScrollBarVisibility"
                           RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_7" Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_8" Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_9" Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </UIElement.Visibility>
                            <FrameworkElement.Style>
                                <Style x:Uid="Style_80" TargetType="{x:Type RepeatButton}">
                                    <Style.BasedOn>
                                        <x:NullExtension/>
                                    </Style.BasedOn>
                                    <Setter x:Uid="Setter_429" Property="ButtonBase.ClickMode" Value="Hover"/>
                                    <Setter x:Uid="Setter_430" Property="FrameworkElement.MinWidth" Value="0"/>
                                    <Setter x:Uid="Setter_431" Property="FrameworkElement.MinHeight" Value="0"/>
                                    <Setter x:Uid="Setter_432" Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate x:Uid="ControlTemplate_41" TargetType="{x:Type RepeatButton}">
                                                <DockPanel x:Uid="DockPanel_2" Panel.Background="#00FFFFFF">
                                                    <Rectangle x:Name="R1" x:Uid="Rectangle_47" Shape.Fill="#00FFFFFF" FrameworkElement.Width="1"
                                     DockPanel.Dock="Right"/>
                                                    <Rectangle x:Name="B1" x:Uid="Rectangle_48" Shape.Fill="#00FFFFFF" FrameworkElement.Height="1"
                                     DockPanel.Dock="Bottom"/>
                                                    <Rectangle x:Name="L1" x:Uid="Rectangle_49" Shape.Fill="#00FFFFFF" FrameworkElement.Width="1"
                                     DockPanel.Dock="Left"/>
                                                    <Rectangle x:Name="T1" x:Uid="Rectangle_50" Shape.Fill="#00FFFFFF" FrameworkElement.Height="1"
                                     DockPanel.Dock="Top"/>
                                                    <ContentPresenter x:Name="ContentContainer" x:Uid="ContentPresenter_15"
                                            Content="{TemplateBinding ContentControl.Content}"
                                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                            FrameworkElement.Margin="2,2,2,2" FrameworkElement.HorizontalAlignment="Center"
                                            FrameworkElement.VerticalAlignment="Center"/>
                                                </DockPanel>
                                                <ControlTemplate.Triggers>
                                                    <Trigger x:Uid="Trigger_71" Property="ButtonBase.IsPressed" Value="true">
                                                        <Setter x:Uid="Setter_433" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    TargetName="R1" Property="Shape.Fill"/>
                                                        <Setter x:Uid="Setter_434" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    TargetName="B1" Property="Shape.Fill"/>
                                                        <Setter x:Uid="Setter_435" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                    TargetName="L1" Property="Shape.Fill"/>
                                                        <Setter x:Uid="Setter_436" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                    TargetName="T1" Property="Shape.Fill"/>
                                                        <Setter x:Uid="Setter_437" TargetName="ContentContainer" Property="FrameworkElement.Margin" Value="3,3,1,1"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </FrameworkElement.Style>
                            <ButtonBase.CommandTarget>
                                <Binding x:Uid="Binding_10" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </ButtonBase.CommandTarget>
                            <Path x:Uid="Path_7" Shape.Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}">
                                <Path.Data>
                                    <PathGeometry x:Uid="PathGeometry_33">
                                        <PathGeometry.Figures>
                                            <PathFigureCollection x:Uid="PathFigureCollection_33">
                                                <PathFigure x:Uid="PathFigure_33" StartPoint="0,0" IsFilled="true" IsClosed="true">
                                                    <LineSegment x:Uid="LineSegment_51" Point="3.5,4"/>
                                                    <LineSegment x:Uid="LineSegment_52" Point="7,0"/>
                                                </PathFigure>
                                            </PathFigureCollection>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>