<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style TargetType="{x:Type TreeView}" x:Uid="Style_8">
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource ExpressionTreeViewItemStyle}"
            x:Uid="Setter_35"/>
        <Setter Property="Control.Background" x:Uid="Setter_36" Value="Transparent"/>
        <Setter Property="Control.HorizontalContentAlignment" x:Uid="Setter_37" Value="Stretch"/>
    </Style>
    
    <Style x:Key="ExpressionTreeViewItemStyle" TargetType="{x:Type TreeViewItem}" x:Uid="Style_1">
        <Setter Property="Control.Background" x:Uid="Setter_1" Value="Transparent"/>
        <Setter Property="Control.HorizontalContentAlignment" x:Uid="Setter_2"
            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}, AncestorLevel=1}}"/>
        <Setter Property="Control.VerticalContentAlignment" x:Uid="Setter_3"
            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}, AncestorLevel=1}}"/>
        <Setter Property="Control.Padding" x:Uid="Setter_4" Value="1,0,0,0"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
            x:Uid="Setter_5"/>
        <Setter Property="Control.Template" x:Uid="Setter_6">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}" x:Uid="ControlTemplate_1">
                    <Grid x:Uid="Grid_2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" x:Uid="ColumnDefinition_1"/>
                            <ColumnDefinition Width="*" x:Uid="ColumnDefinition_2"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Uid="RowDefinition_1"/>
                            <RowDefinition x:Uid="RowDefinition_2"/>
                        </Grid.RowDefinitions>
                        <Border FrameworkElement.Name="Bd" Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="3"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}" x:Uid="Border_1"/>
                        <ToggleButton FrameworkElement.Name="Expander" ButtonBase.ClickMode="Press" x:Uid="ToggleButton_1"
                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <FrameworkElement.Style>
                                <Style TargetType="{x:Type ToggleButton}" x:Uid="Style_2">
                                    <Setter Property="UIElement.Focusable" x:Uid="Setter_7" Value="false"/>
                                    <Setter Property="FrameworkElement.Width" x:Uid="Setter_8" Value="19"/>
                                    <Setter Property="FrameworkElement.Height" x:Uid="Setter_9" Value="13"/>
                                    <Setter Property="Control.Template" x:Uid="Setter_10">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}" x:Uid="ControlTemplate_2">
                                                <Border FrameworkElement.Width="19" FrameworkElement.Height="13" Background="#00FFFFFF" x:Uid="Border_2">
                                                    <Border FrameworkElement.Width="9" FrameworkElement.Height="9" UIElement.SnapsToDevicePixels="true"
                                  BorderBrush="#FF7898B5" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" x:Uid="Border_3">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" x:Uid="LinearGradientBrush_1">
                                                                <GradientStop Color="#FFFFFFFF" Offset="0.2" x:Uid="GradientStop_1"/>
                                                                <GradientStop Color="#FFC0B7A6" Offset="1" x:Uid="GradientStop_2"/>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                        <Path x:Name="ExpandPath" Shape.Fill="#FF000000" FrameworkElement.Margin="1,1,1,1"
                                  Data="M 0,2 L 0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2 Z" x:Uid="Path_1"/>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger x:Uid="Trigger_1" Property="ToggleButton.IsChecked" Value="True">
                                                        <Setter TargetName="ExpandPath" x:Uid="Setter_11" Property="Path.Data" Value="M 0,2 L 0,3 5,3 5,2 Z"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </FrameworkElement.Style>
                        </ToggleButton>
                        <ContentPresenter FrameworkElement.Name="PART_Header" Grid.Column="1"
                              FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Content="{TemplateBinding HeaderedItemsControl.Header}"
                              ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}"
                              ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                              ContentSource="Header" x:Uid="ContentPresenter_1">
                            <FrameworkElement.DataContext>
                                <x:NullExtension/>
                            </FrameworkElement.DataContext>
                        </ContentPresenter>
                        <ItemsPresenter FrameworkElement.Name="ItemsHost" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="1"
                            x:Uid="ItemsPresenter_1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_2" Property="TreeViewItem.IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" x:Uid="Setter_12" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_3" Property="ItemsControl.HasItems" Value="false">
                            <Setter TargetName="Expander" x:Uid="Setter_13" Property="UIElement.Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_1">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_1" Property="HeaderedItemsControl.HasHeader" Value="false"/>
                                <Condition x:Uid="Condition_2" Property="FrameworkElement.Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" x:Uid="Setter_14" Property="FrameworkElement.MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger x:Uid="MultiTrigger_2">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_3" Property="HeaderedItemsControl.HasHeader" Value="false"/>
                                <Condition x:Uid="Condition_4" Property="FrameworkElement.Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" x:Uid="Setter_15" Property="FrameworkElement.MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_4" Property="TreeViewItem.IsSelected" Value="true">
                            <Setter Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" TargetName="Bd"
                      x:Uid="Setter_16" Property="Border.Background"/>
                            <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" x:Uid="Setter_17"
                      Property="Control.Foreground"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_5" Property="UIElement.IsEnabled" Value="false">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" x:Uid="Setter_18"
                      Property="Control.Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>