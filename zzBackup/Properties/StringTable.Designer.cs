//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringTable {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringTable() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Shopdrawing.Framework.Properties.StringTable", typeof(StringTable).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a fully licensed and activated copy..
        /// </summary>
        internal static string AboutDialogFullyLicensedAndActivatedMessage {
            get {
                return ResourceManager.GetString("AboutDialogFullyLicensedAndActivatedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a fully licensed copy..
        /// </summary>
        internal static string AboutDialogFullyLicensedMessage {
            get {
                return ResourceManager.GetString("AboutDialogFullyLicensedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This software license expires on {0}..
        /// </summary>
        internal static string AboutDialogLicenseExpirationMessage {
            get {
                return ResourceManager.GetString("AboutDialogLicenseExpirationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must activate your product in {0} days..
        /// </summary>
        internal static string AboutDialogRemainingDaysToActivateMessagePlural {
            get {
                return ResourceManager.GetString("AboutDialogRemainingDaysToActivateMessagePlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must activate your product in 1 day..
        /// </summary>
        internal static string AboutDialogRemainingDaysToActivateMessageSingular {
            get {
                return ResourceManager.GetString("AboutDialogRemainingDaysToActivateMessageSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must enter a product key in {0} days..
        /// </summary>
        internal static string AboutDialogRemainingTrialDaysMessagePlural {
            get {
                return ResourceManager.GetString("AboutDialogRemainingTrialDaysMessagePlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must enter a product key in 1 day..
        /// </summary>
        internal static string AboutDialogRemainingTrialDaysMessageSingular {
            get {
                return ResourceManager.GetString("AboutDialogRemainingTrialDaysMessageSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: This computer program is protected by copyright laws and international treaties. Unauthorized reproduction or redistribution of this program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law. Microsoft and {0} are trademarks of the Microsoft group of companies. All other trademarks are property of their respective owners..
        /// </summary>
        internal static string AboutDialogWarningText {
            get {
                return ResourceManager.GetString("AboutDialogWarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Workspaces.
        /// </summary>
        internal static string AllWorkspacesDialogTitle {
            get {
                return ResourceManager.GetString("AllWorkspacesDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alt.
        /// </summary>
        internal static string AltKeyText {
            get {
                return ResourceManager.GetString("AltKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while loading the assembly &quot;{0}&quot;.
        ///{1}.
        /// </summary>
        internal static string ApplicationAssemblyLoadErrorDialogMessage {
            get {
                return ResourceManager.GetString("ApplicationAssemblyLoadErrorDialogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Exception.
        /// </summary>
        internal static string ApplicationSecurityExceptionDialogTitle {
            get {
                return ResourceManager.GetString("ApplicationSecurityExceptionDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inner exception: {0}.
        /// </summary>
        internal static string ApplicationTargetInvocationDialogMessage {
            get {
                return ResourceManager.GetString("ApplicationTargetInvocationDialogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target Invocation Exception.
        /// </summary>
        internal static string ApplicationTargetInvocationDialogTitle {
            get {
                return ResourceManager.GetString("ApplicationTargetInvocationDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing....
        /// </summary>
        internal static string AsyncProcessStatusText {
            get {
                return ResourceManager.GetString("AsyncProcessStatusText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot connect to the activation server..
        /// </summary>
        internal static string CannotConnectToRemoteServer {
            get {
                return ResourceManager.GetString("CannotConnectToRemoteServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checked into source control.
        /// </summary>
        internal static string CheckedIn {
            get {
                return ResourceManager.GetString("CheckedIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checked out to me.
        /// </summary>
        internal static string CheckedOutToMe {
            get {
                return ResourceManager.GetString("CheckedOutToMe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checked out to me exclusively.
        /// </summary>
        internal static string CheckedOutToMeExclusively {
            get {
                return ResourceManager.GetString("CheckedOutToMeExclusively", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete these workspaces?.
        /// </summary>
        internal static string ConfirmMultipleWorkspaceDeletionDialogText {
            get {
                return ResourceManager.GetString("ConfirmMultipleWorkspaceDeletionDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this workspace?.
        /// </summary>
        internal static string ConfirmWorkspaceDeletionDialogText {
            get {
                return ResourceManager.GetString("ConfirmWorkspaceDeletionDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection attempt to the activation server timed out..
        /// </summary>
        internal static string ConnectionAttemptToRemoteServerTimedOut {
            get {
                return ResourceManager.GetString("ConnectionAttemptToRemoteServerTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ctrl.
        /// </summary>
        internal static string ControlKeyText {
            get {
                return ResourceManager.GetString("ControlKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1}).
        /// </summary>
        internal static string CustomTabDisplayNameFormat {
            get {
                return ResourceManager.GetString("CustomTabDisplayNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace.
        /// </summary>
        internal static string DefaultCustomWorkspaceName {
            get {
                return ResourceManager.GetString("DefaultCustomWorkspaceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message.
        /// </summary>
        internal static string DefaultMessageBoxCaption {
            get {
                return ResourceManager.GetString("DefaultMessageBoxCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t show this message again.
        /// </summary>
        internal static string DefaultMessageWindowCheckboxMessage {
            get {
                return ResourceManager.GetString("DefaultMessageWindowCheckboxMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Del.
        /// </summary>
        internal static string DeleteKeyText {
            get {
                return ResourceManager.GetString("DeleteKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot delete the {0} workspace because it is currently in use.  Switch to a different workspace and try again..
        /// </summary>
        internal static string DeleteWorkspaceInUseDialogText {
            get {
                return ResourceManager.GetString("DeleteWorkspaceInUseDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Down.
        /// </summary>
        internal static string DownKeyText {
            get {
                return ResourceManager.GetString("DownKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Empty).
        /// </summary>
        internal static string EmptyMenuItemText {
            get {
                return ResourceManager.GetString("EmptyMenuItemText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End.
        /// </summary>
        internal static string EndKeyText {
            get {
                return ResourceManager.GetString("EndKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1}.
        /// </summary>
        internal static string ErrorMessageWithException {
            get {
                return ResourceManager.GetString("ErrorMessageWithException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1}
        ///		
        ///{2}.
        /// </summary>
        internal static string ErrorMessageWithInnerException {
            get {
                return ResourceManager.GetString("ErrorMessageWithInnerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to join the {0} Customer Experience Improvement Program?.
        /// </summary>
        internal static string FeedbackDialogHeaderText {
            get {
                return ResourceManager.GetString("FeedbackDialogHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Join the {0} Customer Experience Improvement Program.
        /// </summary>
        internal static string FeedbackDialogOptInText {
            get {
                return ResourceManager.GetString("FeedbackDialogOptInText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I do_n&apos;t want to join the program at this time.
        /// </summary>
        internal static string FeedbackDialogOptOutText {
            get {
                return ResourceManager.GetString("FeedbackDialogOptOutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The program collects information about your computer hardware and how you use {0}, without interrupting you. The information helps Microsoft improve this and other Microsoft software. No information collected is used to identify or contact you..
        /// </summary>
        internal static string FeedbackDialogParagraphText {
            get {
                return ResourceManager.GetString("FeedbackDialogParagraphText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Experience Improvement Program.
        /// </summary>
        internal static string FeedbackDialogTitle {
            get {
                return ResourceManager.GetString("FeedbackDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Categories.
        /// </summary>
        internal static string GalleryMainItemDefaultHeader {
            get {
                return ResourceManager.GetString("GalleryMainItemDefaultHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot contain any of the following characters: / \ : * ? &quot; &lt; &gt; |.
        /// </summary>
        internal static string InvalidNameCharacters {
            get {
                return ResourceManager.GetString("InvalidNameCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot contain a system device name such as CON, PRN, AUX, NUL, COM1, or LPT2..
        /// </summary>
        internal static string InvalidNameDeviceName {
            get {
                return ResourceManager.GetString("InvalidNameDeviceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot be empty..
        /// </summary>
        internal static string InvalidNameEmpty {
            get {
                return ResourceManager.GetString("InvalidNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot end in a period or a space..
        /// </summary>
        internal static string InvalidNameEndingPeriodOrSpace {
            get {
                return ResourceManager.GetString("InvalidNameEndingPeriodOrSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path cannot contain consecutive periods between path separators..
        /// </summary>
        internal static string InvalidPathAllDots {
            get {
                return ResourceManager.GetString("InvalidPathAllDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Share paths must use the following format: \\Server\Share.
        /// </summary>
        internal static string InvalidPathBadUncFormat {
            get {
                return ResourceManager.GetString("InvalidPathBadUncFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path cannot contain any of the following characters:  * : ? &quot; &lt; &gt; |.
        /// </summary>
        internal static string InvalidPathCharacters {
            get {
                return ResourceManager.GetString("InvalidPathCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path cannot contain a system device such as CON, PRN, AUX, NUL, COM1, or LPT2..
        /// </summary>
        internal static string InvalidPathDeviceName {
            get {
                return ResourceManager.GetString("InvalidPathDeviceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path cannot be empty..
        /// </summary>
        internal static string InvalidPathEmpty {
            get {
                return ResourceManager.GetString("InvalidPathEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path cannot contain segments between path separators that end in a period or space..
        /// </summary>
        internal static string InvalidPathEndingPeriodOrSpace {
            get {
                return ResourceManager.GetString("InvalidPathEndingPeriodOrSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown path format..
        /// </summary>
        internal static string InvalidPathUnknownFormat {
            get {
                return ResourceManager.GetString("InvalidPathUnknownFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left.
        /// </summary>
        internal static string LeftKeyText {
            get {
                return ResourceManager.GetString("LeftKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Available.
        /// </summary>
        internal static string LicensingActivationPhoneNumberNotAvailable {
            get {
                return ResourceManager.GetString("LicensingActivationPhoneNumberNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Toll-Free).
        /// </summary>
        internal static string LicensingActivationPhoneNumberTollFreeNumber {
            get {
                return ResourceManager.GetString("LicensingActivationPhoneNumberTollFreeNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Toll).
        /// </summary>
        internal static string LicensingActivationPhoneNumberTollNumber {
            get {
                return ResourceManager.GetString("LicensingActivationPhoneNumberTollNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Expression product is activated already..
        /// </summary>
        internal static string LicensingAlreadyActivatedMessage {
            get {
                return ResourceManager.GetString("LicensingAlreadyActivatedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue using your current license..
        /// </summary>
        internal static string LicensingContinueUsingCurrentLicense {
            get {
                return ResourceManager.GetString("LicensingContinueUsingCurrentLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product key is valid, but activation could not be completed..
        /// </summary>
        internal static string LicensingEnterKeySucceededAndActivationFailed {
            get {
                return ResourceManager.GetString("LicensingEnterKeySucceededAndActivationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A licensing installation error has occurred. Please contact customer support for more assistance..
        /// </summary>
        internal static string LicensingInitializationFailureMessage {
            get {
                return ResourceManager.GetString("LicensingInitializationFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to license the product, you must be running as an Administrator..
        /// </summary>
        internal static string LicensingInsufficientRightsMessage {
            get {
                return ResourceManager.GetString("LicensingInsufficientRightsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key you have entered is not valid.  Please enter a valid product key..
        /// </summary>
        internal static string LicensingInvalidKeyMessage {
            get {
                return ResourceManager.GetString("LicensingInvalidKeyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate now.
        /// </summary>
        internal static string LicensingItemizedDialogActivateButton {
            get {
                return ResourceManager.GetString("LicensingItemizedDialogActivateButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter key.
        /// </summary>
        internal static string LicensingItemizedDialogEnterKeyButton {
            get {
                return ResourceManager.GetString("LicensingItemizedDialogEnterKeyButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License expired.
        /// </summary>
        internal static string LicensingItemizedDialogExpiredText {
            get {
                return ResourceManager.GetString("LicensingItemizedDialogExpiredText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fully licensed.
        /// </summary>
        internal static string LicensingItemizedDialogLicensedText {
            get {
                return ResourceManager.GetString("LicensingItemizedDialogLicensedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License expires in {0} days.
        /// </summary>
        internal static string LicensingItemizedDialogTempLicensePluralText {
            get {
                return ResourceManager.GetString("LicensingItemizedDialogTempLicensePluralText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License expires in 1 day.
        /// </summary>
        internal static string LicensingItemizedDialogTempLicenseSingularText {
            get {
                return ResourceManager.GetString("LicensingItemizedDialogTempLicenseSingularText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} days remaining.
        /// </summary>
        internal static string LicensingItemizedDialogTrialTextDaysPlural {
            get {
                return ResourceManager.GetString("LicensingItemizedDialogTrialTextDaysPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 day remaining.
        /// </summary>
        internal static string LicensingItemizedDialogTrialTextDaysSingular {
            get {
                return ResourceManager.GetString("LicensingItemizedDialogTrialTextDaysSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have entered more than one product key that you can use to activate your Expression product. Verify which product key you want to use, and then click Enter Product Key on the Help menu to reenter the product key and activate your Expression product..
        /// </summary>
        internal static string LicensingMultipleActivateableSkus {
            get {
                return ResourceManager.GetString("LicensingMultipleActivateableSkus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate product now.
        /// </summary>
        internal static string LicensingMustActivateDialogActivateNowOption {
            get {
                return ResourceManager.GetString("LicensingMustActivateDialogActivateNowOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have 0 days remaining to activate your Expression product. You must activate your product now..
        /// </summary>
        internal static string LicensingMustActivateDialogHeader {
            get {
                return ResourceManager.GetString("LicensingMustActivateDialogHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot activate using the current product key. Enter a valid product key, and then try to activate again..
        /// </summary>
        internal static string LicensingNoActivateableKeyMessage {
            get {
                return ResourceManager.GetString("LicensingNoActivateableKeyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have not completed the licensing process so the product will now exit.
        ///    
        ///Are you sure you want to close the licensing dialog?.
        /// </summary>
        internal static string LicensingNotLicensedWarningMessage {
            get {
                return ResourceManager.GetString("LicensingNotLicensedWarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation by phone could not be completed. Verify the confirmation ID and try again..
        /// </summary>
        internal static string LicensingPhoneActivationFailedMessage {
            get {
                return ResourceManager.GetString("LicensingPhoneActivationFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A licensing error has occurred. Restart your Expression program and try again. If you continue to receive this error message, reinstall your Expression program to make sure that the license installs correctly..
        /// </summary>
        internal static string LicensingProductSkuLicenseNotInstalledMessage {
            get {
                return ResourceManager.GetString("LicensingProductSkuLicenseNotInstalledMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue using your current license. You have {0} days remaining to activate your Expression product..
        /// </summary>
        internal static string LicensingRemainingDaysInActivationTextPlural {
            get {
                return ResourceManager.GetString("LicensingRemainingDaysInActivationTextPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue using your current license. You have 1 day remaining to activate your Expression product..
        /// </summary>
        internal static string LicensingRemainingDaysInActivationTextSingular {
            get {
                return ResourceManager.GetString("LicensingRemainingDaysInActivationTextSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation successful. Thank you!.
        /// </summary>
        internal static string LicensingSuccessfulActivationMessage {
            get {
                return ResourceManager.GetString("LicensingSuccessfulActivationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have {0} days remaining before you must purchase a product license..
        /// </summary>
        internal static string LicensingTrialDaysRemainingText {
            get {
                return ResourceManager.GetString("LicensingTrialDaysRemainingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thank you for evaluating the product. Your trial period has now expired. If you&apos;d like to continue to use the product, please enter a valid product key..
        /// </summary>
        internal static string LicensingTrialExpiredText {
            get {
                return ResourceManager.GetString("LicensingTrialExpiredText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation of the trial key failed.  Please contact customer support for more assistance..
        /// </summary>
        internal static string LicensingTrialKeyInstallationFailureMessage {
            get {
                return ResourceManager.GetString("LicensingTrialKeyInstallationFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue using the trial version of the product ({0} days remaining). At the end of the trial period you will need to get a product key..
        /// </summary>
        internal static string LicensingUseTrialTextPlural {
            get {
                return ResourceManager.GetString("LicensingUseTrialTextPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue using the trial version of the product (1 day remaining). At the end of the trial period you will need to get a product key..
        /// </summary>
        internal static string LicensingUseTrialTextSingular {
            get {
                return ResourceManager.GetString("LicensingUseTrialTextSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The licensing didn&apos;t start properly..
        /// </summary>
        internal static string LicensingValidationFailureMessage {
            get {
                return ResourceManager.GetString("LicensingValidationFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thank you for licensing this product. You will not be prompted for the key again..
        /// </summary>
        internal static string LicensingValidMessage {
            get {
                return ResourceManager.GetString("LicensingValidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have entered a key corresponding to an expired license. You must activate your Expression product..
        /// </summary>
        internal static string LicensingYouNeedToActivate {
            get {
                return ResourceManager.GetString("LicensingYouNeedToActivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Workspaces.
        /// </summary>
        internal static string ManageWorkspaceConfigurationsDialogTitle {
            get {
                return ResourceManager.GetString("ManageWorkspaceConfigurationsDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This product key has been used the maximum number of times allowed by the Microsoft Software License Terms..
        /// </summary>
        internal static string MaximumUnlockExceeded {
            get {
                return ResourceManager.GetString("MaximumUnlockExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is not enough virtual memory available.  Please save your work and restart {0}..
        /// </summary>
        internal static string MemoryLowErrorMessage {
            get {
                return ResourceManager.GetString("MemoryLowErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string MessageWindowCancelLabel {
            get {
                return ResourceManager.GetString("MessageWindowCancelLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string MessageWindowCloseLabel {
            get {
                return ResourceManager.GetString("MessageWindowCloseLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        internal static string MessageWindowHelpLabel {
            get {
                return ResourceManager.GetString("MessageWindowHelpLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _No.
        /// </summary>
        internal static string MessageWindowNoLabel {
            get {
                return ResourceManager.GetString("MessageWindowNoLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string MessageWindowOKLabel {
            get {
                return ResourceManager.GetString("MessageWindowOKLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Yes.
        /// </summary>
        internal static string MessageWindowYesLabel {
            get {
                return ResourceManager.GetString("MessageWindowYesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///
        ///{1}.
        /// </summary>
        internal static string MoreDetailsErrorMessage {
            get {
                return ResourceManager.GetString("MoreDetailsErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, {1}.
        /// </summary>
        internal static string MultipleKeyboardShortcutFormat {
            get {
                return ResourceManager.GetString("MultipleKeyboardShortcutFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newly added file.
        /// </summary>
        internal static string NewlyAddedFile {
            get {
                return ResourceManager.GetString("NewlyAddedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto ({0}).
        /// </summary>
        internal static string NumberEditorAutoFormat {
            get {
                return ResourceManager.GetString("NumberEditorAutoFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ---.
        /// </summary>
        internal static string NumberEditorNinchedValue {
            get {
                return ResourceManager.GetString("NumberEditorNinchedValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        internal static string OptionsDialogTitle {
            get {
                return ResourceManager.GetString("OptionsDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot save the file &quot;{0}&quot; because it is read-only.
        ///
        ///Expression Blend can attempt to make the file writable and then overwrite the file in its current location.
        ///
        ///Do you want to attempt to overwrite the file?.
        /// </summary>
        internal static string OverwriteConfirmationMessage {
            get {
                return ResourceManager.GetString("OverwriteConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This product key is not compatible with this Expression product. Install the Expression product that is compatible with this product key, or try another valid product key..
        /// </summary>
        internal static string ProductSkuNotInstalled {
            get {
                return ResourceManager.GetString("ProductSkuNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checked out by someone else or in another place.
        /// </summary>
        internal static string RemoteChange {
            get {
                return ResourceManager.GetString("RemoteChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some optimized rendering is supported by your system and video drivers..
        /// </summary>
        internal static string RenderTierOneMessage {
            get {
                return ResourceManager.GetString("RenderTierOneMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full optimized rendering is supported by your system and video drivers..
        /// </summary>
        internal static string RenderTierTwoMessage {
            get {
                return ResourceManager.GetString("RenderTierTwoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No optimized rendering is supported by your system and video drivers..
        /// </summary>
        internal static string RenderTierZeroMessage {
            get {
                return ResourceManager.GetString("RenderTierZeroMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right.
        /// </summary>
        internal static string RightKeyText {
            get {
                return ResourceManager.GetString("RightKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while saving the file &quot;{0}&quot;:
        ///
        ///{1}.
        /// </summary>
        internal static string SaveAccessError {
            get {
                return ResourceManager.GetString("SaveAccessError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save as New Workspace.
        /// </summary>
        internal static string SaveAsNewWorkspaceDialogTitle {
            get {
                return ResourceManager.GetString("SaveAsNewWorkspaceDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do_n&apos;t save.
        /// </summary>
        internal static string SaveChangesNoResponse {
            get {
                return ResourceManager.GetString("SaveChangesNoResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save changes to {0}?.
        /// </summary>
        internal static string SaveChangesTo {
            get {
                return ResourceManager.GetString("SaveChangesTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Save.
        /// </summary>
        internal static string SaveChangesYesResponse {
            get {
                return ResourceManager.GetString("SaveChangesYesResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace.
        /// </summary>
        internal static string ShellOptionsPageTitle {
            get {
                return ResourceManager.GetString("ShellOptionsPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift.
        /// </summary>
        internal static string ShiftKeyText {
            get {
                return ResourceManager.GetString("ShiftKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to source control server. Source control functionality will be disabled..
        /// </summary>
        internal static string SourceControlOfflineDialogIntroduction {
            get {
                return ResourceManager.GetString("SourceControlOfflineDialogIntroduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enlist in Source Control.
        /// </summary>
        internal static string SourceControlOpenProjectDialogTitle {
            get {
                return ResourceManager.GetString("SourceControlOpenProjectDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Space.
        /// </summary>
        internal static string SpaceKeyText {
            get {
                return ResourceManager.GetString("SpaceKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text.
        /// </summary>
        internal static string StyleIconDefaultText {
            get {
                return ResourceManager.GetString("StyleIconDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch To.
        /// </summary>
        internal static string SwitchToDialogTitle {
            get {
                return ResourceManager.GetString("SwitchToDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to access Licensing information..
        /// </summary>
        internal static string UnableToAccessLicensingInformation {
            get {
                return ResourceManager.GetString("UnableToAccessLicensingInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate the activation server. Check your network connection and settings, and try again..
        /// </summary>
        internal static string UnableToFindRemoteServer {
            get {
                return ResourceManager.GetString("UnableToFindRemoteServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up.
        /// </summary>
        internal static string UpKeyText {
            get {
                return ResourceManager.GetString("UpKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Expression tried to open a web page using your current browser but the navigation failed. To view the web page, connect to the Internet, open your browser, and then enter the following address: {0}.
        /// </summary>
        internal static string WebNavigationFailedMessage {
            get {
                return ResourceManager.GetString("WebNavigationFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot launch the Microsoft Expression Web Server. An error occured trying to preview {0}..
        /// </summary>
        internal static string WebServerCannotLaunch {
            get {
                return ResourceManager.GetString("WebServerCannotLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows.
        /// </summary>
        internal static string WindowsKeyText {
            get {
                return ResourceManager.GetString("WindowsKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A workspace with the new name already exists..
        /// </summary>
        internal static string WorkspaceConfigurationErrorExistingNameDialogText {
            get {
                return ResourceManager.GetString("WorkspaceConfigurationErrorExistingNameDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load the selected workspace. The workspace configuration files could not be accessed at {0}..
        /// </summary>
        internal static string WorkspaceConfigurationLoadAccessError {
            get {
                return ResourceManager.GetString("WorkspaceConfigurationLoadAccessError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load the selected workspace. The workspace configuration files could not be found at {0}..
        /// </summary>
        internal static string WorkspaceConfigurationLoadConfigNotFound {
            get {
                return ResourceManager.GetString("WorkspaceConfigurationLoadConfigNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load the selected workspace. The workspace configuration files may be corrupt at {0}..
        /// </summary>
        internal static string WorkspaceConfigurationLoadError {
            get {
                return ResourceManager.GetString("WorkspaceConfigurationLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load the selected workspace. An error occurred when opening the workspace configuration files at {0}..
        /// </summary>
        internal static string WorkspaceConfigurationLoadIOError {
            get {
                return ResourceManager.GetString("WorkspaceConfigurationLoadIOError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to switch the workspace anyway?.
        /// </summary>
        internal static string WorkspaceConfigurationProceedSwitching {
            get {
                return ResourceManager.GetString("WorkspaceConfigurationProceedSwitching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot save the selected workspace. The workspace configuration files could not be accessed at {0}..
        /// </summary>
        internal static string WorkspaceConfigurationSaveAccessError {
            get {
                return ResourceManager.GetString("WorkspaceConfigurationSaveAccessError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot save the selected workspace. The workspace configuration files may be corrupt at {0}..
        /// </summary>
        internal static string WorkspaceConfigurationSaveError {
            get {
                return ResourceManager.GetString("WorkspaceConfigurationSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot save the selected workspace. An error occurred when opening the workspace configuration files at {0}..
        /// </summary>
        internal static string WorkspaceConfigurationSaveIOError {
            get {
                return ResourceManager.GetString("WorkspaceConfigurationSaveIOError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The workspace name that you entered is too long. The name must contain fewer than 50 characters..
        /// </summary>
        internal static string WorkspaceNameIsTooLong {
            get {
                return ResourceManager.GetString("WorkspaceNameIsTooLong", resourceCulture);
            }
        }
    }
}
