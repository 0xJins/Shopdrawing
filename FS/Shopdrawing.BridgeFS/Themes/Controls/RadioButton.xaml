<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="RadioButtonBase" x:Uid="Style_73" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_1028" Property="Control.Background"
            Value="{DynamicResource CheckMarkToggleButtonBackgroundBrush}"/>
        <Setter x:Uid="Setter_1029" Property="Control.BorderBrush"
            Value="{DynamicResource CheckMarkToggleButtonDefaultBorderBrush}"/>
        <Setter x:Uid="Setter_1540" Property="Control.Foreground" Value="{DynamicResource Text1Brush}"/>
        <Setter x:Uid="Setter_1631" Property="Control.FontFamily"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
        <Setter x:Uid="Setter_1632" Property="Control.FontSize"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
        <Setter x:Uid="Setter_1633" Property="Control.FontWeight"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
        <Setter x:Uid="Setter_1825" Property="KeyboardNavigation.AcceptsReturn" Value="false"/>
        <Setter x:Uid="Setter_1541" Property="Control.Padding" Value="4,0,0,0"/>
        <Setter x:Uid="Setter_1542" Property="FrameworkElement.MinHeight" Value="20"/>
        <Setter x:Uid="Setter_1543" Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_1663" Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style x:Uid="Style_177">
                    <Setter x:Uid="Setter_1664" Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate x:Uid="ControlTemplate_107">
                                <Ellipse x:Uid="Ellipse_6" UIElement.SnapsToDevicePixels="true"
                         Shape.Stroke="{DynamicResource ControlFocusBorderBrush}" Shape.StrokeThickness="1"
                         FrameworkElement.Width="12" FrameworkElement.Height="12"
                         FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="0,4,0,0"
                         FrameworkElement.VerticalAlignment="Top"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1030" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_24" TargetType="{x:Type ToggleButton}">
                    <Grid x:Uid="Grid_67" Panel.Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="ColumnDefinition_63" Width="Auto"/>
                            <ColumnDefinition x:Uid="ColumnDefinition_64" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Uid="Grid_8" FrameworkElement.Width="12" FrameworkElement.Height="12"
                  FrameworkElement.Margin="0,4,0,0" FrameworkElement.VerticalAlignment="Top">
                            <Ellipse x:Name="Ellipse_Border" x:Uid="Ellipse_1" Shape.Fill="{TemplateBinding Control.Background}"
                       Shape.Stroke="{TemplateBinding Control.BorderBrush}" Shape.StrokeThickness="1"
                       FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.VerticalAlignment="Stretch"/>
                            <Ellipse x:Name="CheckMark" x:Uid="Ellipse_2" Shape.Fill="{TemplateBinding Control.Foreground}"
                       FrameworkElement.Width="6" FrameworkElement.Height="6"
                       FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center"/>
                        </Grid>
                        <ContentPresenter x:Uid="ContentPresenter_5" Grid.Column="1"
                              FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              FrameworkElement.Margin="{TemplateBinding Control.Padding}"
                              FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              RecognizesAccessKey="true"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_1004" Property="ToggleButton.IsChecked" Value="false">
                            <Setter x:Uid="Setter_1031" TargetName="CheckMark" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1005" Property="UIElement.IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_1032" Value="{DynamicResource CheckMarkToggleButtonMouseOverBorderBrush}"
                      Property="Control.BorderBrush"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1114" Property="UIElement.IsEnabled" Value="false">
                            <Setter x:Uid="Setter_1764" Value="{DynamicResource CheckMarkToggleButtonDisabledBorderBrush}"
                      Property="Control.BorderBrush"/>
                            <Setter x:Uid="Setter_1547" Value="{DynamicResource DialogDisabledTextBrush}" Property="Control.Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_187" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource RadioButtonBase}"/>
</ResourceDictionary>