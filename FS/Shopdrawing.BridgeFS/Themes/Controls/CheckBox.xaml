<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:Controls="clr-namespace:Microsoft.Expression.Framework.Controls;assembly=Shopdrawing.Framework"
                    xmlns:ValueEditors="clr-namespace:Microsoft.Expression.Framework.ValueEditors;assembly=Shopdrawing.Framework">
    
    <Style x:Key="ExpressionCheckBox" x:Uid="Style_57" TargetType="{x:Type CheckBox}">
        <Setter x:Uid="Setter_311" Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter x:Uid="Setter_1419" Property="Control.Foreground" Value="{DynamicResource Text1Brush}"/>
        <Setter x:Uid="Setter_1420" Property="Control.Background"
            Value="{DynamicResource CheckMarkToggleButtonBackgroundBrush}"/>
        <Setter x:Uid="Setter_1421" Property="Control.BorderBrush"
            Value="{DynamicResource CheckMarkToggleButtonDefaultBorderBrush}"/>
        <Setter x:Uid="Setter_1131" Property="Control.FontFamily"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
        <Setter x:Uid="Setter_1132" Property="Control.FontSize"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
        <Setter x:Uid="Setter_1133" Property="Control.FontWeight"
            Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
        <Setter x:Uid="Setter_1422" Property="Control.Padding" Value="4,0,0,0"/>
        <Setter x:Uid="Setter_1539" Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_1672" Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style x:Uid="Style_175">
                    <Setter x:Uid="Setter_1660" Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate x:Uid="ControlTemplate_105">
                                <Rectangle x:Uid="Rectangle_60" UIElement.SnapsToDevicePixels="true"
                           Shape.Stroke="{DynamicResource ControlFocusBorderBrush}" Shape.StrokeThickness="1"
                           FrameworkElement.Width="12" FrameworkElement.Height="12"
                           FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1423" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_86" TargetType="{x:Type CheckBox}">
                    <Grid x:Uid="Grid_66" Panel.Background="Transparent" UIElement.SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="ColumnDefinition_61" Width="Auto"/>
                            <ColumnDefinition x:Uid="ColumnDefinition_62" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Uid="Border_56" FrameworkElement.Width="12" FrameworkElement.Height="12"
                    FrameworkElement.VerticalAlignment="Center" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1">
                            <Grid x:Uid="Grid_75">
                                <Path x:Name="CheckMark" x:Uid="Path_20" Shape.Fill="{TemplateBinding Control.Foreground}"
                      Shape.Stretch="Fill" FrameworkElement.Margin="0,0,0,0"
                      Data="M 1,5.3616667 L 4,9.3613333 9,1.3616672 C 9,1.3616672 7.0772775,0.36137562 6.5386388,1.3613338 6,2.3612921 4,6.3612346 4,6.3612346 L 2,4.3613912 Z"
                      UIElement.Visibility="Collapsed" FrameworkElement.Width="8" FrameworkElement.Height="8"/>
                                <Rectangle x:Name="NinchedRectangle" x:Uid="NinchedRectangle" UIElement.Visibility="Collapsed"
                           FrameworkElement.Width="8" FrameworkElement.Height="8" Shape.Stretch="Fill"
                           FrameworkElement.Margin="2,2,2,2" Shape.Fill="{TemplateBinding Control.Foreground}"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Uid="ContentPresenter_49" Grid.Column="1"
                              FrameworkElement.Margin="{TemplateBinding Control.Padding}"
                              FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="true"
                              UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_1081" Property="UIElement.IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_1424" Value="{DynamicResource CheckMarkToggleButtonMouseOverBorderBrush}"
                      Property="Control.BorderBrush"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1082" Property="ToggleButton.IsChecked" Value="True">
                            <Setter x:Uid="Setter_1425" TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1138" Property="ToggleButton.IsChecked">
                            <Trigger.Value>
                                <x:NullExtension x:Uid="x:Null_1"/>
                            </Trigger.Value>
                            <Setter x:Uid="Setter_1709" TargetName="NinchedRectangle" Property="UIElement.Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1077" Property="UIElement.IsEnabled" Value="false">
                            <Setter x:Uid="Setter_1770" Value="{DynamicResource CheckMarkToggleButtonDisabledBorderBrush}"
                      Property="Control.BorderBrush"/>
                            <Setter x:Uid="Setter_1393" Value="{DynamicResource DialogDisabledTextBrush}" Property="Control.Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_206" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ExpressionCheckBox}"/>
    <Style x:Key="TallCheckBox" x:Uid="Style_168" TargetType="{x:Type CheckBox}"
         BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter x:Uid="Setter_1332" Property="FrameworkElement.MinHeight" Value="20"/>
        <Setter x:Uid="Setter_1661" Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style x:Uid="Style_176">
                    <Setter x:Uid="Setter_1662" Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate x:Uid="ControlTemplate_106">
                                <Rectangle x:Uid="Rectangle_61" UIElement.SnapsToDevicePixels="true"
                           Shape.Stroke="{DynamicResource ControlFocusBorderBrush}" Shape.StrokeThickness="1"
                           FrameworkElement.Width="12" FrameworkElement.Height="12"
                           FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Top"
                           FrameworkElement.Margin="0,4,0,0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_1622" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_103" TargetType="{x:Type CheckBox}">
                    <Grid x:Uid="Grid_73" Panel.Background="Transparent" UIElement.SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="ColumnDefinition_67" Width="Auto"/>
                            <ColumnDefinition x:Uid="ColumnDefinition_68" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Uid="Border_73" FrameworkElement.Width="12" FrameworkElement.Height="12"
                    FrameworkElement.VerticalAlignment="Top" FrameworkElement.Margin="0,4,0,0"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1">
                            <Grid x:Uid="Grid_76">
                                <Path x:Name="CheckMark" x:Uid="Path_23" Shape.Fill="{TemplateBinding Control.Foreground}"
                      Shape.Stretch="Fill" FrameworkElement.Margin="0,0,0,0"
                      Data="M 1,5.3616667 L 4,9.3613333 9,1.3616672 C 9,1.3616672 7.0772775,0.36137562 6.5386388,1.3613338 6,2.3612921 4,6.3612346 4,6.3612346 L 2,4.3613912 Z"
                      UIElement.Visibility="Collapsed" FrameworkElement.Width="8" FrameworkElement.Height="8"/>
                                <Rectangle x:Name="NinchedRectangle" x:Uid="Rectangle_66" UIElement.Visibility="Collapsed"
                           FrameworkElement.Width="8" FrameworkElement.Height="8" Shape.Stretch="Fill"
                           FrameworkElement.Margin="2,2,2,2" Shape.Fill="{TemplateBinding Control.Foreground}"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Uid="ContentPresenter_57" Grid.Column="1"
                              FrameworkElement.Margin="{TemplateBinding Control.Padding}"
                              FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="true"
                              UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_1126" Property="UIElement.IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_1623" Value="{DynamicResource CheckMarkToggleButtonMouseOverBorderBrush}"
                      Property="Control.BorderBrush"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1127" Property="ToggleButton.IsChecked" Value="True">
                            <Setter x:Uid="Setter_1624" TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1139" Property="ToggleButton.IsChecked">
                            <Trigger.Value>
                                <x:NullExtension x:Uid="x:Null_2"/>
                            </Trigger.Value>
                            <Setter x:Uid="Setter_1710" TargetName="NinchedRectangle" Property="UIElement.Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_1128" Property="UIElement.IsEnabled" Value="false">
                            <Setter x:Uid="Setter_1771" Value="{DynamicResource CheckMarkToggleButtonDisabledBorderBrush}"
                      Property="Control.BorderBrush"/>
                            <Setter x:Uid="Setter_1625" Value="{DynamicResource DialogDisabledTextBrush}" Property="Control.Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>